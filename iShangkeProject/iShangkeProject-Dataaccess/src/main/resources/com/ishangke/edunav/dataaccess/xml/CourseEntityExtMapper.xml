<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ishangke.edunav.dataaccess.mapper.CourseEntityExtMapper">
  <resultMap id="CourseExtMap" type="CourseEntityExt">
    <id column="COURSE_ID" property="id" jdbcType="INTEGER" />
    <result column="COURSE_COURSENAME" property="courseName" jdbcType="VARCHAR" />
    <result column="COURSE_COURSETEMPLATEID" property="courseTemplateId" jdbcType="INTEGER" />
    <result column="COURSE_CATEGORYID" property="categoryId" jdbcType="INTEGER" />
    <result column="COURSE_LOCATIONID" property="locationId" jdbcType="INTEGER" />
    <result column="COURSE_CIRCLEID" property="circleId" jdbcType="INTEGER" />
    <result column="COURSE_PARTNERID" property="partnerId" jdbcType="INTEGER" />
    <result column="COURSE_ADDRESSID" property="addressId" jdbcType="INTEGER" />
    <result column="COURSE_REGADDRESSID" property="regAddressId" jdbcType="INTEGER" />
    <result column="COURSE_PRICE" property="price" jdbcType="DOUBLE" />
    <result column="COURSE_ORIGINALPRICE" property="originalPrice" jdbcType="DOUBLE" />
    <result column="COURSE_CASHBACK" property="cashback" jdbcType="DOUBLE" />
    <result column="COURSE_COMMISSION" property="commission" jdbcType="DOUBLE" />
    <result column="COURSE_SERVICECHARGE" property="serviceCharge" jdbcType="DOUBLE" />
    <result column="COURSE_STATUS" property="status" jdbcType="INTEGER" />
    <result column="COURSE_LASTMODIFYTIME" property="lastModifyTime"
      typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
    <result column="COURSE_CREATETIME" property="createTime" typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
    <result column="COURSE_ENABLED" property="enabled" jdbcType="INTEGER" />
    <result column="COURSE_DELETED" property="deleted" jdbcType="INTEGER" />
    <result column="COURSE_COURSEHOURLENGTH" property="courseHourLength" jdbcType="INTEGER" />
    <result column="COURSE_TEACHINGMETHOD" property="teachingMethod" jdbcType="VARCHAR" />
    <result column="COURSE_TEACHINGMATERIALFEE" property="teachingMaterialFee" jdbcType="VARCHAR" />
    <result column="COURSE_DOWNLOADMATERIALS" property="downloadMaterials" jdbcType="VARCHAR" />
    <result column="COURSE_BONUSSERVICE" property="bonusService" jdbcType="VARCHAR" />
    <result column="COURSE_MARKING" property="marking" jdbcType="VARCHAR" />
    <result column="COURSE_ASSIGNMENTS" property="assignments" jdbcType="VARCHAR" />
    <result column="COURSE_TRAIL" property="trail" jdbcType="VARCHAR" />
    <result column="COURSE_QUESTIONSESSION" property="questionSession" jdbcType="VARCHAR" />
    <result column="COURSE_TEACHINGANDEXERCISE" property="teachingAndExercise" jdbcType="VARCHAR" />
    <result column="COURSE_CLASSTEACHER" property="classTeacher" jdbcType="VARCHAR" />
    <result column="COURSE_GOAL" property="goal" jdbcType="VARCHAR" />
    <result column="COURSE_OUTLINE" property="outline" jdbcType="VARCHAR" />
    <result column="COURSE_REGPHONE" property="regPhone" jdbcType="VARCHAR" />
    <result column="COURSE_CONTACT" property="contact" jdbcType="VARCHAR" />
    <result column="COURSE_EXTRACURRICULAR" property="extracurricular" jdbcType="VARCHAR" />
    <result column="COURSE_PASSAGREEMENT" property="passAgreement" jdbcType="VARCHAR" />
    <result column="COURSE_QUALITYASSURANCE" property="qualityAssurance" jdbcType="VARCHAR" />
    <result column="COURSE_QUESTIONBANK" property="questionBank" jdbcType="VARCHAR" />
    <result column="COURSE_TEACHINGMATERIALINTRO" property="teachingMaterialIntro" jdbcType="VARCHAR" />
    <result column="COURSE_STUDYDAYSNOTE" property="studyDaysNote" jdbcType="VARCHAR" />
    <result column="COURSE_STUDYDAYS" property="studyDays" jdbcType="VARCHAR" />
    <result column="COURSE_HIGHSCOREREWARD" property="highScoreReward" jdbcType="VARCHAR" />
    <result column="COURSE_PREREQUEST" property="prerequest" jdbcType="VARCHAR" />
    <result column="COURSE_SUITABLESTUDENT" property="suitableStudent" jdbcType="VARCHAR" />
    <result column="COURSE_OPENCOURSEREQUIREMENT" property="openCourseRequirement" jdbcType="VARCHAR" />
    <result column="COURSE_CERTIFICATION" property="certification" jdbcType="VARCHAR" />
    <result column="COURSE_QUIZ" property="quiz" jdbcType="VARCHAR" />
    <result column="COURSE_COURSEINTRO" property="courseIntro" jdbcType="VARCHAR" />
    <result column="COURSE_REFERENCE" property="reference" jdbcType="VARCHAR" />
    <result column="COURSE_FINISHTIME2" property="finishTime2" jdbcType="INTEGER" />
    <result column="COURSE_STARTTIME2" property="startTime2" jdbcType="INTEGER" />
    <result column="COURSE_FINISHTIME1" property="finishTime1" jdbcType="INTEGER" />
    <result column="COURSE_STARTTIME1" property="startTime1" jdbcType="INTEGER" />
    <result column="COURSE_STARTUPONARRIVAL" property="startUponArrival" jdbcType="INTEGER" />
    <result column="COURSE_BOOKINGTYPE" property="bookingType" jdbcType="INTEGER" />
    <result column="COURSE_CASHBACKDATE" property="cashbackDate"
      typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
    <result column="COURSE_NOREFUNDDATE" property="noRefundDate"
      typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
    <result column="COURSE_CUTOFFDATE" property="cutoffDate" typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
    <result column="COURSE_FINISHDATE" property="finishDate" typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
    <result column="COURSE_STARTDATE" property="startDate" typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
    <result column="COURSE_POPULARITY" property="popularity" jdbcType="INTEGER" />
    <result column="COURSE_CLASSSIZE" property="classSize" jdbcType="VARCHAR" />
    <result column="COURSE_COURSEHOURNUM" property="courseHourNum" jdbcType="INTEGER" />
    <result column="COURSE_CLASSTYPE" property="classType" jdbcType="INTEGER" />
    <result column="COURSE_DISCOUNT" property="discount" jdbcType="DOUBLE" />
    <result column="COURSE_SCHOOLTIMEDAY" property="schooltimeDay" jdbcType="INTEGER" />
    <result column="COURSE_SCHOOLTIMEWEEK" property="schooltimeWeek" jdbcType="INTEGER" />
    <result column="COURSETEMPLATE_RATING" property="rating" jdbcType="DOUBLE" />
    <result column="COURSETEMPLATE_BOOKINGTOTAL" property="bookingTotal" jdbcType="INTEGER" />
    <result column="PARTNER_LOGOURL" property="logoUrl" jdbcType="VARCHAR" />
    <result column="PARTNER_WHOLENAME" property="wholeName" jdbcType="VARCHAR" />
    <result column="PARTNER_INSTNAME" property="instName" jdbcType="VARCHAR" />
    <result column="PARTNER_PARTNERINTRO" property="partnerIntro" jdbcType="VARCHAR" />
    <result column="PARTNER_PARTNERQUALIFICATION" property="partnerQualification" jdbcType="INTEGER" />
    <result column="PARTNER_PARTNERDISTINCTION" property="partnerDistinction" jdbcType="VARCHAR" />
    <result column="PARTNER_RATING" property="partnerRating" jdbcType="DOUBLE" />
    <result column="ADDRESS_DETAIL" property="address" jdbcType="VARCHAR" />
    <result column="ADDRESS_LAT" property="addressLat" jdbcType="DOUBLE" />
    <result column="ADDRESS_LNG" property="addressLng" jdbcType="DOUBLE" />
    <result column="REG_ADDRESS_DETAIL" property="regAddress" jdbcType="VARCHAR" />
    <result column="REG_ADDRESS_LAT" property="regAddressLat" jdbcType="DOUBLE" />
    <result column="REG_ADDRESS_LNG" property="regAddressLng" jdbcType="DOUBLE" />
    <result column="CATEGORY_VALUE" property="categoryValue" jdbcType="VARCHAR" />
    <result column="CATEGORY_NAME" property="categoryName" jdbcType="VARCHAR" />
    <result column="CATEGORY_RANK" property="categoryRank" jdbcType="INTEGER" />
    <result column="LOCATION_VALUE" property="locationValue" jdbcType="VARCHAR" />
    <result column="LOCATION_NAME" property="locationName" jdbcType="VARCHAR" />
    <result column="CIRCLE_VALUE" property="circleValue" jdbcType="VARCHAR" />
    <result column="CIRCLE_NAME" property="circleName" jdbcType="VARCHAR" />
    <collection property="teacherList" javaType="java.util.ArrayList" ofType="TeacherEntityExt">
      <id column="TEACHER_ID" property="id" jdbcType="INTEGER" />
      <result column="TEACHER_PARTNERID" property="partnerId" jdbcType="INTEGER" />
      <result column="TEACHER_IMGURL" property="imgUrl" jdbcType="VARCHAR" />
      <result column="TEACHER_NAME" property="name" jdbcType="VARCHAR" />
      <result column="TEACHER_INTRO" property="intro" jdbcType="VARCHAR" />
      <result column="TEACHER_POPULARITY" property="popularity" jdbcType="INTEGER" />
      <result column="TEACHER_LASTMODIFYTIME" property="lastModifyTime"
        typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
      <result column="TEACHER_CREATETIME" property="createTime"
        typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
      <result column="TEACHER_ENABLED" property="enabled" jdbcType="INTEGER" />
      <result column="TEACHER_DELETED" property="deleted" jdbcType="INTEGER" />
    </collection>
    <collection property="classPhotoList" javaType="java.util.ArrayList" ofType="ClassPhotoEntityExt">
      <id column="CLASSPHOTO_ID" property="id" jdbcType="INTEGER" />
      <result column="CLASSPHOTO_PARTNERID" property="partnerId" jdbcType="INTEGER" />
      <result column="CLASSPHOTO_IMGURL" property="imgUrl" jdbcType="VARCHAR" />
      <result column="CLASSPHOTO_TITLE" property="title" jdbcType="VARCHAR" />
      <result column="CLASSPHOTO_DESCRIPTION" property="description" jdbcType="VARCHAR" />
      <result column="CLASSPHOTO_LASTMODIFYTIME" property="lastModifyTime"
        typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
      <result column="CLASSPHOTO_CREATETIME" property="createTime"
        typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
      <result column="CLASSPHOTO_ENABLED" property="enabled" jdbcType="INTEGER" />
      <result column="CLASSPHOTO_DELETED" property="deleted" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <sql id="Course_Base_Column_List">
    COURSE.ID COURSE_ID,
    COURSE.COURSE_NAME COURSE_COURSENAME,
    COURSE.COURSE_TEMPLATE_ID
    COURSE_COURSETEMPLATEID,
    COURSE.CATEGORY_ID COURSE_CATEGORYID,
    COURSE.LOCATION_ID COURSE_LOCATIONID,
    COURSE.CIRCLE_ID
    COURSE_CIRCLEID,
    COURSE.PARTNER_ID COURSE_PARTNERID,
    COURSE.ADDRESS_ID COURSE_ADDRESSID,
    COURSE.PRICE COURSE_PRICE,
    COURSE.ORIGINAL_PRICE COURSE_ORIGINALPRICE,
    COURSE.CASHBACK COURSE_CASHBACK,
    COURSE.COMMISSION COURSE_COMMISSION,
    COURSE.SERVICE_CHARGE COURSE_SERVICECHARGE,
    COURSE.STATUS COURSE_STATUS,
    COURSE.LAST_MODIFY_TIME
    COURSE_LASTMODIFYTIME,
    COURSE.CREATE_TIME COURSE_CREATETIME,
    COURSE.ENABLED COURSE_ENABLED,
    COURSE.DELETED
    COURSE_DELETED,
    COURSE.COURSE_HOUR_LENGTH COURSE_COURSEHOURLENGTH,
    COURSE.REG_PHONE COURSE_REGPHONE,
    COURSE.CONTACT
    COURSE_CONTACT,
    COURSE.SUITABLE_STUDENT COURSE_SUITABLESTUDENT,
    COURSE.REFERENCE COURSE_REFERENCE,
    COURSE.REG_ADDRESS_ID COURSE_REGADDRESSID,
    COURSE.FINISH_TIME2 COURSE_FINISHTIME2,
    COURSE.START_TIME2
    COURSE_STARTTIME2,
    COURSE.FINISH_TIME1 COURSE_FINISHTIME1,
    COURSE.START_TIME1 COURSE_STARTTIME1,
    COURSE.START_UPON_ARRIVAL COURSE_STARTUPONARRIVAL,
    COURSE.BOOKING_TYPE COURSE_BOOKINGTYPE,
    COURSE.CASHBACK_DATE
    COURSE_CASHBACKDATE,
    COURSE.NO_REFUND_DATE COURSE_NOREFUNDDATE,
    COURSE.CUTOFF_DATE COURSE_CUTOFFDATE,
    COURSE.FINISH_DATE COURSE_FINISHDATE,
    COURSE.START_DATE COURSE_STARTDATE,
    COURSE.POPULARITY COURSE_POPULARITY,
    COURSE.CLASS_SIZE COURSE_CLASSSIZE,
    COURSE.COURSE_HOUR_NUM COURSE_COURSEHOURNUM,
    COURSE.CLASS_TYPE COURSE_CLASSTYPE,
    COURSE.DISCOUNT COURSE_DISCOUNT,
    COURSE.SCHOOLTIME_DAY COURSE_SCHOOLTIMEDAY,
    COURSE.SCHOOLTIME_WEEK
    COURSE_SCHOOLTIMEWEEK,
    COURSE.MARKING
    COURSE_MARKING
  </sql>
  <sql id="Course_Details_Column_List">
    COURSE.TEACHING_METHOD COURSE_TEACHINGMETHOD,
    COURSE.TEACHING_MATERIAL_FEE COURSE_TEACHINGMATERIALFEE,
    COURSE.DOWNLOAD_MATERIALS COURSE_DOWNLOADMATERIALS,
    COURSE.BONUS_SERVICE COURSE_BONUSSERVICE,
    COURSE.ASSIGNMENTS COURSE_ASSIGNMENTS,
    COURSE.TRAIL COURSE_TRAIL,
    COURSE.QUESTION_SESSION
    COURSE_QUESTIONSESSION,
    COURSE.TEACHING_AND_EXERCISE COURSE_TEACHINGANDEXERCISE,
    COURSE.CLASS_TEACHER
    COURSE_CLASSTEACHER,
    COURSE.GOAL COURSE_GOAL,
    COURSE.OUTLINE COURSE_OUTLINE,
    COURSE.EXTRACURRICULAR
    COURSE_EXTRACURRICULAR,
    COURSE.PASS_AGREEMENT COURSE_PASSAGREEMENT,
    COURSE.QUALITY_ASSURANCE COURSE_QUALITYASSURANCE,
    COURSE.QUESTION_BANK COURSE_QUESTIONBANK,
    COURSE.TEACHING_MATERIAL_INTRO
    COURSE_TEACHINGMATERIALINTRO,
    COURSE.STUDY_DAYS_NOTE COURSE_STUDYDAYSNOTE,
    COURSE.STUDY_DAYS COURSE_STUDYDAYS,
    COURSE.HIGH_SCORE_REWARD
    COURSE_HIGHSCOREREWARD,
    COURSE.PREREQUEST COURSE_PREREQUEST,
    COURSE.OPEN_COURSE_REQUIREMENT
    COURSE_OPENCOURSEREQUIREMENT,
    COURSE.CERTIFICATION COURSE_CERTIFICATION,
    COURSE.QUIZ COURSE_QUIZ,
    COURSE.COURSE_INTRO
    COURSE_COURSEINTRO
  </sql>
  <sql id="Partner_Base_Column_List">
    PARTNER.LOGO_URL PARTNER_LOGOURL,
    PARTNER.WHOLE_NAME PARTNER_WHOLENAME,
    PARTNER.INST_NAME PARTNER_INSTNAME,
    PARTNER.PARTNER_QUALIFICATION PARTNER_PARTNERQUALIFICATION,
    PARTNER.RATING PARTNER_RATING
  </sql>
  <sql id="Partner_Details_Column_List">
    PARTNER.PARTNER_INTRO PARTNER_PARTNERINTRO,
    PARTNER.PARTNER_DISTINCTION
    PARTNER_PARTNERDISTINCTION
  </sql>
  <sql id="Address_Base_Column_List">
    ADDRESS.DETAIL ADDRESS_DETAIL,
    ADDRESS.LAT ADDRESS_LAT,
    ADDRESS.LNG ADDRESS_LNG
  </sql>
  <sql id="Reg_Address_Base_Column_List">
    ADDRESS.DETAIL REG_ADDRESS_DETAIL,
    ADDRESS.LAT REG_ADDRESS_LAT,
    ADDRESS.LNG REG_ADDRESS_LNG
  </sql>
  <sql id="Reg_Address_Temp_Column_List">
    temp.REG_ADDRESS_DETAIL REG_ADDRESS_DETAIL,
    temp.REG_ADDRESS_LAT REG_ADDRESS_LAT,
    temp.REG_ADDRESS_LNG
    REG_ADDRESS_LNG
  </sql>
  <sql id="Category_Base_Column_List">
    CATEGORY.VALUE CATEGORY_VALUE,
    CATEGORY.NAME CATEGORY_NAME,
    CATEGORY.RANK CATEGORY_RANK
  </sql>
  <sql id="Location_Base_Column_List">
    LOCATION.VALUE LOCATION_VALUE,
    LOCATION.NAME LOCATION_NAME
  </sql>
  <sql id="Circle_Base_Column_List">
    CIRCLE.VALUE CIRCLE_VALUE,
    CIRCLE.NAME CIRCLE_NAME
  </sql>
  <sql id="CourseTemplate_Base_Column_List">
    COURSE_TEMPLATE.RATING COURSETEMPLATE_RATING,
    COURSE_TEMPLATE.BOOKING_TOTAL
    COURSETEMPLATE_BOOKINGTOTAL
  </sql>
  <sql id="Teacher_Base_Column_List">
    TEACHER.ID TEACHER_ID,
    TEACHER.PARTNER_ID TEACHER_PARTNERID,
    TEACHER.IMG_URL
    TEACHER_IMGURL,
    TEACHER.NAME
    TEACHER_NAME,
    TEACHER.INTRO TEACHER_INTRO,
    TEACHER.POPULARITY
    TEACHER_POPULARITY,
    TEACHER.LAST_MODIFY_TIME
    TEACHER_LASTMODIFYTIME,
    TEACHER.CREATE_TIME
    TEACHER_CREATETIME,
    TEACHER.ENABLED TEACHER_ENABLED,
    TEACHER.DELETED
    TEACHER_DELETED
  </sql>
  <sql id="ClassPhoto_Base_Column_List">
    CLASS_PHOTO.ID CLASSPHOTO_ID,
    CLASS_PHOTO.PARTNER_ID CLASSPHOTO_PARTNERID,
    CLASS_PHOTO.IMG_URL
    CLASSPHOTO_IMGURL,
    CLASS_PHOTO.TITLE CLASSPHOTO_TITLE,
    CLASS_PHOTO.DESCRIPTION CLASSPHOTO_DESCRIPTION,
    CLASS_PHOTO.LAST_MODIFY_TIME
    CLASSPHOTO_LASTMODIFYTIME,
    CLASS_PHOTO.CREATE_TIME CLASSPHOTO_CREATETIME,
    CLASS_PHOTO.ENABLED
    CLASSPHOTO_ENABLED,
    CLASS_PHOTO.DELETED CLASSPHOTO_DELETED
  </sql>
  <!-- add -->
  <insert id="add" parameterType="CourseEntityExt">
    insert into COURSE
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="courseName != null">
        COURSE_NAME,
      </if>
      <if test="courseTemplateId != null and courseTemplateId != 0">
        COURSE_TEMPLATE_ID,
      </if>
      <if test="categoryId != null and categoryId != 0">
        CATEGORY_ID,
      </if>
      <if test="locationId != null and locationId != 0">
        LOCATION_ID,
      </if>
      <if test="circleId != null and circleId != 0">
        CIRCLE_ID,
      </if>
      <if test="partnerId != null and partnerId !=0">
        PARTNER_ID,
      </if>
      <if test="addressId != null and addressId != 0">
        ADDRESS_ID,
      </if>
      <if test="price != null">
        PRICE,
      </if>
      <if test="originalPrice != null">
        ORIGINAL_PRICE,
      </if>
      <if test="cashback != null">
        CASHBACK,
      </if>
      <if test="commission != null">
        COMMISSION,
      </if>
      <if test="serviceCharge != null">
        SERVICE_CHARGE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="lastModifyTime != null">
        LAST_MODIFY_TIME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="enabled != null">
        ENABLED,
      </if>
      <if test="courseHourLength != null">
        COURSE_HOUR_LENGTH,
      </if>
      <if test="teachingMethod != null">
        TEACHING_METHOD,
      </if>
      <if test="teachingMaterialFee != null">
        TEACHING_MATERIAL_FEE,
      </if>
      <if test="downloadMaterials != null">
        DOWNLOAD_MATERIALS,
      </if>
      <if test="bonusService != null">
        BONUS_SERVICE,
      </if>
      <if test="marking != null">
        MARKING,
      </if>
      <if test="assignments != null">
        ASSIGNMENTS,
      </if>
      <if test="trail != null">
        TRAIL,
      </if>
      <if test="questionSession != null">
        QUESTION_SESSION,
      </if>
      <if test="teachingAndExercise != null">
        TEACHING_AND_EXERCISE,
      </if>
      <if test="classTeacher != null">
        CLASS_TEACHER,
      </if>
      <if test="goal != null">
        GOAL,
      </if>
      <if test="outline != null">
        OUTLINE,
      </if>
      <if test="regPhone != null">
        REG_PHONE,
      </if>
      <if test="contact != null">
        CONTACT,
      </if>
      <if test="extracurricular != null">
        EXTRACURRICULAR,
      </if>
      <if test="passAgreement != null">
        PASS_AGREEMENT,
      </if>
      <if test="qualityAssurance != null">
        QUALITY_ASSURANCE,
      </if>
      <if test="questionBank != null">
        QUESTION_BANK,
      </if>
      <if test="teachingMaterialIntro != null">
        TEACHING_MATERIAL_INTRO,
      </if>
      <if test="studyDaysNote != null">
        STUDY_DAYS_NOTE,
      </if>
      <if test="studyDays != null">
        STUDY_DAYS,
      </if>
      <if test="highScoreReward != null">
        HIGH_SCORE_REWARD,
      </if>
      <if test="prerequest != null">
        PREREQUEST,
      </if>
      <if test="suitableStudent != null">
        SUITABLE_STUDENT,
      </if>
      <if test="openCourseRequirement != null">
        OPEN_COURSE_REQUIREMENT,
      </if>
      <if test="certification != null">
        CERTIFICATION,
      </if>
      <if test="quiz != null">
        QUIZ,
      </if>
      <if test="courseIntro != null">
        COURSE_INTRO,
      </if>
      <if test="reference != null">
        REFERENCE,
      </if>
      <if test="regAddressId != null and regAddressId != 0">
        REG_ADDRESS_ID,
      </if>
      <if test="finishTime2 != null">
        FINISH_TIME2,
      </if>
      <if test="startTime2 != null">
        START_TIME2,
      </if>
      <if test="finishTime1 != null">
        FINISH_TIME1,
      </if>
      <if test="startTime1 != null">
        START_TIME1,
      </if>
      <if test="startUponArrival != null">
        START_UPON_ARRIVAL,
      </if>
      <if test="bookingType != null">
        BOOKING_TYPE,
      </if>
      <if test="cashbackDate != null">
        CASHBACK_DATE,
      </if>
      <if test="noRefundDate != null">
        NO_REFUND_DATE,
      </if>
      <if test="cutoffDate != null">
        CUTOFF_DATE,
      </if>
      <if test="finishDate != null">
        FINISH_DATE,
      </if>
      <if test="startDate != null">
        START_DATE,
      </if>
      <if test="popularity != null">
        POPULARITY,
      </if>
      <if test="classSize != null">
        CLASS_SIZE,
      </if>
      <if test="courseHourNum != null">
        COURSE_HOUR_NUM,
      </if>
      <if test="classType != null">
        CLASS_TYPE,
      </if>
      <if test="discount != null">
        DISCOUNT,
      </if>
      <if test="schooltimeDay != null">
        SCHOOLTIME_DAY,
      </if>
      <if test="schooltimeWeek != null">
        SCHOOLTIME_WEEK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseTemplateId != null and courseTemplateId != 0">
        #{courseTemplateId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null and categoryId != 0">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null and locationId != 0 ">
        #{locationId,jdbcType=INTEGER},
      </if>
      <if test="circleId != null and circleId != 0">
        #{circleId,jdbcType=INTEGER},
      </if>
      <if test="partnerId != null and partnerId != 0">
        #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="addressId != null and addressId != 0">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="originalPrice != null">
        #{originalPrice,jdbcType=DOUBLE},
      </if>
      <if test="cashback != null">
        #{cashback,jdbcType=DOUBLE},
      </if>
      <if test="commission != null">
        #{commission,jdbcType=DOUBLE},
      </if>
      <if test="serviceCharge != null">
        #{serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="lastModifyTime != null">
        #{lastModifyTime,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="createTime != null">
        #{createTime,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="courseHourLength != null">
        #{courseHourLength,jdbcType=INTEGER},
      </if>
      <if test="teachingMethod != null">
        #{teachingMethod,jdbcType=VARCHAR},
      </if>
      <if test="teachingMaterialFee != null">
        #{teachingMaterialFee,jdbcType=VARCHAR},
      </if>
      <if test="downloadMaterials != null">
        #{downloadMaterials,jdbcType=VARCHAR},
      </if>
      <if test="bonusService != null">
        #{bonusService,jdbcType=VARCHAR},
      </if>
      <if test="marking != null">
        #{marking,jdbcType=VARCHAR},
      </if>
      <if test="assignments != null">
        #{assignments,jdbcType=VARCHAR},
      </if>
      <if test="trail != null">
        #{trail,jdbcType=VARCHAR},
      </if>
      <if test="questionSession != null">
        #{questionSession,jdbcType=VARCHAR},
      </if>
      <if test="teachingAndExercise != null">
        #{teachingAndExercise,jdbcType=VARCHAR},
      </if>
      <if test="classTeacher != null">
        #{classTeacher,jdbcType=VARCHAR},
      </if>
      <if test="goal != null">
        #{goal,jdbcType=VARCHAR},
      </if>
      <if test="outline != null">
        #{outline,jdbcType=VARCHAR},
      </if>
      <if test="regPhone != null">
        #{regPhone,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="extracurricular != null">
        #{extracurricular,jdbcType=VARCHAR},
      </if>
      <if test="passAgreement != null">
        #{passAgreement,jdbcType=VARCHAR},
      </if>
      <if test="qualityAssurance != null">
        #{qualityAssurance,jdbcType=VARCHAR},
      </if>
      <if test="questionBank != null">
        #{questionBank,jdbcType=VARCHAR},
      </if>
      <if test="teachingMaterialIntro != null">
        #{teachingMaterialIntro,jdbcType=VARCHAR},
      </if>
      <if test="studyDaysNote != null">
        #{studyDaysNote,jdbcType=VARCHAR},
      </if>
      <if test="studyDays != null">
        #{studyDays,jdbcType=VARCHAR},
      </if>
      <if test="highScoreReward != null">
        #{highScoreReward,jdbcType=VARCHAR},
      </if>
      <if test="prerequest != null">
        #{prerequest,jdbcType=VARCHAR},
      </if>
      <if test="suitableStudent != null">
        #{suitableStudent,jdbcType=VARCHAR},
      </if>
      <if test="openCourseRequirement != null">
        #{openCourseRequirement,jdbcType=VARCHAR},
      </if>
      <if test="certification != null">
        #{certification,jdbcType=VARCHAR},
      </if>
      <if test="quiz != null">
        #{quiz,jdbcType=VARCHAR},
      </if>
      <if test="courseIntro != null">
        #{courseIntro,jdbcType=VARCHAR},
      </if>
      <if test="reference != null">
        #{reference,jdbcType=VARCHAR},
      </if>
      <if test="regAddressId != null and regAddressId != 0">
        #{regAddressId,jdbcType=INTEGER},
      </if>
      <if test="finishTime2 != null">
        #{finishTime2,jdbcType=INTEGER},
      </if>
      <if test="startTime2 != null">
        #{startTime2,jdbcType=INTEGER},
      </if>
      <if test="finishTime1 != null">
        #{finishTime1,jdbcType=INTEGER},
      </if>
      <if test="startTime1 != null">
        #{startTime1,jdbcType=INTEGER},
      </if>
      <if test="startUponArrival != null">
        #{startUponArrival,jdbcType=INTEGER},
      </if>
      <if test="bookingType != null">
        #{bookingType,jdbcType=INTEGER},
      </if>
      <if test="cashbackDate != null">
        #{cashbackDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="noRefundDate != null">
        #{noRefundDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="cutoffDate != null">
        #{cutoffDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="finishDate != null">
        #{finishDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="startDate != null">
        #{startDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="popularity != null">
        #{popularity,jdbcType=INTEGER},
      </if>
      <if test="classSize != null">
        #{classSize,jdbcType=VARCHAR},
      </if>
      <if test="courseHourNum != null">
        #{courseHourNum,jdbcType=INTEGER},
      </if>
      <if test="classType != null">
        #{classType,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DOUBLE},
      </if>
      <if test="schooltimeDay != null">
        #{schooltimeDay,jdbcType=INTEGER},
      </if>
      <if test="schooltimeWeek != null">
        #{schooltimeWeek,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
      SELECT
      LAST_INSERT_ID()
    </selectKey>
  </insert>

  <!-- deleteById -->
  <update id="deleteById" parameterType="java.lang.Integer">
    update COURSE set DELETED = 1
    where ID =
    #{id,jdbcType=INTEGER}
  </update>

  <!-- update -->
  <update id="update" parameterType="CourseEntityExt">
    update COURSE
    <set>
      <if test="courseName != null">
        COURSE_NAME = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseTemplateId != null and courseTemplateId != 0">
        COURSE_TEMPLATE_ID = #{courseTemplateId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null and categoryId != 0">
        CATEGORY_ID = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null and locationId != 0">
        LOCATION_ID = #{locationId,jdbcType=INTEGER},
      </if>
      <if test="circleId != null and circleId != 0">
        CIRCLE_ID = #{circleId,jdbcType=INTEGER},
      </if>
      <if test="partnerId != null and partnerId != 0">
        PARTNER_ID = #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="addressId != null and addressId != 0">
        ADDRESS_ID = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        PRICE = #{price,jdbcType=DOUBLE},
      </if>
      <if test="originalPrice != null">
        ORIGINAL_PRICE = #{originalPrice,jdbcType=DOUBLE},
      </if>
      <if test="cashback != null">
        CASHBACK = #{cashback,jdbcType=DOUBLE},
      </if>
      <if test="commission != null">
        COMMISSION = #{commission,jdbcType=DOUBLE},
      </if>
      <if test="serviceCharge != null">
        SERVICE_CHARGE = #{serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="lastModifyTime != null">
        LAST_MODIFY_TIME =
        #{lastModifyTime,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="createTime != null">
        CREATE_TIME =
        #{createTime,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="enabled != null">
        ENABLED = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="courseHourLength != null">
        COURSE_HOUR_LENGTH =
        #{courseHourLength,jdbcType=INTEGER},
      </if>
      <if test="teachingMethod != null">
        TEACHING_METHOD = #{teachingMethod,jdbcType=VARCHAR},
      </if>
      <if test="teachingMaterialFee != null">
        TEACHING_MATERIAL_FEE =
        #{teachingMaterialFee,jdbcType=VARCHAR},
      </if>
      <if test="downloadMaterials != null">
        DOWNLOAD_MATERIALS =
        #{downloadMaterials,jdbcType=VARCHAR},
      </if>
      <if test="bonusService != null">
        BONUS_SERVICE = #{bonusService,jdbcType=VARCHAR},
      </if>
      <if test="marking != null">
        MARKING = #{marking,jdbcType=VARCHAR},
      </if>
      <if test="assignments != null">
        ASSIGNMENTS = #{assignments,jdbcType=VARCHAR},
      </if>
      <if test="trail != null">
        TRAIL = #{trail,jdbcType=VARCHAR},
      </if>
      <if test="questionSession != null">
        QUESTION_SESSION = #{questionSession,jdbcType=VARCHAR},
      </if>
      <if test="teachingAndExercise != null">
        TEACHING_AND_EXERCISE =
        #{teachingAndExercise,jdbcType=VARCHAR},
      </if>
      <if test="classTeacher != null">
        CLASS_TEACHER = #{classTeacher,jdbcType=VARCHAR},
      </if>
      <if test="goal != null">
        GOAL = #{goal,jdbcType=VARCHAR},
      </if>
      <if test="outline != null">
        OUTLINE = #{outline,jdbcType=VARCHAR},
      </if>
      <if test="regPhone != null">
        REG_PHONE = #{regPhone,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        CONTACT = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="extracurricular != null">
        EXTRACURRICULAR = #{extracurricular,jdbcType=VARCHAR},
      </if>
      <if test="passAgreement != null">
        PASS_AGREEMENT = #{passAgreement,jdbcType=VARCHAR},
      </if>
      <if test="qualityAssurance != null">
        QUALITY_ASSURANCE =
        #{qualityAssurance,jdbcType=VARCHAR},
      </if>
      <if test="questionBank != null">
        QUESTION_BANK = #{questionBank,jdbcType=VARCHAR},
      </if>
      <if test="teachingMaterialIntro != null">
        TEACHING_MATERIAL_INTRO =
        #{teachingMaterialIntro,jdbcType=VARCHAR},
      </if>
      <if test="studyDaysNote != null">
        STUDY_DAYS_NOTE = #{studyDaysNote,jdbcType=VARCHAR},
      </if>
      <if test="studyDays != null">
        STUDY_DAYS = #{studyDays,jdbcType=VARCHAR},
      </if>
      <if test="highScoreReward != null">
        HIGH_SCORE_REWARD = #{highScoreReward,jdbcType=VARCHAR},
      </if>
      <if test="prerequest != null">
        PREREQUEST = #{prerequest,jdbcType=VARCHAR},
      </if>
      <if test="suitableStudent != null">
        SUITABLE_STUDENT = #{suitableStudent,jdbcType=VARCHAR},
      </if>
      <if test="openCourseRequirement != null">
        OPEN_COURSE_REQUIREMENT =
        #{openCourseRequirement,jdbcType=VARCHAR},
      </if>
      <if test="certification != null">
        CERTIFICATION = #{certification,jdbcType=VARCHAR},
      </if>
      <if test="quiz != null">
        QUIZ = #{quiz,jdbcType=VARCHAR},
      </if>
      <if test="courseIntro != null">
        COURSE_INTRO = #{courseIntro,jdbcType=VARCHAR},
      </if>
      <if test="reference != null">
        REFERENCE = #{reference,jdbcType=VARCHAR},
      </if>
      <if test="regAddressId != null and regAddressId != 0">
        REG_ADDRESS_ID = #{regAddressId,jdbcType=INTEGER},
      </if>
      <if test="finishTime2 != null">
        FINISH_TIME2 = #{finishTime2,jdbcType=INTEGER},
      </if>
      <if test="startTime2 != null">
        START_TIME2 = #{startTime2,jdbcType=INTEGER},
      </if>
      <if test="finishTime1 != null">
        FINISH_TIME1 = #{finishTime1,jdbcType=INTEGER},
      </if>
      <if test="startTime1 != null">
        START_TIME1 = #{startTime1,jdbcType=INTEGER},
      </if>
      <if test="startUponArrival != null">
        START_UPON_ARRIVAL =
        #{startUponArrival,jdbcType=INTEGER},
      </if>
      <if test="bookingType != null">
        BOOKING_TYPE = #{bookingType,jdbcType=INTEGER},
      </if>
      <if test="cashbackDate != null">
        CASHBACK_DATE =
        #{cashbackDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="noRefundDate != null">
        NO_REFUND_DATE =
        #{noRefundDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="cutoffDate != null">
        CUTOFF_DATE =
        #{cutoffDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="finishDate != null">
        FINISH_DATE =
        #{finishDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="startDate != null">
        START_DATE =
        #{startDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="popularity != null">
        POPULARITY = #{popularity,jdbcType=INTEGER},
      </if>
      <if test="classSize != null">
        CLASS_SIZE = #{classSize,jdbcType=VARCHAR},
      </if>
      <if test="courseHourNum != null">
        COURSE_HOUR_NUM = #{courseHourNum,jdbcType=INTEGER},
      </if>
      <if test="classType != null">
        CLASS_TYPE = #{classType,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        DISCOUNT = #{discount,jdbcType=DOUBLE},
      </if>
      <if test="startTime1 != null">
        SCHOOLTIME_DAY = #{schooltimeDay,jdbcType=INTEGER},
      </if>
      <if test="startTime1 != null">
        SCHOOLTIME_WEEK = #{schooltimeWeek,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <!-- getCount -->
  <select id="getCount" resultType="int">
    select count(ID) from COURSE where DELETED = 0
  </select>

  <!-- getInfoById -->
  <select id="getInfoById" parameterType="int" resultMap="CourseExtMap">
    select
    <include refid="Course_Base_Column_List"></include>
    ,
    <include refid="Course_Details_Column_List"></include>
    ,
    <include refid="Teacher_Base_Column_List"></include>
    ,
    <include refid="ClassPhoto_Base_Column_List"></include>
    ,
    <include refid="Partner_Base_Column_List"></include>
    ,
    <include refid="Partner_Details_Column_List"></include>
    ,
    <include refid="Address_Base_Column_List"></include>
    ,
    <include refid="Reg_Address_Temp_Column_List"></include>
    ,
    <include refid="Category_Base_Column_List"></include>
    ,
    <include refid="Location_Base_Column_List"></include>
    ,
    <include refid="Circle_Base_Column_List"></include>
    ,
    <include refid="CourseTemplate_Base_Column_List"></include>
    from COURSE COURSE
    left join COURSE_TEACHER COURSE_TEACHER
    ON COURSE_TEACHER.COURSE_ID = COURSE.ID
    left join
    TEACHER
    TEACHER
    ON
    TEACHER.ID = COURSE_TEACHER.TEACHER_ID
    left join COURSE_CLASS_PHOTO
    COURSE_CLASS_PHOTO
    ON
    COURSE_CLASS_PHOTO.COURSE_ID =
    COURSE.ID
    left join CLASS_PHOTO CLASS_PHOTO
    ON
    CLASS_PHOTO.ID =
    COURSE_CLASS_PHOTO.CLASS_PHOTO_ID
    left join PARTNER PARTNER
    ON
    PARTNER.ID =
    COURSE.PARTNER_ID
    left join CATEGORY CATEGORY
    ON CATEGORY.ID = COURSE.CATEGORY_ID
    left join CIRCLE CIRCLE
    ON
    CIRCLE.ID
    = COURSE.CIRCLE_ID
    left join LOCATION LOCATION
    ON LOCATION.ID = COURSE.LOCATION_ID
    left join
    ADDRESS ADDRESS
    ON ADDRESS.ID =
    COURSE.ADDRESS_ID
    left join COURSE_TEMPLATE
    COURSE_TEMPLATE
    ON
    COURSE_TEMPLATE.ID = COURSE.COURSE_TEMPLATE_ID
    left join
    (select COURSE.ID COURSE_ID,
    <include refid="Reg_Address_Base_Column_List"></include>
    from COURSE left join ADDRESS ADDRESS ON ADDRESS.ID = COURSE.ADDRESS_ID) temp on COURSE.ID = temp.COURSE_ID
    where
    COURSE.DELETED = 0 AND COURSE.ID = #{id}
  </select>
  <!-- listAll -->
  <select id="listAll" resultMap="CourseExtMap">
    SELECT
    <include refid="Course_Base_Column_List" />
    from COURSE where COURSE.DELETED = 0
  </select>
  <!-- getById -->
  <select id="getById" parameterType="int" resultMap="CourseExtMap">
    SELECT
    <include refid="Course_Base_Column_List" />
    from COURSE where COURSE.DELETED = 0 and COURSE.ID = #{id,jdbcType=INTEGER}
  </select>
  <!-- listPromotionByCategoryId -->
  <select id="listPromotionByCategoryId" resultMap="CourseExtMap">
    select
    <include refid="Course_Base_Column_List"></include>
    ,
    <include refid="Partner_Base_Column_List"></include>
    ,
    <include refid="Address_Base_Column_List"></include>
    from COURSE COURSE
    left join PARTNER PARTNER
    ON PARTNER.ID = COURSE.PARTNER_ID
    left join ADDRESS ADDRESS
    ON ADDRESS.ID =
    COURSE.ADDRESS_ID
    join COURSE_PROMOTION COURSEPROMOTION
    on COURSE.ID = COURSE_PROMOTIOMN.COURSE_ID and
    COURSE_PROMOTION.COURSE_ID = #{categoryId,jdbcType=INTEGER}
    WHERE
    COURSE.DELETED = 0
    <if test="page != null and page.orderByEntities != null and page.orderByEntities.size() > 0">
      ORDER BY
      <foreach collection="page.orderByEntities" item="listItem" separator=",">
        COURSE.${listItem.columnKey}
        ${listItem.order}
      </foreach>
    </if>

    <if test="page !=null and page.offset != null and page.size != null">
      LIMIT #{page.offset,jdbcType=INTEGER},#{page.size,jdbcType=INTEGER}
    </if>
  </select>
  <!-- getListPromotionByCategoryIdCount -->
  <select id="getListPromotionByCategoryIdCount" resultType="int">
    select COUNT(*) from (
    select
    <include refid="Course_Base_Column_List"></include>
    from COURSE COURSE
    join COURSE_PROMOTION COURSEPROMOTION
    on COURSE.ID = COURSE_PROMOTIOMN.COURSE_ID and
    COURSE_PROMOTION.COURSE_ID = #{categoryId,jdbcType=INTEGER}
    WHERE
    COURSE.DELETED = 0
    ) as total
  </select>
  <!-- list -->
  <select id="list" parameterType="map" resultMap="CourseExtMap">
    select
    <include refid="Course_Base_Column_List"></include>
    ,
    <if test="entity != null">
      <if test="entity.id == null or entity.id == 0">
        <if test="entity.idSet != null and entity.idSet.size() > 0">
          <include refid="Course_Details_Column_List"></include>,
        </if>
      </if>
    </if>
    <include refid="Partner_Base_Column_List"></include>
    ,
    <include refid="Address_Base_Column_List"></include>
    ,
    <include refid="Category_Base_Column_List"></include>
    ,
    <include refid="Location_Base_Column_List"></include>
    ,
    <include refid="Circle_Base_Column_List"></include>
    ,
    <include refid="CourseTemplate_Base_Column_List"></include>
    from COURSE COURSE
    left join PARTNER PARTNER
    ON PARTNER.ID = COURSE.PARTNER_ID
    left join CATEGORY CATEGORY
    ON
    CATEGORY.ID =
    COURSE.CATEGORY_ID
    left join CIRCLE CIRCLE
    ON CIRCLE.ID = COURSE.CIRCLE_ID
    left join LOCATION
    LOCATION
    ON
    LOCATION.ID =
    COURSE.LOCATION_ID
    left join ADDRESS ADDRESS
    ON ADDRESS.ID = COURSE.ADDRESS_ID
    left join COURSE_TEMPLATE
    COURSE_TEMPLATE
    ON
    COURSE_TEMPLATE.ID = COURSE.COURSE_TEMPLATE_ID
    WHERE
    COURSE.DELETED = 0
    <if test="entity != null">
      <if test="entity.courseName != null and !entity.courseName.equals('')">
        AND COURSE.COURSE_NAME LIKE "%"#{entity.courseName,jdbcType=VARCHAR}"%"
      </if>

      <if test="entity.categoryValue != null and !entity.categoryValue.equals('')">
        AND CATEGORY.VALUE LIKE #{entity.categoryValue,jdbcType=VARCHAR}"%"
      </if>

      <if test="entity.circleValue != null and !entity.circleValue.equals('')">
        AND CIRCLE.VALUE LIKE #{entity.circleValue,jdbcType=VARCHAR}"%"
      </if>
      <if test="entity.locationValue != null and !entity.locationValue.equals('')">
        AND LOCATION.VALUE LIKE #{entity.locationValue,jdbcType=VARCHAR}"%"
      </if>

      <if test="entity.reference != null and !entity.reference.equals('')">
        AND COURSE.REFERENCE LIKE "%"#{entity.reference,jdbcType=VARCHAR}"%"
      </if>

      <if test="entity.id != null and entity.id != 0">
        AND COURSE.ID = #{entity.id,jdbcType=INTEGER}
      </if>
      <if test="entity.id == null or entity.id == 0">
        <if test="entity.idSet != null and entity.idSet.size() > 0">
          AND COURSE.ID IN
          <foreach collection="entity.idSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.categoryId != null and entity.categoryId != 0">
        AND COURSE.CATEGORY_ID = #{entity.categoryId,jdbcType=INTEGER}
      </if>
      <if test="entity.categoryId == null or entity.categoryId == 0">
        <if test="entity.categoryIdSet != null and entity.categoryIdSet.size() > 0">
          AND COURSE.CATEGORY_ID IN
          <foreach collection="entity.categoryIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>



      <if test="entity.locationId != null and entity.locationId != 0">
        AND COURSE.LOCATION_ID = #{entity.locationId,jdbcType=INTEGER}
      </if>
      <if test="entity.locationId == null or entity.locationId == 0">
        <if test="entity.locationIdSet != null and entity.locationIdSet.size() > 0">
          AND COURSE.LOCATION_ID IN
          <foreach collection="entity.locationIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.circleId != null and entity.circleId != 0">
        AND COURSE.CIRCLE_ID = #{entity.circleId,jdbcType=INTEGER}
      </if>
      <if test="entity.circleId == null or entity.circleId == 0">
        <if test="entity.circleIdSet != null and entity.circleIdSet.size() > 0">
          AND COURSE.CIRCLE_ID IN
          <foreach collection="entity.circleIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.partnerId != null and entity.partnerId != 0">
        AND COURSE.PARTNER_ID = #{entity.partnerId,jdbcType=INTEGER}
      </if>
      <if test="entity.partnerId == null or entity.partnerId == 0">
        <if test="entity.partnerIdSet != null and entity.partnerIdSet.size() > 0">
          AND COURSE.PARTNER_ID IN
          <foreach collection="entity.partnerIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.status != null">
        AND COURSE.STATUS = #{entity.status,jdbcType=INTEGER}
      </if>
      <if test="entity.status == null">
        <if test="entity.statusSet != null and entity.statusSet.size() > 0">
          AND COURSE.STATUS IN
          <foreach collection="entity.statusSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.courseTemplateId != null and entity.courseTemplateId != 0">
        AND COURSE.COURSE_TEMPLATE_ID = #{entity.courseTemplateId,jdbcType=INTEGER}
      </if>
      <if test="entity.courseTemplateId == null or entity.courseTemplateId == 0">
        <if test="entity.courseTemplateIdSet != null and entity.courseTemplateIdSet.size() > 0">
          AND COURSE.COURSE_TEMPLATE_ID IN
          <foreach collection="entity.courseTemplateIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.price != null">
        AND COURSE.PRICE = #{entity.price,jdbcType=DOUBLE}
      </if>
      <if test="entity.price == null">
        <if test="entity.priceStart != null">
          <![CDATA[AND (COURSE.PRICE >= #{entity.priceStart,jdbcType=DOUBLE}]]>
          OR COURSE.PRICE is null)
        </if>
        <if test="entity.priceEnd != null">
          <![CDATA[AND (COURSE.PRICE <= #{entity.priceEnd,jdbcType=DOUBLE}]]>
          OR COURSE.PRICE is null)
        </if>
      </if>

      <!-- 做的简单点，只要给了这个值 我们就默认过滤commission值的course -->
      <if test="entity.commission != null and entity.commission > 0">
        AND COURSE.COMMISSION > 0
      </if>

      <if test="entity.originalPrice != null">
        AND COURSE.ORIGINAL_PRICE = #{entity.originalPrice,jdbcType=DOUBLE}
      </if>
      <if test="entity.originalPrice == null">
        <if test="entity.originalPriceStart != null">
          <![CDATA[AND COURSE.ORIGINAL_PRICE >= #{entity.originalPriceStart,jdbcType=DOUBLE}]]>
        </if>
        <if test="entity.originalPriceEnd != null">
          <![CDATA[AND COURSE.ORIGINAL_PRICE <= #{entity.originalPriceEnd,jdbcType=DOUBLE}]]>
        </if>
      </if>

      <if test="entity.cashback != null">
        AND COURSE.CASHBACK = #{entity.cashback,jdbcType=DOUBLE}
      </if>
      <if test="entity.cashback == null">
        <if test="entity.cashbackStart != null">
          <![CDATA[AND COURSE.CASHBACK >= #{entity.cashbackStart,jdbcType=DOUBLE}]]>
        </if>
        <if test="entity.cashbackEnd != null">
          <![CDATA[AND COURSE.CASHBACK <= #{entity.cashbackEnd,jdbcType=DOUBLE}]]>
        </if>
      </if>

      <if test="entity.popularity != null">
        AND COURSE.POPULARITY = #{entity.popularity,jdbcType=INTEGER}
      </if>
      <if test="entity.popularity == null">
        <if test="entity.popularityStart != null">
          <![CDATA[AND COURSE.POPULARITY >= #{entity.popularityStart,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.popularityEnd != null">
          <![CDATA[AND COURSE.POPULARITY <= #{entity.popularityEnd,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.popularitySet != null and entity.popularitySet.size() > 0">
          AND COURSE.POPULARITY IN
          <foreach collection="entity.popularitySet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.courseHourNum != null">
        AND COURSE.COURSE_HOUR_NUM = #{entity.courseHourNum,jdbcType=INTEGER}
      </if>
      <if test="entity.courseHourNum == null">
        <if test="entity.courseHourNumStart != null">
          <![CDATA[AND COURSE.COURSE_HOUR_NUM >= #{entity.courseHourNumStart,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.courseHourNumEnd != null">
          <![CDATA[AND COURSE.COURSE_HOUR_NUM <= #{entity.courseHourNumEnd,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.courseHourNumSet != null and entity.courseHourNumSet.size() > 0">
          AND COURSE.COURSE_HOUR_NUM IN
          <foreach collection="entity.courseHourNumSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.startDate != null">
        AND COURSE.START_DATE =
        #{entity.startDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.startDate == null">
        <if test="entity.startDateStart != null">
          <![CDATA[AND (COURSE.START_DATE >= #{entity.startDateStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
          OR COURSE.START_DATE is null)
        </if>
        <if test="entity.startDateEnd != null">
          <![CDATA[AND (COURSE.START_DATE <= #{entity.startDateEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
          OR COURSE.START_DATE is null)
        </if>
      </if>

      <if test="entity.finishDate != null">
        AND COURSE.FINISH_DATE =
        #{entity.finishDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.finishDate == null">
        <if test="entity.finishDateStart != null">
          <![CDATA[AND COURSE.FINISH_DATE >= #{entity.finishDateStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.finishDateEnd != null">
          <![CDATA[AND COURSE.FINISH_DATE <= #{entity.finishDateEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>

      <if test="entity.noRefundDate != null">
        AND COURSE.NO_REFUND_DATE =
        #{entity.noRefundDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.noRefundDate == null">
        <if test="entity.noRefundDateStart != null">
          <![CDATA[AND COURSE.NO_REFUND_DATE >= #{entity.noRefundDateStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.noRefundDateEnd != null">
          <![CDATA[AND COURSE.NO_REFUND_DATE <= #{entity.noRefundDateEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>

      <if test="entity.cashbackDate != null">
        AND COURSE.CASHBACK_DATE =
        #{entity.cashbackDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.cashbackDate == null">
        <if test="entity.cashbackDateStart != null">
          <![CDATA[AND COURSE.CASHBACK_DATE >= #{entity.cashbackDateStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.cashbackDateEnd != null">
          <![CDATA[AND COURSE.CASHBACK_DATE <= #{entity.cashbackDateEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>

      <if test="entity.cutoffDate != null">
        AND COURSE.CUTOFF_DATE =
        #{entity.cutoffDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.cutoffDate == null">
        <if test="entity.cutoffDateStart != null">
          <![CDATA[AND COURSE.CUTOFF_DATE >= #{entity.cutoffDateStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.cutoffDateEnd != null">
          <![CDATA[AND COURSE.CUTOFF_DATE <= #{entity.cutoffDateEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>

      <if test="entity.classType != null">
        AND COURSE.CLASS_TYPE = #{entity.classType,jdbcType=INTEGER}
      </if>
      <if test="entity.classType == null">
        <if test="entity.classTypeSet != null and entity.classTypeSet.size() > 0">
          AND COURSE.CLASS_TYPE IN
          <foreach collection="entity.classTypeSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.discount != null">
        AND COURSE.DISCOUNT = #{entity.discount,jdbcType=DOUBLE}
      </if>
      <if test="entity.discount == null">
        <if test="entity.discountStart != null">
          <![CDATA[AND COURSE.DISCOUNT >= #{entity.discountStart,jdbcType=DOUBLE}]]>
        </if>
        <if test="entity.discountEnd != null">
          <![CDATA[AND COURSE.DISCOUNT <= #{entity.discountEnd,jdbcType=DOUBLE}]]>
        </if>
      </if>

      <if test="entity.schooltimeDay != null">
        AND <![CDATA[(COURSE.SCHOOLTIME_DAY &]]>
        #{entity.schooltimeDay,jdbcType=INTEGER}) > 0
      </if>
      <if test="entity.schooltimeDay == null">
        <if test="entity.schooltimeDaySet != null and entity.schooltimeDaySet.size() > 0">
          AND COURSE.SCHOOLTIME_DAY IN
          <foreach collection="entity.schooltimeDaySet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.schooltimeWeek != null">
        AND <![CDATA[(COURSE.SCHOOLTIME_WEEK &]]>
        #{entity.schooltimeWeek,jdbcType=INTEGER}) > 0
      </if>
      <if test="entity.schooltimeWeek == null">
        <if test="entity.schooltimeWeekSet != null and entity.schooltimeWeekSet.size() > 0">
          AND COURSE.SCHOOLTIME_WEEK IN
          <foreach collection="entity.schooltimeWeekSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.lastModifyTime != null">
        AND COURSE.LAST_MODIFY_TIME =
        #{entity.lastModifyTime,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.lastModifyTime == null">
        <if test="entity.lastModifyTimeStart != null">
          <![CDATA[AND COURSE.LAST_MODIFY_TIME >= #{entity.lastModifyTimeStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.lastModifyTimeEnd != null">
          <![CDATA[AND COURSE.LAST_MODIFY_TIME <= #{entity.lastModifyTimeEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>

      <if test="entity.createTime != null">
        AND COURSE.CREATE_TIME =
        #{entity.createTime,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.createTime == null">
        <if test="entity.createTimeStart != null">
          <![CDATA[AND COURSE.CREATE_TIME >= #{entity.createTimeStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.createTimeEnd != null">
          <![CDATA[AND COURSE.CREATE_TIME <= #{entity.createTimeEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>
      <if test="entity.enabled != null">
        AND COURSE.ENABLED = #{entity.enabled,jdbcType=INTEGER}
      </if>
    </if>

    <if test="page != null and page.orderByEntities != null and page.orderByEntities.size() > 0">
      ORDER BY
      <foreach collection="page.orderByEntities" item="listItem" separator=",">
        COURSE.${listItem.columnKey} is null, COURSE.${listItem.columnKey}
        ${listItem.order}
      </foreach>
    </if>

    <if test="page !=null and page.offset != null and page.size != null">
      LIMIT #{page.offset,jdbcType=INTEGER},#{page.size,jdbcType=INTEGER}
    </if>
  </select>

  <!-- getListCount -->
  <select id="getListCount" parameterType="map" resultType="int">
    SELECT COUNT(*) FROM (
    select
    <include refid="Course_Base_Column_List"></include>
    from COURSE COURSE
    left join PARTNER PARTNER
    ON PARTNER.ID = COURSE.PARTNER_ID
    left join CATEGORY CATEGORY
    ON
    CATEGORY.ID =
    COURSE.CATEGORY_ID
    left join CIRCLE CIRCLE
    ON CIRCLE.ID = COURSE.CIRCLE_ID
    left join LOCATION
    LOCATION
    ON
    LOCATION.ID =
    COURSE.LOCATION_ID
    left join ADDRESS ADDRESS
    ON ADDRESS.ID = COURSE.ADDRESS_ID
    left join COURSE_TEMPLATE
    COURSE_TEMPLATE
    ON
    COURSE_TEMPLATE.ID = COURSE.COURSE_TEMPLATE_ID

    WHERE
    COURSE.DELETED = 0
    <if test="entity != null">
      <if test="entity.courseName != null and !entity.courseName.equals('')">
        AND COURSE.COURSE_NAME LIKE "%"#{entity.courseName,jdbcType=VARCHAR}"%"
      </if>

      <if test="entity.reference != null and !entity.reference.equals('')">
        AND COURSE.REFERENCE LIKE "%"#{entity.reference,jdbcType=VARCHAR}"%"
      </if>

      <if test="entity.id != null and entity.id != 0">
        AND COURSE.ID = #{entity.id,jdbcType=INTEGER}
      </if>
      <if test="entity.id == null or entity.id == 0">
        <if test="entity.idSet != null and entity.idSet.size() > 0">
          AND COURSE.ID IN
          <foreach collection="entity.idSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.categoryId != null and entity.categoryId != 0">
        AND COURSE.CATEGORY_ID = #{entity.categoryId,jdbcType=INTEGER}
      </if>
      <if test="entity.categoryId == null or entity.categoryId == 0">
        <if test="entity.categoryIdSet != null and entity.categoryIdSet.size() > 0">
          AND COURSE.CATEGORY_ID IN
          <foreach collection="entity.categoryIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.categoryValue != null and !entity.categoryValue.equals('')">
        AND CATEGORY.VALUE LIKE #{entity.categoryValue,jdbcType=VARCHAR}"%"
      </if>

      <if test="entity.circleValue != null and !entity.circleValue.equals('')">
        AND CIRCLE.VALUE LIKE #{entity.circleValue,jdbcType=VARCHAR}"%"
      </if>
      <if test="entity.locationValue != null and !entity.locationValue.equals('')">
        AND LOCATION.VALUE LIKE #{entity.locationValue,jdbcType=VARCHAR}"%"
      </if>
      <if test="entity.locationId != null and entity.locationId != 0">
        AND COURSE.LOCATION_ID = #{entity.locationId,jdbcType=INTEGER}
      </if>
      <if test="entity.locationId == null or entity.locationId == 0">
        <if test="entity.locationIdSet != null and entity.locationIdSet.size() > 0">
          AND COURSE.LOCATION_ID IN
          <foreach collection="entity.locationIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.circleId != null and entity.circleId != 0">
        AND COURSE.CIRCLE_ID = #{entity.circleId,jdbcType=INTEGER}
      </if>
      <if test="entity.circleId == null or entity.circleId == 0">
        <if test="entity.circleIdSet != null and entity.circleIdSet.size() > 0">
          AND COURSE.CIRCLE_ID IN
          <foreach collection="entity.circleIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.partnerId != null and entity.partnerId != 0">
        AND COURSE.PARTNER_ID = #{entity.partnerId,jdbcType=INTEGER}
      </if>
      <if test="entity.partnerId == null or entity.partnerId == 0">
        <if test="entity.partnerIdSet != null and entity.partnerIdSet.size() > 0">
          AND COURSE.PARTNER_ID IN
          <foreach collection="entity.partnerIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.status != null">
        AND COURSE.STATUS = #{entity.status,jdbcType=INTEGER}
      </if>
      <if test="entity.status == null">
        <if test="entity.statusSet != null and entity.statusSet.size() > 0">
          AND COURSE.STATUS IN
          <foreach collection="entity.statusSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.courseTemplateId != null and entity.courseTemplateId != 0">
        AND COURSE.COURSE_TEMPLATE_ID = #{entity.courseTemplateId,jdbcType=INTEGER}
      </if>
      <if test="entity.courseTemplateId == null or entity.courseTemplateId == 0">
        <if test="entity.courseTemplateIdSet != null and entity.courseTemplateIdSet.size() > 0">
          AND COURSE.COURSE_TEMPLATE_ID IN
          <foreach collection="entity.courseTemplateIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.price != null">
        AND COURSE.PRICE = #{entity.price,jdbcType=DOUBLE}
      </if>
      <if test="entity.price == null">
        <if test="entity.priceStart != null">
          <![CDATA[AND (COURSE.PRICE >= #{entity.priceStart,jdbcType=DOUBLE}]]>
          OR COURSE.PRICE is null)
        </if>
        <if test="entity.priceEnd != null">
          <![CDATA[AND (COURSE.PRICE <= #{entity.priceEnd,jdbcType=DOUBLE}]]>
          OR COURSE.PRICE is null)
        </if>
      </if>

      <if test="entity.commission != null and entity.commission > 0">
        AND COURSE.COMMISSION > 0
      </if>

      <if test="entity.originalPrice != null">
        AND COURSE.ORIGINAL_PRICE = #{entity.originalPrice,jdbcType=DOUBLE}
      </if>
      <if test="entity.originalPrice == null">
        <if test="entity.originalPriceStart != null">
          <![CDATA[AND COURSE.ORIGINAL_PRICE >= #{entity.originalPriceStart,jdbcType=DOUBLE}]]>
        </if>
        <if test="entity.originalPriceEnd != null">
          <![CDATA[AND COURSE.ORIGINAL_PRICE <= #{entity.originalPriceEnd,jdbcType=DOUBLE}]]>
        </if>
      </if>

      <if test="entity.cashback != null">
        AND COURSE.CASHBACK = #{entity.cashback,jdbcType=DOUBLE}
      </if>
      <if test="entity.cashback == null">
        <if test="entity.cashbackStart != null">
          <![CDATA[AND COURSE.CASHBACK >= #{entity.cashbackStart,jdbcType=DOUBLE}]]>
        </if>
        <if test="entity.cashbackEnd != null">
          <![CDATA[AND COURSE.CASHBACK <= #{entity.cashbackEnd,jdbcType=DOUBLE}]]>
        </if>
      </if>

      <if test="entity.popularity != null">
        AND COURSE.POPULARITY = #{entity.popularity,jdbcType=INTEGER}
      </if>
      <if test="entity.popularity == null">
        <if test="entity.popularityStart != null">
          <![CDATA[AND COURSE.POPULARITY >= #{entity.popularityStart,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.popularityEnd != null">
          <![CDATA[AND COURSE.POPULARITY <= #{entity.popularityEnd,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.popularitySet != null and entity.popularitySet.size() > 0">
          AND COURSE.POPULARITY IN
          <foreach collection="entity.popularitySet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.courseHourNum != null">
        AND COURSE.COURSE_HOUR_NUM = #{entity.courseHourNum,jdbcType=INTEGER}
      </if>
      <if test="entity.courseHourNum == null">
        <if test="entity.courseHourNumStart != null">
          <![CDATA[AND COURSE.COURSE_HOUR_NUM >= #{entity.courseHourNumStart,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.courseHourNumEnd != null">
          <![CDATA[AND COURSE.COURSE_HOUR_NUM <= #{entity.courseHourNumEnd,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.courseHourNumSet != null and entity.courseHourNumSet.size() > 0">
          AND COURSE.COURSE_HOUR_NUM IN
          <foreach collection="entity.courseHourNumSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.startDate != null">
        AND COURSE.START_DATE =
        #{entity.startDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.startDate == null">
        <if test="entity.startDateStart != null">
          <![CDATA[AND (COURSE.START_DATE >= #{entity.startDateStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
          OR COURSE.START_DATE is null)
        </if>
        <if test="entity.startDateEnd != null">
          <![CDATA[AND (COURSE.START_DATE <= #{entity.startDateEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
          OR COURSE.START_DATE is null)
        </if>
      </if>

      <if test="entity.finishDate != null">
        AND COURSE.FINISH_DATE =
        #{entity.finishDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.finishDate == null">
        <if test="entity.finishDateStart != null">
          <![CDATA[AND COURSE.FINISH_DATE >= #{entity.finishDateStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.finishDateEnd != null">
          <![CDATA[AND COURSE.FINISH_DATE <= #{entity.finishDateEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>

      <if test="entity.noRefundDate != null">
        AND COURSE.NO_REFUND_DATE =
        #{entity.noRefundDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.noRefundDate == null">
        <if test="entity.noRefundDateStart != null">
          <![CDATA[AND COURSE.NO_REFUND_DATE >= #{entity.noRefundDateStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.noRefundDateEnd != null">
          <![CDATA[AND COURSE.NO_REFUND_DATE <= #{entity.noRefundDateEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>

      <if test="entity.cashbackDate != null">
        AND COURSE.CASHBACK_DATE =
        #{entity.cashbackDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.cashbackDate == null">
        <if test="entity.cashbackDateStart != null">
          <![CDATA[AND COURSE.CASHBACK_DATE >= #{entity.cashbackDateStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.cashbackDateEnd != null">
          <![CDATA[AND COURSE.CASHBACK_DATE <= #{entity.cashbackDateEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>

      <if test="entity.cutoffDate != null">
        AND COURSE.CUTOFF_DATE =
        #{entity.cutoffDate,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.cutoffDate == null">
        <if test="entity.cutoffDateStart != null">
          <![CDATA[AND COURSE.CUTOFF_DATE >= #{entity.cutoffDateStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.cutoffDateEnd != null">
          <![CDATA[AND COURSE.CUTOFF_DATE <= #{entity.cutoffDateEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>

      <if test="entity.classType != null">
        AND COURSE.CLASS_TYPE = #{entity.classType,jdbcType=INTEGER}
      </if>
      <if test="entity.classType == null">
        <if test="entity.classTypeSet != null and entity.classTypeSet.size() > 0">
          AND COURSE.CLASS_TYPE IN
          <foreach collection="entity.classTypeSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.discount != null">
        AND COURSE.DISCOUNT = #{entity.discount,jdbcType=DOUBLE}
      </if>
      <if test="entity.discount == null">
        <if test="entity.discountStart != null">
          <![CDATA[AND COURSE.DISCOUNT >= #{entity.discountStart,jdbcType=DOUBLE}]]>
        </if>
        <if test="entity.discountEnd != null">
          <![CDATA[AND COURSE.DISCOUNT <= #{entity.discountEnd,jdbcType=DOUBLE}]]>
        </if>
      </if>

      <if test="entity.schooltimeDay != null">
        AND <![CDATA[(COURSE.SCHOOLTIME_DAY &]]>
        #{entity.schooltimeDay,jdbcType=INTEGER}) > 0
      </if>
      <if test="entity.schooltimeDay == null">
        <if test="entity.schooltimeDaySet != null and entity.schooltimeDaySet.size() > 0">
          AND COURSE.SCHOOLTIME_DAY IN
          <foreach collection="entity.schooltimeDaySet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.schooltimeWeek != null">
        AND <![CDATA[(COURSE.SCHOOLTIME_WEEK &]]>
        #{entity.schooltimeWeek,jdbcType=INTEGER}) > 0
      </if>
      <if test="entity.schooltimeWeek == null">
        <if test="entity.schooltimeWeekSet != null and entity.schooltimeWeekSet.size() > 0">
          AND COURSE.SCHOOLTIME_WEEK IN
          <foreach collection="entity.schooltimeWeekSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.lastModifyTime != null">
        AND COURSE.LAST_MODIFY_TIME =
        #{entity.lastModifyTime,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.lastModifyTime == null">
        <if test="entity.lastModifyTimeStart != null">
          <![CDATA[AND COURSE.LAST_MODIFY_TIME >= #{entity.lastModifyTimeStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.lastModifyTimeEnd != null">
          <![CDATA[AND COURSE.LAST_MODIFY_TIME <= #{entity.lastModifyTimeEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>

      <if test="entity.createTime != null">
        AND COURSE.CREATE_TIME =
        #{entity.createTime,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}
      </if>
      <if test="entity.createTime == null">
        <if test="entity.createTimeStart != null">
          <![CDATA[AND COURSE.CREATE_TIME >= #{entity.createTimeStart,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
        <if test="entity.createTimeEnd != null">
          <![CDATA[AND COURSE.CREATE_TIME <= #{entity.createTimeEnd,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler}]]>
        </if>
      </if>
      <if test="entity.enabled != null">
        AND COURSE.ENABLED = #{entity.enabled,jdbcType=INTEGER}
      </if>
    </if>
    ) AS total
  </select>
  <!-- <select id="getById" parameterType="int" resultMap="CourseExtMap"> select <include refid="Course_Base_Column_List"></include> 
    from COURSE COURSE where COURSE.DELETED = 0 AND COURSE.ID = #{id} </select> -->
</mapper>