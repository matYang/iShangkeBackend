<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ishangke.edunav.dataaccess.mapper.BookingHistoryEntityExtMapper">
  <resultMap id="BookingHistoryExtMap" type="BookingHistoryEntityExt">
    <id column="BOOKINGHISTORY_ID" property="id" jdbcType="INTEGER" />
    <result column="BOOKINGHISTORY_BOOKINGID" property="bookingId" jdbcType="INTEGER" />
    <result column="BOOKINGHISTORY_USERID" property="userId" jdbcType="INTEGER" />
    <result column="BOOKINGHISTORY_OPTNAME" property="optName" jdbcType="INTEGER" />
    <result column="BOOKINGHISTORY_REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="BOOKINGHISTORY_PRESTATUS" property="preStatus" jdbcType="INTEGER" />
    <result column="BOOKINGHISTORY_POSTSTATUS" property="postStatus" jdbcType="INTEGER" />
    <result column="BOOKINGHISTORY_NORMAL" property="normal" jdbcType="INTEGER" />
    <result column="BOOKINGHISTORY_CREATETIME" property="createTime" typeHandler="com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler" />
    <result column="BOOKINGHISTORY_ENABLED" property="enabled" jdbcType="INTEGER" />
    <result column="BOOKINGHISTORY_DELETED" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="BookingHistory_Base_Column_List">
    BOOKING_HISTORY.ID BOOKINGHISTORY_ID,
    BOOKING_HISTORY.BOOKING_ID BOOKINGHISTORY_BOOKINGID,
    BOOKING_HISTORY.USER_ID BOOKINGHISTORY_USERID,
    BOOKING_HISTORY.OPT_NAME BOOKINGHISTORY_OPTNAME,
    BOOKING_HISTORY.REMARK BOOKINGHISTORY_REMARK,
    BOOKING_HISTORY.PRE_STATUS BOOKINGHISTORY_PRESTATUS,
    BOOKING_HISTORY.POST_STATUS BOOKINGHISTORY_POSTSTATUS,
    BOOKING_HISTORY.NORMAL BOOKINGHISTORY_NORMAL,
    BOOKING_HISTORY.CREATE_TIME BOOKINGHISTORY_CREATETIME,
    BOOKING_HISTORY.ENABLED BOOKINGHISTORY_ENABLED,
    BOOKING_HISTORY.DELETED BOOKINGHISTORY_DELETED
  </sql>
  <insert id="add" parameterType="BookingHistoryEntityExt">

    insert into BOOKING_HISTORY
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="bookingId != null">
        BOOKING_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="optName != null">
        OPT_NAME,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="preStatus != null">
        PRE_STATUS,
      </if>
      <if test="postStatus != null">
        POST_STATUS,
      </if>
      <if test="normal != null">
        NORMAL,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="enabled != null">
        ENABLED,
      </if>
      <if test="deleted != null">
        DELETED,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="bookingId != null">
        #{bookingId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="optName != null">
        #{optName,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="preStatus != null">
        #{preStatus,jdbcType=INTEGER},
      </if>
      <if test="postStatus != null">
        #{postStatus,jdbcType=INTEGER},
      </if>
      <if test="normal != null">
        #{normal,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
      SELECT
      LAST_INSERT_ID()
    </selectKey>
  </insert>
<update id="deleteById" parameterType="java.lang.Integer">
    update BOOKING_HISTORY set DELETED = 1
    where ID =
    #{id,jdbcType=INTEGER}
  </update>
   <update id="update" parameterType="BookingHistoryEntityExt" >
    update BOOKING_HISTORY
    <set >
      <if test="bookingId != null" >
        BOOKING_ID = #{bookingId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="optName != null" >
        OPT_NAME = #{optName,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="preStatus != null" >
        PRE_STATUS = #{preStatus,jdbcType=INTEGER},
      </if>
      <if test="postStatus != null" >
        POST_STATUS = #{postStatus,jdbcType=INTEGER},
      </if>
      <if test="normal != null" >
        NORMAL = #{normal,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,typeHandler=com.ishangke.edunav.dataaccess.typeHandler.CalendarTypeHandler},
      </if>
      <if test="enabled != null" >
        ENABLED = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        DELETED = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getCount" resultType="int">
    select count(ID) from BOOKING_HISTORY where DELETED = 0
  </select>

  <select id="list" parameterType="map" resultMap="BookingHistoryExtMap">
    SELECT
    <include refid="BookingHistory_Base_Column_List"/>
    from BOOKING_HISTORY where BOOKING_HISTORY.DELETED = 0
    <if test="entity != null">

      <if test="entity.id != null and entity.id != 0">
        AND BOOKING_HISTORY.ID = #{entity.id,jdbcType=INTEGER}
      </if>
      <if test="entity.id == null or entity.id == 0">
        <if test="entity.idStart != null and entity.idStart != 0">
          <![CDATA[AND BOOKING_HISTORY.ID >= #{entity.idStart,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.idEnd != null and entity.idEnd != 0">
          <![CDATA[AND BOOKING_HISTORY.ID <= #{entity.idEnd,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.idSet != null and entity.idSet.size() > 0">
          AND BOOKING_HISTORY.ID IN
          <foreach collection="entity.idSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.userId != null and entity.userId != 0">
        AND BOOKING_HISTORY.USER_ID = #{entity.userId,jdbcType=INTEGER}
      </if>
      <if test="entity.userId == null or entity.userId == 0">
        <if test="entity.userIdStart != null and entity.userIdStart != 0">
          <![CDATA[AND BOOKING_HISTORY.USER_ID >= #{entity.userIdStart,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.userIdEnd != null and entity.userIdEnd != 0">
          <![CDATA[AND BOOKING_HISTORY.USER_ID <= #{entity.userIdEnd,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.userIdSet != null and entity.userIdSet.size() > 0">
          AND BOOKING_HISTORY.USER_ID IN
          <foreach collection="entity.userIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>
      <if test="entity.bookingId != null and entity.bookingId != 0">
        AND BOOKING_HISTORY.BOOKING_ID = #{entity.bookingId,jdbcType=INTEGER}
      </if>
      <if test="entity.bookingId == null or entity.bookingId == 0">
        <if test="entity.bookingIdStart != null and entity.bookingIdStart != 0">
          <![CDATA[AND BOOKING_HISTORY.BOOKING_ID >= #{entity.bookingIdStart,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.bookingIdEnd != null and entity.bookingIdEnd != 0">
          <![CDATA[AND BOOKING_HISTORY.BOOKING_ID <= #{entity.bookingIdEnd,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.bookingIdSet != null and entity.bookingIdSet.size() > 0">
          AND BOOKING_HISTORY.BOOKING_ID IN
          <foreach collection="entity.bookingIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.remark != null and entity.remark !='' ">
        AND BOOKING_HISTORY.REMARK LIKE "%"#{entity.remark,jdbcType=VARCHAR}"%"
      </if>
      <if test="entity.optName != null">
        AND BOOKING_HISTORY.OPT_NAME = #{entity.optName,jdbcType=INTEGER}
      </if>
      <if test="entity.preStatus != null">
        AND BOOKING_HISTORY.PRE_STATUS = #{entity.preStatus,jdbcType=INTEGER}
      </if>
      <if test="entity.postStatus != null">
        AND BOOKING_HISTORY.POST_STATUS = #{entity.postStatus,jdbcType=INTEGER}
      </if>
      <if test="entity.normal != null">
        AND BOOKING_HISTORY.NORMAL = #{entity.normal,jdbcType=INTEGER}
      </if>


      <if test="entity.createTime != null">
        AND BOOKING_HISTORY.CREATE_TIME = #{entity.createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="entity.createTime == null">
        <if test="entity.createTimeStart != null">
          <![CDATA[AND BOOKING_HISTORY.CREATE_TIME >= #{entity.createTimeStart,jdbcType=TIMESTAMP}]]>
        </if>
        <if test="entity.createTimeEnd != null">
          <![CDATA[AND BOOKING_HISTORY.CREATE_TIME <= #{entity.createTimeEnd,jdbcType=TIMESTAMP}]]>
        </if>
      </if>

      <if test="entity.enabled != null">
        AND BOOKING_HISTORY.ENABLED = #{entity.enabled,jdbcType=INTEGER}
      </if>
      
      <if test="page != null">
        <if test="page.orderByEntities != null and page.orderByEntities.size() > 0">
          ORDER BY
          <foreach collection="page.orderByEntities" item="listItem" separator=",">
            BOOKING_HISTORY.${listItem.columnKey} ${listItem.order}
          </foreach>
        </if>
        LIMIT #{page.offset,jdbcType=INTEGER},#{page.size,jdbcType=INTEGER}
      </if>
    </if>
  </select>

  <select id="getListCount" parameterType="map" resultType="int">
    SELECT COUNT(*) FROM (
    select
    <include refid="BookingHistory_Base_Column_List"/>
    from BOOKING_HISTORY where BOOKING_HISTORY.DELETED = 0
    <if test="entity != null">

      <if test="entity.id != null and entity.id != 0">
        AND BOOKING_HISTORY.ID = #{entity.id,jdbcType=INTEGER}
      </if>
      <if test="entity.id == null or entity.id == 0">
        <if test="entity.idStart != null and entity.idStart != 0">
          <![CDATA[AND BOOKING_HISTORY.ID >= #{entity.idStart,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.idEnd != null and entity.idEnd != 0">
          <![CDATA[AND BOOKING_HISTORY.ID <= #{entity.idEnd,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.idSet != null and entity.idSet.size() > 0">
          AND BOOKING_HISTORY.ID IN
          <foreach collection="entity.idSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.userId != null and entity.userId != 0">
        AND BOOKING_HISTORY.USER_ID = #{entity.userId,jdbcType=INTEGER}
      </if>
      <if test="entity.userId == null or entity.userId == 0">
        <if test="entity.userIdStart != null and entity.userIdStart != 0">
          <![CDATA[AND BOOKING_HISTORY.USER_ID >= #{entity.userIdStart,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.userIdEnd != null and entity.userIdEnd != 0">
          <![CDATA[AND BOOKING_HISTORY.USER_ID <= #{entity.userIdEnd,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.userIdSet != null and entity.userIdSet.size() > 0">
          AND BOOKING_HISTORY.USER_ID IN
          <foreach collection="entity.userIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>
      <if test="entity.bookingId != null and entity.bookingId != 0">
        AND BOOKING_HISTORY.BOOKING_ID = #{entity.bookingId,jdbcType=INTEGER}
      </if>
      <if test="entity.bookingId == null or entity.bookingId == 0">
        <if test="entity.bookingIdStart != null and entity.bookingIdStart != 0">
          <![CDATA[AND BOOKING_HISTORY.BOOKING_ID >= #{entity.bookingIdStart,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.bookingIdEnd != null and entity.bookingIdEnd != 0">
          <![CDATA[AND BOOKING_HISTORY.BOOKING_ID <= #{entity.bookingIdEnd,jdbcType=INTEGER}]]>
        </if>
        <if test="entity.bookingIdSet != null and entity.bookingIdSet.size() > 0">
          AND BOOKING_HISTORY.BOOKING_ID IN
          <foreach collection="entity.bookingIdSet" item="listItem" open="(" close=")" separator=",">
            #{listItem}
          </foreach>
        </if>
      </if>

      <if test="entity.remark != null and entity.remark !='' ">
        AND BOOKING_HISTORY.REMARK LIKE "%"#{entity.remark,jdbcType=VARCHAR}"%"
      </if>
      <if test="entity.optName != null">
        AND BOOKING_HISTORY.OPT_NAME = #{entity.optName,jdbcType=INTEGER}
      </if>
      <if test="entity.preStatus != null">
        AND BOOKING_HISTORY.PRE_STATUS = #{entity.preStatus,jdbcType=INTEGER}
      </if>
      <if test="entity.postStatus != null">
        AND BOOKING_HISTORY.POST_STATUS = #{entity.postStatus,jdbcType=INTEGER}
      </if>
      <if test="entity.normal != null">
        AND BOOKING_HISTORY.NORMAL = #{entity.normal,jdbcType=INTEGER}
      </if>


      <if test="entity.createTime != null">
        AND BOOKING_HISTORY.CREATE_TIME = #{entity.createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="entity.createTime == null">
        <if test="entity.createTimeStart != null">
          <![CDATA[AND BOOKING_HISTORY.CREATE_TIME >= #{entity.createTimeStart,jdbcType=TIMESTAMP}]]>
        </if>
        <if test="entity.createTimeEnd != null">
          <![CDATA[AND BOOKING_HISTORY.CREATE_TIME <= #{entity.createTimeEnd,jdbcType=TIMESTAMP}]]>
        </if>
      </if>

      <if test="entity.enabled != null">
        AND BOOKING_HISTORY.ENABLED = #{entity.enabled,jdbcType=INTEGER}
      </if>
    </if>
    ) AS total
  </select>

</mapper>