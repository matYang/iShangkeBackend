<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ishangke.edunav.dataaccess.mapper.gen.BookingEntityMapper" >
  <resultMap id="BaseResultMap" type="com.ishangke.edunav.dataaccess.model.gen.BookingEntity" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="COURSE_ID" property="courseId" jdbcType="INTEGER" />
    <result column="COURSE_TEMPLATE_ID" property="courseTemplateId" jdbcType="INTEGER" />
    <result column="REFERENCE" property="reference" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="SCHEDULED_TIME" property="scheduledTime" jdbcType="TIMESTAMP" />
    <result column="NO_REFUND_DATE" property="noRefundDate" jdbcType="TIMESTAMP" />
    <result column="CASHBACK_DATE" property="cashbackDate" jdbcType="TIMESTAMP" />
    <result column="TYPE" property="type" jdbcType="INTEGER" />
    <result column="NOTE" property="note" jdbcType="VARCHAR" />
    <result column="CASHBACK_AMOUNT" property="cashbackAmount" jdbcType="DOUBLE" />
    <result column="LAST_MODIFY_TIME" property="lastModifyTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ENABLED" property="enabled" jdbcType="INTEGER" />
    <result column="DELETED" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USER_ID, COURSE_ID, COURSE_TEMPLATE_ID, REFERENCE, NAME, PHONE, EMAIL, STATUS, 
    SCHEDULED_TIME, NO_REFUND_DATE, CASHBACK_DATE, TYPE, NOTE, CASHBACK_AMOUNT, LAST_MODIFY_TIME, 
    CREATE_TIME, ENABLED, DELETED
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ishangke.edunav.dataaccess.model.gen.BookingEntityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BOOKING
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from BOOKING
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from BOOKING
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ishangke.edunav.dataaccess.model.gen.BookingEntityExample" >
    delete from BOOKING
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ishangke.edunav.dataaccess.model.gen.BookingEntity" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into BOOKING (ID, USER_ID, COURSE_ID, 
      COURSE_TEMPLATE_ID, REFERENCE, NAME, 
      PHONE, EMAIL, STATUS, 
      SCHEDULED_TIME, NO_REFUND_DATE, CASHBACK_DATE, 
      TYPE, NOTE, CASHBACK_AMOUNT, 
      LAST_MODIFY_TIME, CREATE_TIME, ENABLED, 
      DELETED)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{courseTemplateId,jdbcType=INTEGER}, #{reference,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{scheduledTime,jdbcType=TIMESTAMP}, #{noRefundDate,jdbcType=TIMESTAMP}, #{cashbackDate,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{cashbackAmount,jdbcType=DOUBLE}, 
      #{lastModifyTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{enabled,jdbcType=INTEGER}, 
      #{deleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ishangke.edunav.dataaccess.model.gen.BookingEntity" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into BOOKING
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="courseId != null" >
        COURSE_ID,
      </if>
      <if test="courseTemplateId != null" >
        COURSE_TEMPLATE_ID,
      </if>
      <if test="reference != null" >
        REFERENCE,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="scheduledTime != null" >
        SCHEDULED_TIME,
      </if>
      <if test="noRefundDate != null" >
        NO_REFUND_DATE,
      </if>
      <if test="cashbackDate != null" >
        CASHBACK_DATE,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="note != null" >
        NOTE,
      </if>
      <if test="cashbackAmount != null" >
        CASHBACK_AMOUNT,
      </if>
      <if test="lastModifyTime != null" >
        LAST_MODIFY_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="enabled != null" >
        ENABLED,
      </if>
      <if test="deleted != null" >
        DELETED,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseTemplateId != null" >
        #{courseTemplateId,jdbcType=INTEGER},
      </if>
      <if test="reference != null" >
        #{reference,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="scheduledTime != null" >
        #{scheduledTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noRefundDate != null" >
        #{noRefundDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cashbackDate != null" >
        #{cashbackDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="cashbackAmount != null" >
        #{cashbackAmount,jdbcType=DOUBLE},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ishangke.edunav.dataaccess.model.gen.BookingEntityExample" resultType="java.lang.Integer" >
    select count(*) from BOOKING
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update BOOKING
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null" >
        COURSE_ID = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseTemplateId != null" >
        COURSE_TEMPLATE_ID = #{record.courseTemplateId,jdbcType=INTEGER},
      </if>
      <if test="record.reference != null" >
        REFERENCE = #{record.reference,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.scheduledTime != null" >
        SCHEDULED_TIME = #{record.scheduledTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.noRefundDate != null" >
        NO_REFUND_DATE = #{record.noRefundDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cashbackDate != null" >
        CASHBACK_DATE = #{record.cashbackDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.note != null" >
        NOTE = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.cashbackAmount != null" >
        CASHBACK_AMOUNT = #{record.cashbackAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.lastModifyTime != null" >
        LAST_MODIFY_TIME = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enabled != null" >
        ENABLED = #{record.enabled,jdbcType=INTEGER},
      </if>
      <if test="record.deleted != null" >
        DELETED = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update BOOKING
    set ID = #{record.id,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      COURSE_ID = #{record.courseId,jdbcType=INTEGER},
      COURSE_TEMPLATE_ID = #{record.courseTemplateId,jdbcType=INTEGER},
      REFERENCE = #{record.reference,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      SCHEDULED_TIME = #{record.scheduledTime,jdbcType=TIMESTAMP},
      NO_REFUND_DATE = #{record.noRefundDate,jdbcType=TIMESTAMP},
      CASHBACK_DATE = #{record.cashbackDate,jdbcType=TIMESTAMP},
      TYPE = #{record.type,jdbcType=INTEGER},
      NOTE = #{record.note,jdbcType=VARCHAR},
      CASHBACK_AMOUNT = #{record.cashbackAmount,jdbcType=DOUBLE},
      LAST_MODIFY_TIME = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      ENABLED = #{record.enabled,jdbcType=INTEGER},
      DELETED = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ishangke.edunav.dataaccess.model.gen.BookingEntity" >
    update BOOKING
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        COURSE_ID = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseTemplateId != null" >
        COURSE_TEMPLATE_ID = #{courseTemplateId,jdbcType=INTEGER},
      </if>
      <if test="reference != null" >
        REFERENCE = #{reference,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="scheduledTime != null" >
        SCHEDULED_TIME = #{scheduledTime,jdbcType=TIMESTAMP},
      </if>
      <if test="noRefundDate != null" >
        NO_REFUND_DATE = #{noRefundDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cashbackDate != null" >
        CASHBACK_DATE = #{cashbackDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=INTEGER},
      </if>
      <if test="note != null" >
        NOTE = #{note,jdbcType=VARCHAR},
      </if>
      <if test="cashbackAmount != null" >
        CASHBACK_AMOUNT = #{cashbackAmount,jdbcType=DOUBLE},
      </if>
      <if test="lastModifyTime != null" >
        LAST_MODIFY_TIME = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null" >
        ENABLED = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        DELETED = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ishangke.edunav.dataaccess.model.gen.BookingEntity" >
    update BOOKING
    set USER_ID = #{userId,jdbcType=INTEGER},
      COURSE_ID = #{courseId,jdbcType=INTEGER},
      COURSE_TEMPLATE_ID = #{courseTemplateId,jdbcType=INTEGER},
      REFERENCE = #{reference,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      SCHEDULED_TIME = #{scheduledTime,jdbcType=TIMESTAMP},
      NO_REFUND_DATE = #{noRefundDate,jdbcType=TIMESTAMP},
      CASHBACK_DATE = #{cashbackDate,jdbcType=TIMESTAMP},
      TYPE = #{type,jdbcType=INTEGER},
      NOTE = #{note,jdbcType=VARCHAR},
      CASHBACK_AMOUNT = #{cashbackAmount,jdbcType=DOUBLE},
      LAST_MODIFY_TIME = #{lastModifyTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      ENABLED = #{enabled,jdbcType=INTEGER},
      DELETED = #{deleted,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>