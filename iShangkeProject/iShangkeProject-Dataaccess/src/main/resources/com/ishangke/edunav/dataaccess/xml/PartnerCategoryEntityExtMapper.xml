<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ishangke.edunav.dataaccess.mapper.PartnerCategoryEntityExtMapper">
  <resultMap id="PartnerCategoryExtMap" type="PartnerCategoryEntityExt">
    <id column="PARTNERCATEGORY_ID" property="id" jdbcType="INTEGER" />
    <result column="PARTNERCATEGORY_PARTNERID" property="partnerId" jdbcType="INTEGER" />
    <result column="PARTNERCATEGORY_CATEGORYID" property="categoryId" jdbcType="INTEGER" />
    <result column="PARTNERCATEGORY_DELETED" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="PartnerCategory_Base_Column_List">
    PARTNER_CATEGORY.ID PARTNERCATEGORY_ID,
    PARTNER_CATEGORY.PARTNER_ID PARTNERCATEGORY_PARTNERID,
    PARTNER_CATEGORY.CATEGORY_ID PARTNERCATEGORY_CATEGORYID,
    PARTNER_CATEGORY.DELETED PARTNERCATEGORY_DELETED
  </sql>
  <!-- add -->
  <insert id="add" parameterType="PartnerCategoryEntityExt">
    insert into PARTNER_CATEGORY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="partnerId != null and partnerId != 0">
        PARTNER_ID,
      </if>
      <if test="categoryId != null and categoryId != 0">
        CATEGORY_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="partnerId != null and partnerId != 0">
        #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null and categoryId !=0">
        #{categoryId,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
      SELECT
      LAST_INSERT_ID()
    </selectKey>
  </insert>
  <!-- deleteById -->
  <update id="deleteById" parameterType="java.lang.Integer">
    update PARTNER_CATEGORY set DELETED = 1
    where ID =
    #{id,jdbcType=INTEGER}
  </update>
  <!-- deleteByPartnerIdCategoryId -->
  <delete id="deleteByPartnerIdCategoryId" parameterType="map">
    delete from PARTNER_CATEGORY where PARTNER_ID = #{partnerId, jdbcType=INTEGER} and CATEGORY_ID = #{categoryId, jdbcType=INTEGER}
  </delete>
  <!-- update -->
  <update id="update" parameterType="PartnerCategoryEntityExt">
    update PARTNER_CATEGORY
    <set>
      <if test="partnerId != null and partnerId != 0">
        PARTNER_ID = #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null and categoryId !=0">
        CATEGORY_ID = #{categoryId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <!-- getCount -->
  <select id="getCount" resultType="int">
    select count(ID) from PARTNER_CATEGORY where DELETED = 0
  </select>
  <!-- listAll -->
  <select id="listAll" resultMap="PartnerCategoryExtMap">
    SELECT
    <include refid="PartnerCategory_Base_Column_List" />
    from PARTNER_CATEGORY where PARTNER_CATEGORY.DELETED = 0
  </select>
  <!-- getById -->
  <select id="getById" parameterType="int" resultMap="PartnerCategoryExtMap">
    SELECT
    <include refid="PartnerCategory_Base_Column_List" />
    from PARTNER_CATEGORY where PARTNER_CATEGORY.DELETED = 0 and PARTNER_CATEGORY.ID = #{id,jdbcType=INTEGER}
  </select>
  <!-- list -->
  <select id="list" parameterType="map" resultMap="PartnerCategoryExtMap">
    select
    <include refid="PartnerCategory_Base_Column_List"></include>
    from PARTNER_CATEGORY
    where PARTNER_CATEGORY.DELETED = 0
    <if test="entity != null">

      <if test="entity.id != null and entity.id != 0">
        AND PARTNER_CATEGORY.ID = #{entity.id,jdbcType=INTEGER}
      </if>

      <if test="entity.partnerId != null and entity.partnerId != 0">
        AND PARTNER_CATEGORY.PARTNER_ID = #{entity.partnerId,jdbcType=INTEGER}
      </if>

      <if test="entity.categoryId != null and entity.categoryId != 0">
        AND PARTNER_CATEGORY.CATEGORYID = #{entity.categoryId,jdbcType=INTEGER}
      </if>
    </if>

    <if test="page != null and page.orderByEntities != null and page.orderByEntities.size() > 0">
      ORDER BY
      <foreach collection="page.orderByEntities" item="listItem" separator=",">
        PARTNER_CATEGORY.${listItem.columnKey} ${listItem.order}
      </foreach>
    </if>

    <if test="page !=null and page.offset != null and page.size != null">
      LIMIT #{page.offset,jdbcType=INTEGER},#{page.size,jdbcType=INTEGER}
    </if>
  </select>
  <!-- getListCount -->
  <select id="getListCount" parameterType="map" resultType="int">
    SELECT COUNT(*) FROM (
    select
    <include refid="PartnerCategory_Base_Column_List"></include>
    from PARTNER_CATEGORY
    where PARTNER_CATEGORY.DELETED = 0
    <if test="entity != null">

      <if test="entity.id != null and entity.id != 0">
        AND PARTNER_CATEGORY.ID = #{entity.id,jdbcType=INTEGER}
      </if>

      <if test="entity.partnerId != null and entity.partnerId != 0">
        AND PARTNER_CATEGORY.PARTNER_ID = #{entity.partnerId,jdbcType=INTEGER}
      </if>

      <if test="entity.categoryId != null and entity.categoryId != 0">
        AND PARTNER_CATEGORY.CATEGORYID = #{entity.categoryId,jdbcType=INTEGER}
      </if>
    </if>
    ) AS total
  </select>
</mapper>