<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ishangke.edunav.dataaccess.mapper.CoursePromotionPhotoEntityExtMapper">
  <resultMap type="CoursePromotionPhotoEntityExt" id="CoursePromotionPhotoExtMap">
    <id column="COURSEPROMOTIONPHOTO_ID" property="id" jdbcType="INTEGER" />
    <result column="COURSEPROMOTIONPHOTO_COURSEPROMOTIONID" property="coursePromotionId" jdbcType="INTEGER"/>
    <result column="COURSEPROMOTIONPHOTO_URL" property="url" jdbcType="VARCHAR"/> 
    <result column="COURSEPROMOTIONPHOTO_TYPE" property="type" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Course_Promotion_Photo_Base_Column_List">
    COURSE_PROMOTION_PHOTO.ID COURSEPROMOTIONPHOTO_ID,
    COURSE_PROMOTION_PHOTO.COURSE_PROMOTION_ID COURSEPROMOTIONPHOTO_COURSEPROMOTIONID,
    COURSE_PROMOTION_PHOTO.URL COURSEPROMOTIONPHOTO_URL,
    COURSE_PROMOTION_PHOTO.TYPE COURSEPROMOTIONPHOTO_TYPE
  </sql>
  
   <!-- add -->
  <insert id="add" parameterType="CoursePromotionPhotoEntityExt">
    insert into COURSE_PROMOTION_PHOTO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="coursePromotionId != null and coursePromotionId != 0">
        COURSE_PROMOTION_ID,
      </if>
      <if test="url != null">
        URL,
      </if>
      <if test="type != null">
        TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="coursePromotionId != null and coursePromotionId != 0">
            #{coursePromotionId,jdbcType = INTEGER},
        </if>
        <if test="url != null">
            #{url,jdbcType = VARCHAR},
        </if>
        <if test="type != null">
            #{type,jdbcType = INTEGER},
        </if>
    </trim>
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
        SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  
  <!-- deleteById -->
  <update id="deleteById" parameterType="java.lang.Integer">
    update COURSE_PROMOTION_PHOTO set DELETED = 1 where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- deleteByCoursePromotionId -->
  <update id="deleteByCoursePromotionId" parameterType="java.lang.Integer">
    update COURSE_PROMOTION_PHOTO set DELETED = 1 where COURSE_PROMOTION_ID = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- list -->
  <select id="list" parameterType="map" resultMap="CoursePromotionPhotoExtMap">
    select
    <include refid="Course_Promotion_Photo_Base_Column_List"/>
    from COURSE_PROMOTION_PHOTO
    where COURSE_PROMOTION_PHOTO.DELETED = 0
    <if test="entity != null">
        <if test="entity.id != null and entity.id != 0">
            AND COURSE_PROMOTION_PHOTO.ID = #{entity.id,jdbcType=INTEGER}
        </if>

        
        <if test="entity.coursePromotionId != null and entity.coursePromotionId != 0">
            AND COURSE_PROMOTION_PHOTO.COURSE_PROMOTION_ID = #{entity.coursePromotionId,jdbcType=INTEGER}
        </if>

        <if test="entity.url != null">
            AND COURSE_PROMOTION_PHOTO.URL = #{url,jdbcType=VARCHAR}
        </if>
        
        <if test="entity.type != null">
            AND COURSE_PROMOTION_PHOTO.TYPE = #{type,jdbcType=INTEGER}
        </if>
    </if>
    
    <if test="page != null and page.orderByEntities != null and page.orderByEntities.size() > 0">
        ORDER BY 
        <foreach collection="page.orderByEntities" item="listItem" separator=",">
            COURSE_PROMOTION_PHOTO.${listItem.columnKey} ${listItem.order}
        </foreach>
    </if>
    
    <if test="page != null">
        LIMIT #{page.offset,jdbcType=INTEGER},#{page.size,jdbcType=INTEGER}
    </if>
  </select>
  
  <!-- getListCount -->
  <select id="getListCount" parameterType="map" resultType="java.lang.Integer">
    select count(*) from (
    select
    <include refid="Course_Promotion_Photo_Base_Column_List"/>
    from COURSE_PROMOTION_PHOTO
    where COURSE_PROMOTION_PHOTO.DELETED = 0
    <if test="entity != null">
        <if test="entity.id != null and entity.id != 0">
            AND COURSE_PROMOTION_PHOTO.ID = #{entity.id,jdbcType=INTEGER}
        </if>

        
        <if test="entity.coursePromotionId != null and entity.coursePromotionId != 0">
            AND COURSE_PROMOTION_PHOTO.COURSE_PROMOTION_ID = #{entity.coursePromotionId,jdbcType=INTEGER}
        </if>

        <if test="entity.url != null">
            AND COURSE_PROMOTION_PHOTO.URL = #{url,jdbcType=VARCHAR}
        </if>
        
         <if test="entity.type != null">
            AND COURSE_PROMOTION_PHOTO.TYPE = #{type,jdbcType=INTEGER}
        </if>
    </if>
    ) as total
  </select>
  
  <!-- update -->
  <update id="update" parameterType="CoursePromotionPhotoEntityExt">
    update COURSE_PROMOTION_PHOTO
    <set>
        <if test="coursePromotionId != null and coursePromotionId != 0">
            COURSE_PROMOTION_ID = #{coursePromotionId,jdbcType=INTEGER},
        </if>
        <if test="url != null">
            URL = #{url,jdbcType=VARCHAR},
        </if>
        <if test="type != null">
            TYPE = #{type,jdbcType=INTEGER},
        </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- getById -->
  <select id="getById" parameterType="java.lang.Integer" resultMap="CoursePromotionPhotoExtMap">
    select
    <include refid="Course_Promotion_Photo_Base_Column_List"/>
    from COURSE_PROMOTION_PHOTO
    where COURSE_PROMOTION_PHOTO.DELETED = 0 and COURSE_PROMOTION_PHOTO.ID = #{id,jdbcType=INTEGER}
  </select>
</mapper>