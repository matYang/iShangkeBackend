package com.ishangke.edunav.manager.converter;

import java.util.ArrayList;
import java.util.List;

import com.ishangke.edunav.commoncontract.model.ClassPhotoBo;
import com.ishangke.edunav.commoncontract.model.CourseTemplateBo;
import com.ishangke.edunav.commoncontract.model.TeacherBo;
import com.ishangke.edunav.dataaccess.model.ClassPhotoEntityExt;
import com.ishangke.edunav.dataaccess.model.CourseTemplateEntityExt;
import com.ishangke.edunav.dataaccess.model.TeacherEntityExt;
import com.ishangke.edunav.manager.common.DateUtility;

public class CourseTemplateConverter {
    public static CourseTemplateBo toBo(CourseTemplateEntityExt e) {
        CourseTemplateBo courseTemplateBo = new CourseTemplateBo();
        courseTemplateBo.setAddress(e.getAddress());
        courseTemplateBo.setAddressId(e.getAddressId());
        courseTemplateBo.setAddressLat(e.getAddressLat());
        courseTemplateBo.setAddressLat(e.getAddressLat());
        courseTemplateBo.setAddressLng(e.getAddressLng());
        courseTemplateBo.setAssignments(e.getAssignments());
        courseTemplateBo.setBonusService(e.getBonusService());
        courseTemplateBo.setBookingTotal(e.getBookingTotal());
        courseTemplateBo.setBookingTotalEnd(e.getBookingTotalEnd());
        courseTemplateBo.setBookingTotalSet(e.getBookingTotalSet());
        courseTemplateBo.setBookingTotalStart(e.getBookingTotalStart());
        courseTemplateBo.setBookingType(e.getBookingType());
        courseTemplateBo.setCashback(e.getCashback());
        courseTemplateBo.setCashbackDate(e.getCashbackDate().getTimeInMillis());
        courseTemplateBo.setCashbackDateEnd(e.getCashbackDateEnd().getTimeInMillis());
        courseTemplateBo.setCashbackDateStart(e.getCashbackDateStart().getTimeInMillis());
        courseTemplateBo.setCashbackEnd(e.getCashbackEnd());
        courseTemplateBo.setCashbackStart(e.getCashbackStart());
        courseTemplateBo.setCategoryId(e.getCategoryId());
        courseTemplateBo.setCategoryIdSet(e.getCategoryIdSet());
        courseTemplateBo.setCategoryName(e.getCategoryName());
        courseTemplateBo.setCategoryRank(e.getCategoryRank());
        courseTemplateBo.setCategoryValue(e.getCategoryValue());
        courseTemplateBo.setCertification(e.getCertification());
        courseTemplateBo.setCircleId(e.getCircleId());
        courseTemplateBo.setCircleIdSet(e.getCircleIdSet());
        courseTemplateBo.setCircleName(e.getCircleName());
        courseTemplateBo.setCircleValue(e.getCircleValue());
        if (e.getClassPhotoList() != null) {
            List<ClassPhotoBo> list = new ArrayList<>();
            for (ClassPhotoEntityExt a : e.getClassPhotoList()) {
                list.add(ClassPhotoConverter.toBo(a));
            }
            courseTemplateBo.setClassPhotoList(list);
        }
        courseTemplateBo.setClassSize(e.getClassSize());
        courseTemplateBo.setClassTeacher(e.getClassTeacher());
        courseTemplateBo.setClassType(e.getClassType());
        courseTemplateBo.setClassTypeSet(e.getClassTypeSet());
        courseTemplateBo.setCommission(e.getCommission());
        courseTemplateBo.setContact(e.getContact());
        courseTemplateBo.setCourseHourLength(e.getCourseHourLength());
        courseTemplateBo.setCourseHourNum(e.getCourseHourNum());
        courseTemplateBo.setCourseHourNumEnd(e.getCourseHourNumEnd());
        courseTemplateBo.setCourseHourNumSet(e.getCourseHourNumSet());
        courseTemplateBo.setCourseHourNumStart(e.getCourseHourNumStart());
        courseTemplateBo.setCourseIntro(e.getCourseIntro());
        courseTemplateBo.setCourseName(e.getCourseName());
        courseTemplateBo.setCreateTime(e.getCreateTime().getTimeInMillis());
        courseTemplateBo.setCreateTimeEnd(e.getCreateTimeEnd().getTimeInMillis());
        courseTemplateBo.setCreateTimeStart(e.getCreateTimeStart().getTimeInMillis());
        courseTemplateBo.setCutoffDate(e.getCutoffDate().getTimeInMillis());
        courseTemplateBo.setCutoffDateEnd(e.getCutoffDateEnd().getTimeInMillis());
        courseTemplateBo.setCutoffDateStart(e.getCutoffDateStart().getTimeInMillis());
        courseTemplateBo.setDiscount(e.getDiscount());
        courseTemplateBo.setDiscountEnd(e.getDiscountEnd());
        courseTemplateBo.setDiscountEnd(e.getDiscountEnd());
        courseTemplateBo.setDiscountStart(e.getDiscountStart());
        courseTemplateBo.setDownloadMaterials(e.getDownloadMaterials());
        courseTemplateBo.setEnabled(e.getEnabled());
        courseTemplateBo.setExtracurricular(e.getExtracurricular());
        courseTemplateBo.setFinishDate(e.getFinishDate().getTimeInMillis());
        courseTemplateBo.setFinishDateEnd(e.getFinishDateEnd().getTimeInMillis());
        courseTemplateBo.setFinishDateStart(e.getFinishDateStart().getTimeInMillis());
        courseTemplateBo.setFinishTime1(e.getFinishTime1());
        courseTemplateBo.setFinishTime2(e.getFinishTime2());
        courseTemplateBo.setGoal(e.getGoal());
        courseTemplateBo.setHighScoreReward(e.getHighScoreReward());
        courseTemplateBo.setId(e.getId());
        courseTemplateBo.setIdSet(e.getIdSet());
        courseTemplateBo.setInstName(e.getInstName());
        courseTemplateBo.setLastModifyTime(e.getLastModifyTime().getTimeInMillis());
        courseTemplateBo.setLastModifyTimeEnd(e.getLastModifyTimeEnd().getTimeInMillis());
        courseTemplateBo.setLastModifyTimeStart(e.getLastModifyTimeStart().getTimeInMillis());
        courseTemplateBo.setLocationId(e.getLocationId());
        courseTemplateBo.setLocationIdSet(e.getLocationIdSet());
        courseTemplateBo.setLocationName(e.getLocationName());
        courseTemplateBo.setLocationValue(e.getLocationValue());
        courseTemplateBo.setLogoUrl(e.getLogoUrl());
        courseTemplateBo.setMarking(e.getMarking());
        courseTemplateBo.setNoRefundDate(e.getNoRefundDate().getTimeInMillis());
        courseTemplateBo.setNoRefundDateEnd(e.getNoRefundDateEnd().getTimeInMillis());
        courseTemplateBo.setNoRefundDateStart(e.getNoRefundDateStart().getTimeInMillis());
        courseTemplateBo.setOpenCourseRequirement(e.getOpenCourseRequirement());
        courseTemplateBo.setOriginalPrice(e.getOriginalPrice());
        courseTemplateBo.setOriginalPriceEnd(e.getOriginalPriceEnd());
        courseTemplateBo.setOriginalPriceStart(e.getOriginalPriceStart());
        courseTemplateBo.setOutline(e.getOutline());
        courseTemplateBo.setPartnerDistinction(e.getPartnerDistinction());
        courseTemplateBo.setPartnerId(e.getPartnerId());
        courseTemplateBo.setPartnerIdSet(e.getPartnerIdSet());
        courseTemplateBo.setPartnerIntro(e.getPartnerIntro());
        courseTemplateBo.setPartnerQualification(e.getPartnerQualification());
        courseTemplateBo.setPartnerRating(e.getPartnerRating());
        courseTemplateBo.setPassAgreement(e.getPassAgreement());
        courseTemplateBo.setPopularity(e.getPopularity());
        courseTemplateBo.setPopularityEnd(e.getPopularityEnd());
        courseTemplateBo.setPopularitySet(e.getPopularitySet());
        courseTemplateBo.setPopularityStart(e.getPopularityStart());
        courseTemplateBo.setPrerequest(e.getPrerequest());
        courseTemplateBo.setPrice(e.getPrice());
        courseTemplateBo.setPriceEnd(e.getPriceEnd());
        courseTemplateBo.setPriceStart(e.getPriceStart());
        courseTemplateBo.setQualityAssurance(e.getQualityAssurance());
        courseTemplateBo.setQuestionBank(e.getQuestionBank());
        courseTemplateBo.setQuestionSession(e.getQuestionSession());
        courseTemplateBo.setQuiz(e.getQuiz());
        courseTemplateBo.setRating(e.getRating());
        courseTemplateBo.setRatingEnd(e.getRatingEnd());
        courseTemplateBo.setRatingStart(e.getRatingStart());
        courseTemplateBo.setReference(e.getReference());
        courseTemplateBo.setRegLocation(e.getRegLocation());
        courseTemplateBo.setRegPhone(e.getRegPhone());
        courseTemplateBo.setSchooltimeDay(e.getSchooltimeDay());
        courseTemplateBo.setSchooltimeDaySet(e.getSchooltimeDaySet());
        courseTemplateBo.setSchooltimeWeek(e.getSchooltimeWeek());
        courseTemplateBo.setSchooltimeWeekSet(e.getSchooltimeWeekSet());
        courseTemplateBo.setServiceCharge(e.getServiceCharge());
        courseTemplateBo.setStartDate(e.getStartDate().getTimeInMillis());
        courseTemplateBo.setStartDateEnd(e.getStartDateEnd().getTimeInMillis());
        courseTemplateBo.setStartDateStart(e.getStartDateStart().getTimeInMillis());
        courseTemplateBo.setStartTime1(e.getStartTime1());
        courseTemplateBo.setStartTime2(e.getStartTime2());
        courseTemplateBo.setStartUponArrival(e.getStartUponArrival());
        courseTemplateBo.setStatus(e.getStatus());
        courseTemplateBo.setStatusSet(e.getStatusSet());
        courseTemplateBo.setStudyDayNote(e.getStudyDayNote());
        courseTemplateBo.setSuitableStudent(e.getSuitableStudent());
        if (e.getTeacherList() != null) {
            List<TeacherBo> list = new ArrayList<>();
            for (TeacherEntityExt a : e.getTeacherList()) {
                list.add(TeacherConverter.toBo(a));
            }
            courseTemplateBo.setTeacherList(list);
        }
        courseTemplateBo.setTeachingAndExercise(e.getTeachingAndExercise());
        courseTemplateBo.setTeachingMaterialFee(e.getTeachingMaterialFee());
        courseTemplateBo.setTeachingMaterialIntro(e.getTeachingMaterialIntro());
        courseTemplateBo.setTeachingMethod(e.getTeachingMethod());
        courseTemplateBo.setTrail(e.getTrail());
        courseTemplateBo.setWholeName(e.getWholeName());
        return courseTemplateBo;
    }

    public static CourseTemplateEntityExt fromBo(CourseTemplateBo bo) {
        CourseTemplateEntityExt courseTemplateEntityExt = new CourseTemplateEntityExt();
        courseTemplateEntityExt.setAddress(bo.getAddress());
        courseTemplateEntityExt.setAddressId(bo.getAddressId());
        courseTemplateEntityExt.setAddressLat(bo.getAddressLat());
        courseTemplateEntityExt.setAddressLat(bo.getAddressLat());
        courseTemplateEntityExt.setAddressLng(bo.getAddressLng());
        courseTemplateEntityExt.setAssignments(bo.getAssignments());
        courseTemplateEntityExt.setBonusService(bo.getBonusService());
        courseTemplateEntityExt.setBookingTotal(bo.getBookingTotal());
        courseTemplateEntityExt.setBookingTotalEnd(bo.getBookingTotalEnd());
        courseTemplateEntityExt.setBookingTotalSet(bo.getBookingTotalSet());
        courseTemplateEntityExt.setBookingTotalStart(bo.getBookingTotalStart());
        courseTemplateEntityExt.setBookingType(bo.getBookingType());
        courseTemplateEntityExt.setCashback(bo.getCashback());
        courseTemplateEntityExt.setCashbackDate(DateUtility.getTimeFromLong(bo.getCashbackDate()));
        courseTemplateEntityExt.setCashbackDateEnd(DateUtility.getTimeFromLong(bo.getCashbackDateEnd()));
        courseTemplateEntityExt.setCashbackDateStart(DateUtility.getTimeFromLong(bo.getCashbackDateStart()));
        courseTemplateEntityExt.setCashbackEnd(bo.getCashbackEnd());
        courseTemplateEntityExt.setCashbackStart(bo.getCashbackStart());
        courseTemplateEntityExt.setCategoryId(bo.getCategoryId());
        courseTemplateEntityExt.setCategoryIdSet(bo.getCategoryIdSet());
        courseTemplateEntityExt.setCategoryName(bo.getCategoryName());
        courseTemplateEntityExt.setCategoryRank(bo.getCategoryRank());
        courseTemplateEntityExt.setCategoryValue(bo.getCategoryValue());
        courseTemplateEntityExt.setCertification(bo.getCertification());
        courseTemplateEntityExt.setCircleId(bo.getCircleId());
        courseTemplateEntityExt.setCircleIdSet(bo.getCircleIdSet());
        courseTemplateEntityExt.setCircleName(bo.getCircleName());
        courseTemplateEntityExt.setCircleValue(bo.getCircleValue());
        if (bo.getClassPhotoList() != null) {
            List<ClassPhotoEntityExt> list = new ArrayList<>();
            for (ClassPhotoBo a : bo.getClassPhotoList()) {
                list.add(ClassPhotoConverter.fromBo(a));
            }
            courseTemplateEntityExt.setClassPhotoList(list);
        }
        courseTemplateEntityExt.setClassSize(bo.getClassSize());
        courseTemplateEntityExt.setClassTeacher(bo.getClassTeacher());
        courseTemplateEntityExt.setClassType(bo.getClassType());
        courseTemplateEntityExt.setClassTypeSet(bo.getClassTypeSet());
        courseTemplateEntityExt.setCommission(bo.getCommission());
        courseTemplateEntityExt.setContact(bo.getContact());
        courseTemplateEntityExt.setCourseHourLength(bo.getCourseHourLength());
        courseTemplateEntityExt.setCourseHourNum(bo.getCourseHourNum());
        courseTemplateEntityExt.setCourseHourNumEnd(bo.getCourseHourNumEnd());
        courseTemplateEntityExt.setCourseHourNumSet(bo.getCourseHourNumSet());
        courseTemplateEntityExt.setCourseHourNumStart(bo.getCourseHourNumStart());
        courseTemplateEntityExt.setCourseIntro(bo.getCourseIntro());
        courseTemplateEntityExt.setCourseName(bo.getCourseName());
        courseTemplateEntityExt.setCreateTime(DateUtility.getTimeFromLong(bo.getCreateTime()));
        courseTemplateEntityExt.setCreateTimeEnd(DateUtility.getTimeFromLong(bo.getCreateTimeEnd()));
        courseTemplateEntityExt.setCreateTimeStart(DateUtility.getTimeFromLong(bo.getCreateTimeStart()));
        courseTemplateEntityExt.setCutoffDate(DateUtility.getTimeFromLong(bo.getCutoffDate()));
        courseTemplateEntityExt.setCutoffDateEnd(DateUtility.getTimeFromLong(bo.getCutoffDateEnd()));
        courseTemplateEntityExt.setCutoffDateStart(DateUtility.getTimeFromLong(bo.getCutoffDateStart()));
        courseTemplateEntityExt.setDiscount(bo.getDiscount());
        courseTemplateEntityExt.setDiscountEnd(bo.getDiscountEnd());
        courseTemplateEntityExt.setDiscountEnd(bo.getDiscountEnd());
        courseTemplateEntityExt.setDiscountStart(bo.getDiscountStart());
        courseTemplateEntityExt.setDownloadMaterials(bo.getDownloadMaterials());
        courseTemplateEntityExt.setEnabled(bo.getEnabled());
        courseTemplateEntityExt.setExtracurricular(bo.getExtracurricular());
        courseTemplateEntityExt.setFinishDate(DateUtility.getTimeFromLong(bo.getFinishDate()));
        courseTemplateEntityExt.setFinishDateEnd(DateUtility.getTimeFromLong(bo.getFinishDateEnd()));
        courseTemplateEntityExt.setFinishDateStart(DateUtility.getTimeFromLong(bo.getFinishDateStart()));
        courseTemplateEntityExt.setFinishTime1(bo.getFinishTime1());
        courseTemplateEntityExt.setFinishTime2(bo.getFinishTime2());
        courseTemplateEntityExt.setGoal(bo.getGoal());
        courseTemplateEntityExt.setHighScoreReward(bo.getHighScoreReward());
        courseTemplateEntityExt.setId(bo.getId());
        courseTemplateEntityExt.setIdSet(bo.getIdSet());
        courseTemplateEntityExt.setInstName(bo.getInstName());
        courseTemplateEntityExt.setLastModifyTime(DateUtility.getTimeFromLong(bo.getLastModifyTime()));
        courseTemplateEntityExt.setLastModifyTimeEnd(DateUtility.getTimeFromLong(bo.getLastModifyTimeEnd()));
        courseTemplateEntityExt.setLastModifyTimeStart(DateUtility.getTimeFromLong(bo.getLastModifyTimeStart()));
        courseTemplateEntityExt.setLocationId(bo.getLocationId());
        courseTemplateEntityExt.setLocationIdSet(bo.getLocationIdSet());
        courseTemplateEntityExt.setLocationName(bo.getLocationName());
        courseTemplateEntityExt.setLocationValue(bo.getLocationValue());
        courseTemplateEntityExt.setLogoUrl(bo.getLogoUrl());
        courseTemplateEntityExt.setMarking(bo.getMarking());
        courseTemplateEntityExt.setNoRefundDate(DateUtility.getTimeFromLong(bo.getNoRefundDate()));
        courseTemplateEntityExt.setNoRefundDateEnd(DateUtility.getTimeFromLong(bo.getNoRefundDateEnd()));
        courseTemplateEntityExt.setNoRefundDateStart(DateUtility.getTimeFromLong(bo.getNoRefundDateStart()));
        courseTemplateEntityExt.setOpenCourseRequirement(bo.getOpenCourseRequirement());
        courseTemplateEntityExt.setOriginalPrice(bo.getOriginalPrice());
        courseTemplateEntityExt.setOriginalPriceEnd(bo.getOriginalPriceEnd());
        courseTemplateEntityExt.setOriginalPriceStart(bo.getOriginalPriceStart());
        courseTemplateEntityExt.setOutline(bo.getOutline());
        courseTemplateEntityExt.setPartnerDistinction(bo.getPartnerDistinction());
        courseTemplateEntityExt.setPartnerId(bo.getPartnerId());
        courseTemplateEntityExt.setPartnerIdSet(bo.getPartnerIdSet());
        courseTemplateEntityExt.setPartnerIntro(bo.getPartnerIntro());
        courseTemplateEntityExt.setPartnerQualification(bo.getPartnerQualification());
        courseTemplateEntityExt.setPartnerRating(bo.getPartnerRating());
        courseTemplateEntityExt.setPassAgreement(bo.getPassAgreement());
        courseTemplateEntityExt.setPopularity(bo.getPopularity());
        courseTemplateEntityExt.setPopularityEnd(bo.getPopularityEnd());
        courseTemplateEntityExt.setPopularitySet(bo.getPopularitySet());
        courseTemplateEntityExt.setPopularityStart(bo.getPopularityStart());
        courseTemplateEntityExt.setPrerequest(bo.getPrerequest());
        courseTemplateEntityExt.setPrice(bo.getPrice());
        courseTemplateEntityExt.setPriceEnd(bo.getPriceEnd());
        courseTemplateEntityExt.setPriceStart(bo.getPriceStart());
        courseTemplateEntityExt.setQualityAssurance(bo.getQualityAssurance());
        courseTemplateEntityExt.setQuestionBank(bo.getQuestionBank());
        courseTemplateEntityExt.setQuestionSession(bo.getQuestionSession());
        courseTemplateEntityExt.setQuiz(bo.getQuiz());
        courseTemplateEntityExt.setRating(bo.getRating());
        courseTemplateEntityExt.setRatingEnd(bo.getRatingEnd());
        courseTemplateEntityExt.setRatingStart(bo.getRatingStart());
        courseTemplateEntityExt.setReference(bo.getReference());
        courseTemplateEntityExt.setRegLocation(bo.getRegLocation());
        courseTemplateEntityExt.setRegPhone(bo.getRegPhone());
        courseTemplateEntityExt.setSchooltimeDay(bo.getSchooltimeDay());
        courseTemplateEntityExt.setSchooltimeDaySet(bo.getSchooltimeDaySet());
        courseTemplateEntityExt.setSchooltimeWeek(bo.getSchooltimeWeek());
        courseTemplateEntityExt.setSchooltimeWeekSet(bo.getSchooltimeWeekSet());
        courseTemplateEntityExt.setServiceCharge(bo.getServiceCharge());
        courseTemplateEntityExt.setStartDate(DateUtility.getTimeFromLong(bo.getStartDate()));
        courseTemplateEntityExt.setStartDateEnd(DateUtility.getTimeFromLong(bo.getStartDateEnd()));
        courseTemplateEntityExt.setStartDateStart(DateUtility.getTimeFromLong(bo.getStartDateStart()));
        courseTemplateEntityExt.setStartTime1(bo.getStartTime1());
        courseTemplateEntityExt.setStartTime2(bo.getStartTime2());
        courseTemplateEntityExt.setStartUponArrival(bo.getStartUponArrival());
        courseTemplateEntityExt.setStatus(bo.getStatus());
        courseTemplateEntityExt.setStatusSet(bo.getStatusSet());
        courseTemplateEntityExt.setStudyDayNote(bo.getStudyDayNote());
        courseTemplateEntityExt.setSuitableStudent(bo.getSuitableStudent());
        if (bo.getTeacherList() != null) {
            List<TeacherEntityExt> list = new ArrayList<>();
            for (TeacherBo a : bo.getTeacherList()) {
                list.add(TeacherConverter.fromBo(a));
            }
            courseTemplateEntityExt.setTeacherList(list);
        }
        courseTemplateEntityExt.setTeachingAndExercise(bo.getTeachingAndExercise());
        courseTemplateEntityExt.setTeachingMaterialFee(bo.getTeachingMaterialFee());
        courseTemplateEntityExt.setTeachingMaterialIntro(bo.getTeachingMaterialIntro());
        courseTemplateEntityExt.setTeachingMethod(bo.getTeachingMethod());
        courseTemplateEntityExt.setTrail(bo.getTrail());
        courseTemplateEntityExt.setWholeName(bo.getWholeName());
        return courseTemplateEntityExt;
    }
}
