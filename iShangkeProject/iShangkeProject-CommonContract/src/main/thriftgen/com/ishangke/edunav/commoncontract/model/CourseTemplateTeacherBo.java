/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ishangke.edunav.commoncontract.model;

import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CourseTemplateTeacherBo implements org.apache.thrift.TBase<CourseTemplateTeacherBo, CourseTemplateTeacherBo._Fields>, java.io.Serializable, Cloneable, Comparable<CourseTemplateTeacherBo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CourseTemplateTeacherBo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COURSE_TEMPLATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("courseTemplateId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField TEACHER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("teacherId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("idSet", org.apache.thrift.protocol.TType.SET, (short)5);
  private static final org.apache.thrift.protocol.TField COURSE_TEMPLATE_ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("courseTemplateIdSet", org.apache.thrift.protocol.TType.SET, (short)6);
  private static final org.apache.thrift.protocol.TField TEACHER_ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("teacherIdSet", org.apache.thrift.protocol.TType.SET, (short)7);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeStart", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeEnd", org.apache.thrift.protocol.TType.I64, (short)9);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CourseTemplateTeacherBoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CourseTemplateTeacherBoTupleSchemeFactory());
  }

  public int id; // required
  public int courseTemplateId; // required
  public int teacherId; // required
  public long createTime; // required
  public Set<Integer> idSet; // required
  public Set<Integer> courseTemplateIdSet; // required
  public Set<Integer> teacherIdSet; // required
  public long createTimeStart; // required
  public long createTimeEnd; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    COURSE_TEMPLATE_ID((short)2, "courseTemplateId"),
    TEACHER_ID((short)3, "teacherId"),
    CREATE_TIME((short)4, "createTime"),
    ID_SET((short)5, "idSet"),
    COURSE_TEMPLATE_ID_SET((short)6, "courseTemplateIdSet"),
    TEACHER_ID_SET((short)7, "teacherIdSet"),
    CREATE_TIME_START((short)8, "createTimeStart"),
    CREATE_TIME_END((short)9, "createTimeEnd");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // COURSE_TEMPLATE_ID
          return COURSE_TEMPLATE_ID;
        case 3: // TEACHER_ID
          return TEACHER_ID;
        case 4: // CREATE_TIME
          return CREATE_TIME;
        case 5: // ID_SET
          return ID_SET;
        case 6: // COURSE_TEMPLATE_ID_SET
          return COURSE_TEMPLATE_ID_SET;
        case 7: // TEACHER_ID_SET
          return TEACHER_ID_SET;
        case 8: // CREATE_TIME_START
          return CREATE_TIME_START;
        case 9: // CREATE_TIME_END
          return CREATE_TIME_END;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COURSETEMPLATEID_ISSET_ID = 1;
  private static final int __TEACHERID_ISSET_ID = 2;
  private static final int __CREATETIME_ISSET_ID = 3;
  private static final int __CREATETIMESTART_ISSET_ID = 4;
  private static final int __CREATETIMEEND_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COURSE_TEMPLATE_ID, new org.apache.thrift.meta_data.FieldMetaData("courseTemplateId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TEACHER_ID, new org.apache.thrift.meta_data.FieldMetaData("teacherId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ID_SET, new org.apache.thrift.meta_data.FieldMetaData("idSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.COURSE_TEMPLATE_ID_SET, new org.apache.thrift.meta_data.FieldMetaData("courseTemplateIdSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.TEACHER_ID_SET, new org.apache.thrift.meta_data.FieldMetaData("teacherIdSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.CREATE_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("createTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("createTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CourseTemplateTeacherBo.class, metaDataMap);
  }

  public CourseTemplateTeacherBo() {
  }

  public CourseTemplateTeacherBo(
    int id,
    int courseTemplateId,
    int teacherId,
    long createTime,
    Set<Integer> idSet,
    Set<Integer> courseTemplateIdSet,
    Set<Integer> teacherIdSet,
    long createTimeStart,
    long createTimeEnd)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.courseTemplateId = courseTemplateId;
    setCourseTemplateIdIsSet(true);
    this.teacherId = teacherId;
    setTeacherIdIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.idSet = idSet;
    this.courseTemplateIdSet = courseTemplateIdSet;
    this.teacherIdSet = teacherIdSet;
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CourseTemplateTeacherBo(CourseTemplateTeacherBo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.courseTemplateId = other.courseTemplateId;
    this.teacherId = other.teacherId;
    this.createTime = other.createTime;
    if (other.isSetIdSet()) {
      Set<Integer> __this__idSet = new HashSet<Integer>(other.idSet);
      this.idSet = __this__idSet;
    }
    if (other.isSetCourseTemplateIdSet()) {
      Set<Integer> __this__courseTemplateIdSet = new HashSet<Integer>(other.courseTemplateIdSet);
      this.courseTemplateIdSet = __this__courseTemplateIdSet;
    }
    if (other.isSetTeacherIdSet()) {
      Set<Integer> __this__teacherIdSet = new HashSet<Integer>(other.teacherIdSet);
      this.teacherIdSet = __this__teacherIdSet;
    }
    this.createTimeStart = other.createTimeStart;
    this.createTimeEnd = other.createTimeEnd;
  }

  public CourseTemplateTeacherBo deepCopy() {
    return new CourseTemplateTeacherBo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCourseTemplateIdIsSet(false);
    this.courseTemplateId = 0;
    setTeacherIdIsSet(false);
    this.teacherId = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.idSet = null;
    this.courseTemplateIdSet = null;
    this.teacherIdSet = null;
    setCreateTimeStartIsSet(false);
    this.createTimeStart = 0;
    setCreateTimeEndIsSet(false);
    this.createTimeEnd = 0;
  }

  public int getId() {
    return this.id;
  }

  public CourseTemplateTeacherBo setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getCourseTemplateId() {
    return this.courseTemplateId;
  }

  public CourseTemplateTeacherBo setCourseTemplateId(int courseTemplateId) {
    this.courseTemplateId = courseTemplateId;
    setCourseTemplateIdIsSet(true);
    return this;
  }

  public void unsetCourseTemplateId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COURSETEMPLATEID_ISSET_ID);
  }

  /** Returns true if field courseTemplateId is set (has been assigned a value) and false otherwise */
  public boolean isSetCourseTemplateId() {
    return EncodingUtils.testBit(__isset_bitfield, __COURSETEMPLATEID_ISSET_ID);
  }

  public void setCourseTemplateIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COURSETEMPLATEID_ISSET_ID, value);
  }

  public int getTeacherId() {
    return this.teacherId;
  }

  public CourseTemplateTeacherBo setTeacherId(int teacherId) {
    this.teacherId = teacherId;
    setTeacherIdIsSet(true);
    return this;
  }

  public void unsetTeacherId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TEACHERID_ISSET_ID);
  }

  /** Returns true if field teacherId is set (has been assigned a value) and false otherwise */
  public boolean isSetTeacherId() {
    return EncodingUtils.testBit(__isset_bitfield, __TEACHERID_ISSET_ID);
  }

  public void setTeacherIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TEACHERID_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public CourseTemplateTeacherBo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public int getIdSetSize() {
    return (this.idSet == null) ? 0 : this.idSet.size();
  }

  public java.util.Iterator<Integer> getIdSetIterator() {
    return (this.idSet == null) ? null : this.idSet.iterator();
  }

  public void addToIdSet(int elem) {
    if (this.idSet == null) {
      this.idSet = new HashSet<Integer>();
    }
    this.idSet.add(elem);
  }

  public Set<Integer> getIdSet() {
    return this.idSet;
  }

  public CourseTemplateTeacherBo setIdSet(Set<Integer> idSet) {
    this.idSet = idSet;
    return this;
  }

  public void unsetIdSet() {
    this.idSet = null;
  }

  /** Returns true if field idSet is set (has been assigned a value) and false otherwise */
  public boolean isSetIdSet() {
    return this.idSet != null;
  }

  public void setIdSetIsSet(boolean value) {
    if (!value) {
      this.idSet = null;
    }
  }

  public int getCourseTemplateIdSetSize() {
    return (this.courseTemplateIdSet == null) ? 0 : this.courseTemplateIdSet.size();
  }

  public java.util.Iterator<Integer> getCourseTemplateIdSetIterator() {
    return (this.courseTemplateIdSet == null) ? null : this.courseTemplateIdSet.iterator();
  }

  public void addToCourseTemplateIdSet(int elem) {
    if (this.courseTemplateIdSet == null) {
      this.courseTemplateIdSet = new HashSet<Integer>();
    }
    this.courseTemplateIdSet.add(elem);
  }

  public Set<Integer> getCourseTemplateIdSet() {
    return this.courseTemplateIdSet;
  }

  public CourseTemplateTeacherBo setCourseTemplateIdSet(Set<Integer> courseTemplateIdSet) {
    this.courseTemplateIdSet = courseTemplateIdSet;
    return this;
  }

  public void unsetCourseTemplateIdSet() {
    this.courseTemplateIdSet = null;
  }

  /** Returns true if field courseTemplateIdSet is set (has been assigned a value) and false otherwise */
  public boolean isSetCourseTemplateIdSet() {
    return this.courseTemplateIdSet != null;
  }

  public void setCourseTemplateIdSetIsSet(boolean value) {
    if (!value) {
      this.courseTemplateIdSet = null;
    }
  }

  public int getTeacherIdSetSize() {
    return (this.teacherIdSet == null) ? 0 : this.teacherIdSet.size();
  }

  public java.util.Iterator<Integer> getTeacherIdSetIterator() {
    return (this.teacherIdSet == null) ? null : this.teacherIdSet.iterator();
  }

  public void addToTeacherIdSet(int elem) {
    if (this.teacherIdSet == null) {
      this.teacherIdSet = new HashSet<Integer>();
    }
    this.teacherIdSet.add(elem);
  }

  public Set<Integer> getTeacherIdSet() {
    return this.teacherIdSet;
  }

  public CourseTemplateTeacherBo setTeacherIdSet(Set<Integer> teacherIdSet) {
    this.teacherIdSet = teacherIdSet;
    return this;
  }

  public void unsetTeacherIdSet() {
    this.teacherIdSet = null;
  }

  /** Returns true if field teacherIdSet is set (has been assigned a value) and false otherwise */
  public boolean isSetTeacherIdSet() {
    return this.teacherIdSet != null;
  }

  public void setTeacherIdSetIsSet(boolean value) {
    if (!value) {
      this.teacherIdSet = null;
    }
  }

  public long getCreateTimeStart() {
    return this.createTimeStart;
  }

  public CourseTemplateTeacherBo setCreateTimeStart(long createTimeStart) {
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    return this;
  }

  public void unsetCreateTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  /** Returns true if field createTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  public void setCreateTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID, value);
  }

  public long getCreateTimeEnd() {
    return this.createTimeEnd;
  }

  public CourseTemplateTeacherBo setCreateTimeEnd(long createTimeEnd) {
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
    return this;
  }

  public void unsetCreateTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  /** Returns true if field createTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  public void setCreateTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case COURSE_TEMPLATE_ID:
      if (value == null) {
        unsetCourseTemplateId();
      } else {
        setCourseTemplateId((Integer)value);
      }
      break;

    case TEACHER_ID:
      if (value == null) {
        unsetTeacherId();
      } else {
        setTeacherId((Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case ID_SET:
      if (value == null) {
        unsetIdSet();
      } else {
        setIdSet((Set<Integer>)value);
      }
      break;

    case COURSE_TEMPLATE_ID_SET:
      if (value == null) {
        unsetCourseTemplateIdSet();
      } else {
        setCourseTemplateIdSet((Set<Integer>)value);
      }
      break;

    case TEACHER_ID_SET:
      if (value == null) {
        unsetTeacherIdSet();
      } else {
        setTeacherIdSet((Set<Integer>)value);
      }
      break;

    case CREATE_TIME_START:
      if (value == null) {
        unsetCreateTimeStart();
      } else {
        setCreateTimeStart((Long)value);
      }
      break;

    case CREATE_TIME_END:
      if (value == null) {
        unsetCreateTimeEnd();
      } else {
        setCreateTimeEnd((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Integer.valueOf(getId());

    case COURSE_TEMPLATE_ID:
      return Integer.valueOf(getCourseTemplateId());

    case TEACHER_ID:
      return Integer.valueOf(getTeacherId());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case ID_SET:
      return getIdSet();

    case COURSE_TEMPLATE_ID_SET:
      return getCourseTemplateIdSet();

    case TEACHER_ID_SET:
      return getTeacherIdSet();

    case CREATE_TIME_START:
      return Long.valueOf(getCreateTimeStart());

    case CREATE_TIME_END:
      return Long.valueOf(getCreateTimeEnd());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case COURSE_TEMPLATE_ID:
      return isSetCourseTemplateId();
    case TEACHER_ID:
      return isSetTeacherId();
    case CREATE_TIME:
      return isSetCreateTime();
    case ID_SET:
      return isSetIdSet();
    case COURSE_TEMPLATE_ID_SET:
      return isSetCourseTemplateIdSet();
    case TEACHER_ID_SET:
      return isSetTeacherIdSet();
    case CREATE_TIME_START:
      return isSetCreateTimeStart();
    case CREATE_TIME_END:
      return isSetCreateTimeEnd();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CourseTemplateTeacherBo)
      return this.equals((CourseTemplateTeacherBo)that);
    return false;
  }

  public boolean equals(CourseTemplateTeacherBo that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_courseTemplateId = true;
    boolean that_present_courseTemplateId = true;
    if (this_present_courseTemplateId || that_present_courseTemplateId) {
      if (!(this_present_courseTemplateId && that_present_courseTemplateId))
        return false;
      if (this.courseTemplateId != that.courseTemplateId)
        return false;
    }

    boolean this_present_teacherId = true;
    boolean that_present_teacherId = true;
    if (this_present_teacherId || that_present_teacherId) {
      if (!(this_present_teacherId && that_present_teacherId))
        return false;
      if (this.teacherId != that.teacherId)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_idSet = true && this.isSetIdSet();
    boolean that_present_idSet = true && that.isSetIdSet();
    if (this_present_idSet || that_present_idSet) {
      if (!(this_present_idSet && that_present_idSet))
        return false;
      if (!this.idSet.equals(that.idSet))
        return false;
    }

    boolean this_present_courseTemplateIdSet = true && this.isSetCourseTemplateIdSet();
    boolean that_present_courseTemplateIdSet = true && that.isSetCourseTemplateIdSet();
    if (this_present_courseTemplateIdSet || that_present_courseTemplateIdSet) {
      if (!(this_present_courseTemplateIdSet && that_present_courseTemplateIdSet))
        return false;
      if (!this.courseTemplateIdSet.equals(that.courseTemplateIdSet))
        return false;
    }

    boolean this_present_teacherIdSet = true && this.isSetTeacherIdSet();
    boolean that_present_teacherIdSet = true && that.isSetTeacherIdSet();
    if (this_present_teacherIdSet || that_present_teacherIdSet) {
      if (!(this_present_teacherIdSet && that_present_teacherIdSet))
        return false;
      if (!this.teacherIdSet.equals(that.teacherIdSet))
        return false;
    }

    boolean this_present_createTimeStart = true;
    boolean that_present_createTimeStart = true;
    if (this_present_createTimeStart || that_present_createTimeStart) {
      if (!(this_present_createTimeStart && that_present_createTimeStart))
        return false;
      if (this.createTimeStart != that.createTimeStart)
        return false;
    }

    boolean this_present_createTimeEnd = true;
    boolean that_present_createTimeEnd = true;
    if (this_present_createTimeEnd || that_present_createTimeEnd) {
      if (!(this_present_createTimeEnd && that_present_createTimeEnd))
        return false;
      if (this.createTimeEnd != that.createTimeEnd)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_id = true;
    builder.append(present_id);
    if (present_id)
      builder.append(id);

    boolean present_courseTemplateId = true;
    builder.append(present_courseTemplateId);
    if (present_courseTemplateId)
      builder.append(courseTemplateId);

    boolean present_teacherId = true;
    builder.append(present_teacherId);
    if (present_teacherId)
      builder.append(teacherId);

    boolean present_createTime = true;
    builder.append(present_createTime);
    if (present_createTime)
      builder.append(createTime);

    boolean present_idSet = true && (isSetIdSet());
    builder.append(present_idSet);
    if (present_idSet)
      builder.append(idSet);

    boolean present_courseTemplateIdSet = true && (isSetCourseTemplateIdSet());
    builder.append(present_courseTemplateIdSet);
    if (present_courseTemplateIdSet)
      builder.append(courseTemplateIdSet);

    boolean present_teacherIdSet = true && (isSetTeacherIdSet());
    builder.append(present_teacherIdSet);
    if (present_teacherIdSet)
      builder.append(teacherIdSet);

    boolean present_createTimeStart = true;
    builder.append(present_createTimeStart);
    if (present_createTimeStart)
      builder.append(createTimeStart);

    boolean present_createTimeEnd = true;
    builder.append(present_createTimeEnd);
    if (present_createTimeEnd)
      builder.append(createTimeEnd);

    return builder.toHashCode();
  }

  @Override
  public int compareTo(CourseTemplateTeacherBo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCourseTemplateId()).compareTo(other.isSetCourseTemplateId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCourseTemplateId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.courseTemplateId, other.courseTemplateId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTeacherId()).compareTo(other.isSetTeacherId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTeacherId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.teacherId, other.teacherId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdSet()).compareTo(other.isSetIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idSet, other.idSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCourseTemplateIdSet()).compareTo(other.isSetCourseTemplateIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCourseTemplateIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.courseTemplateIdSet, other.courseTemplateIdSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTeacherIdSet()).compareTo(other.isSetTeacherIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTeacherIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.teacherIdSet, other.teacherIdSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeStart()).compareTo(other.isSetCreateTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeStart, other.createTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeEnd()).compareTo(other.isSetCreateTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeEnd, other.createTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CourseTemplateTeacherBo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("courseTemplateId:");
    sb.append(this.courseTemplateId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("teacherId:");
    sb.append(this.teacherId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idSet:");
    if (this.idSet == null) {
      sb.append("null");
    } else {
      sb.append(this.idSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("courseTemplateIdSet:");
    if (this.courseTemplateIdSet == null) {
      sb.append("null");
    } else {
      sb.append(this.courseTemplateIdSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("teacherIdSet:");
    if (this.teacherIdSet == null) {
      sb.append("null");
    } else {
      sb.append(this.teacherIdSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeStart:");
    sb.append(this.createTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeEnd:");
    sb.append(this.createTimeEnd);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CourseTemplateTeacherBoStandardSchemeFactory implements SchemeFactory {
    public CourseTemplateTeacherBoStandardScheme getScheme() {
      return new CourseTemplateTeacherBoStandardScheme();
    }
  }

  private static class CourseTemplateTeacherBoStandardScheme extends StandardScheme<CourseTemplateTeacherBo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CourseTemplateTeacherBo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COURSE_TEMPLATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.courseTemplateId = iprot.readI32();
              struct.setCourseTemplateIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TEACHER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.teacherId = iprot.readI32();
              struct.setTeacherIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set0 = iprot.readSetBegin();
                struct.idSet = new HashSet<Integer>(2*_set0.size);
                for (int _i1 = 0; _i1 < _set0.size; ++_i1)
                {
                  int _elem2;
                  _elem2 = iprot.readI32();
                  struct.idSet.add(_elem2);
                }
                iprot.readSetEnd();
              }
              struct.setIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // COURSE_TEMPLATE_ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set3 = iprot.readSetBegin();
                struct.courseTemplateIdSet = new HashSet<Integer>(2*_set3.size);
                for (int _i4 = 0; _i4 < _set3.size; ++_i4)
                {
                  int _elem5;
                  _elem5 = iprot.readI32();
                  struct.courseTemplateIdSet.add(_elem5);
                }
                iprot.readSetEnd();
              }
              struct.setCourseTemplateIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TEACHER_ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set6 = iprot.readSetBegin();
                struct.teacherIdSet = new HashSet<Integer>(2*_set6.size);
                for (int _i7 = 0; _i7 < _set6.size; ++_i7)
                {
                  int _elem8;
                  _elem8 = iprot.readI32();
                  struct.teacherIdSet.add(_elem8);
                }
                iprot.readSetEnd();
              }
              struct.setTeacherIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREATE_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeStart = iprot.readI64();
              struct.setCreateTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CREATE_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeEnd = iprot.readI64();
              struct.setCreateTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CourseTemplateTeacherBo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COURSE_TEMPLATE_ID_FIELD_DESC);
      oprot.writeI32(struct.courseTemplateId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TEACHER_ID_FIELD_DESC);
      oprot.writeI32(struct.teacherId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.idSet != null) {
        oprot.writeFieldBegin(ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.idSet.size()));
          for (int _iter9 : struct.idSet)
          {
            oprot.writeI32(_iter9);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.courseTemplateIdSet != null) {
        oprot.writeFieldBegin(COURSE_TEMPLATE_ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.courseTemplateIdSet.size()));
          for (int _iter10 : struct.courseTemplateIdSet)
          {
            oprot.writeI32(_iter10);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.teacherIdSet != null) {
        oprot.writeFieldBegin(TEACHER_ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.teacherIdSet.size()));
          for (int _iter11 : struct.teacherIdSet)
          {
            oprot.writeI32(_iter11);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.createTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.createTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CourseTemplateTeacherBoTupleSchemeFactory implements SchemeFactory {
    public CourseTemplateTeacherBoTupleScheme getScheme() {
      return new CourseTemplateTeacherBoTupleScheme();
    }
  }

  private static class CourseTemplateTeacherBoTupleScheme extends TupleScheme<CourseTemplateTeacherBo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CourseTemplateTeacherBo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCourseTemplateId()) {
        optionals.set(1);
      }
      if (struct.isSetTeacherId()) {
        optionals.set(2);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(3);
      }
      if (struct.isSetIdSet()) {
        optionals.set(4);
      }
      if (struct.isSetCourseTemplateIdSet()) {
        optionals.set(5);
      }
      if (struct.isSetTeacherIdSet()) {
        optionals.set(6);
      }
      if (struct.isSetCreateTimeStart()) {
        optionals.set(7);
      }
      if (struct.isSetCreateTimeEnd()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCourseTemplateId()) {
        oprot.writeI32(struct.courseTemplateId);
      }
      if (struct.isSetTeacherId()) {
        oprot.writeI32(struct.teacherId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetIdSet()) {
        {
          oprot.writeI32(struct.idSet.size());
          for (int _iter12 : struct.idSet)
          {
            oprot.writeI32(_iter12);
          }
        }
      }
      if (struct.isSetCourseTemplateIdSet()) {
        {
          oprot.writeI32(struct.courseTemplateIdSet.size());
          for (int _iter13 : struct.courseTemplateIdSet)
          {
            oprot.writeI32(_iter13);
          }
        }
      }
      if (struct.isSetTeacherIdSet()) {
        {
          oprot.writeI32(struct.teacherIdSet.size());
          for (int _iter14 : struct.teacherIdSet)
          {
            oprot.writeI32(_iter14);
          }
        }
      }
      if (struct.isSetCreateTimeStart()) {
        oprot.writeI64(struct.createTimeStart);
      }
      if (struct.isSetCreateTimeEnd()) {
        oprot.writeI64(struct.createTimeEnd);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CourseTemplateTeacherBo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.courseTemplateId = iprot.readI32();
        struct.setCourseTemplateIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.teacherId = iprot.readI32();
        struct.setTeacherIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TSet _set15 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.idSet = new HashSet<Integer>(2*_set15.size);
          for (int _i16 = 0; _i16 < _set15.size; ++_i16)
          {
            int _elem17;
            _elem17 = iprot.readI32();
            struct.idSet.add(_elem17);
          }
        }
        struct.setIdSetIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TSet _set18 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.courseTemplateIdSet = new HashSet<Integer>(2*_set18.size);
          for (int _i19 = 0; _i19 < _set18.size; ++_i19)
          {
            int _elem20;
            _elem20 = iprot.readI32();
            struct.courseTemplateIdSet.add(_elem20);
          }
        }
        struct.setCourseTemplateIdSetIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TSet _set21 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.teacherIdSet = new HashSet<Integer>(2*_set21.size);
          for (int _i22 = 0; _i22 < _set21.size; ++_i22)
          {
            int _elem23;
            _elem23 = iprot.readI32();
            struct.teacherIdSet.add(_elem23);
          }
        }
        struct.setTeacherIdSetIsSet(true);
      }
      if (incoming.get(7)) {
        struct.createTimeStart = iprot.readI64();
        struct.setCreateTimeStartIsSet(true);
      }
      if (incoming.get(8)) {
        struct.createTimeEnd = iprot.readI64();
        struct.setCreateTimeEndIsSet(true);
      }
    }
  }

}

