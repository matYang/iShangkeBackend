/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ishangke.edunav.commoncontract.model;

import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CourseClassPhotoBo implements org.apache.thrift.TBase<CourseClassPhotoBo, CourseClassPhotoBo._Fields>, java.io.Serializable, Cloneable, Comparable<CourseClassPhotoBo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CourseClassPhotoBo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COURSE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("courseId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField CLASS_PHOTO_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("classPhotoId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("idSet", org.apache.thrift.protocol.TType.SET, (short)5);
  private static final org.apache.thrift.protocol.TField COURSE_ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("courseIdSet", org.apache.thrift.protocol.TType.SET, (short)6);
  private static final org.apache.thrift.protocol.TField CLASS_PHOTO_ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("classPhotoIdSet", org.apache.thrift.protocol.TType.SET, (short)7);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeStart", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeEnd", org.apache.thrift.protocol.TType.I64, (short)9);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CourseClassPhotoBoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CourseClassPhotoBoTupleSchemeFactory());
  }

  public int id; // required
  public int courseId; // required
  public int classPhotoId; // required
  public long createTime; // required
  public Set<Integer> idSet; // required
  public Set<Integer> courseIdSet; // required
  public Set<Integer> classPhotoIdSet; // required
  public long createTimeStart; // required
  public long createTimeEnd; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    COURSE_ID((short)2, "courseId"),
    CLASS_PHOTO_ID((short)3, "classPhotoId"),
    CREATE_TIME((short)4, "createTime"),
    ID_SET((short)5, "idSet"),
    COURSE_ID_SET((short)6, "courseIdSet"),
    CLASS_PHOTO_ID_SET((short)7, "classPhotoIdSet"),
    CREATE_TIME_START((short)8, "createTimeStart"),
    CREATE_TIME_END((short)9, "createTimeEnd");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // COURSE_ID
          return COURSE_ID;
        case 3: // CLASS_PHOTO_ID
          return CLASS_PHOTO_ID;
        case 4: // CREATE_TIME
          return CREATE_TIME;
        case 5: // ID_SET
          return ID_SET;
        case 6: // COURSE_ID_SET
          return COURSE_ID_SET;
        case 7: // CLASS_PHOTO_ID_SET
          return CLASS_PHOTO_ID_SET;
        case 8: // CREATE_TIME_START
          return CREATE_TIME_START;
        case 9: // CREATE_TIME_END
          return CREATE_TIME_END;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COURSEID_ISSET_ID = 1;
  private static final int __CLASSPHOTOID_ISSET_ID = 2;
  private static final int __CREATETIME_ISSET_ID = 3;
  private static final int __CREATETIMESTART_ISSET_ID = 4;
  private static final int __CREATETIMEEND_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COURSE_ID, new org.apache.thrift.meta_data.FieldMetaData("courseId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CLASS_PHOTO_ID, new org.apache.thrift.meta_data.FieldMetaData("classPhotoId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ID_SET, new org.apache.thrift.meta_data.FieldMetaData("idSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.COURSE_ID_SET, new org.apache.thrift.meta_data.FieldMetaData("courseIdSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.CLASS_PHOTO_ID_SET, new org.apache.thrift.meta_data.FieldMetaData("classPhotoIdSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.CREATE_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("createTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("createTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CourseClassPhotoBo.class, metaDataMap);
  }

  public CourseClassPhotoBo() {
  }

  public CourseClassPhotoBo(
    int id,
    int courseId,
    int classPhotoId,
    long createTime,
    Set<Integer> idSet,
    Set<Integer> courseIdSet,
    Set<Integer> classPhotoIdSet,
    long createTimeStart,
    long createTimeEnd)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.courseId = courseId;
    setCourseIdIsSet(true);
    this.classPhotoId = classPhotoId;
    setClassPhotoIdIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.idSet = idSet;
    this.courseIdSet = courseIdSet;
    this.classPhotoIdSet = classPhotoIdSet;
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CourseClassPhotoBo(CourseClassPhotoBo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.courseId = other.courseId;
    this.classPhotoId = other.classPhotoId;
    this.createTime = other.createTime;
    if (other.isSetIdSet()) {
      Set<Integer> __this__idSet = new HashSet<Integer>(other.idSet);
      this.idSet = __this__idSet;
    }
    if (other.isSetCourseIdSet()) {
      Set<Integer> __this__courseIdSet = new HashSet<Integer>(other.courseIdSet);
      this.courseIdSet = __this__courseIdSet;
    }
    if (other.isSetClassPhotoIdSet()) {
      Set<Integer> __this__classPhotoIdSet = new HashSet<Integer>(other.classPhotoIdSet);
      this.classPhotoIdSet = __this__classPhotoIdSet;
    }
    this.createTimeStart = other.createTimeStart;
    this.createTimeEnd = other.createTimeEnd;
  }

  public CourseClassPhotoBo deepCopy() {
    return new CourseClassPhotoBo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCourseIdIsSet(false);
    this.courseId = 0;
    setClassPhotoIdIsSet(false);
    this.classPhotoId = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.idSet = null;
    this.courseIdSet = null;
    this.classPhotoIdSet = null;
    setCreateTimeStartIsSet(false);
    this.createTimeStart = 0;
    setCreateTimeEndIsSet(false);
    this.createTimeEnd = 0;
  }

  public int getId() {
    return this.id;
  }

  public CourseClassPhotoBo setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getCourseId() {
    return this.courseId;
  }

  public CourseClassPhotoBo setCourseId(int courseId) {
    this.courseId = courseId;
    setCourseIdIsSet(true);
    return this;
  }

  public void unsetCourseId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COURSEID_ISSET_ID);
  }

  /** Returns true if field courseId is set (has been assigned a value) and false otherwise */
  public boolean isSetCourseId() {
    return EncodingUtils.testBit(__isset_bitfield, __COURSEID_ISSET_ID);
  }

  public void setCourseIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COURSEID_ISSET_ID, value);
  }

  public int getClassPhotoId() {
    return this.classPhotoId;
  }

  public CourseClassPhotoBo setClassPhotoId(int classPhotoId) {
    this.classPhotoId = classPhotoId;
    setClassPhotoIdIsSet(true);
    return this;
  }

  public void unsetClassPhotoId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CLASSPHOTOID_ISSET_ID);
  }

  /** Returns true if field classPhotoId is set (has been assigned a value) and false otherwise */
  public boolean isSetClassPhotoId() {
    return EncodingUtils.testBit(__isset_bitfield, __CLASSPHOTOID_ISSET_ID);
  }

  public void setClassPhotoIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CLASSPHOTOID_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public CourseClassPhotoBo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public int getIdSetSize() {
    return (this.idSet == null) ? 0 : this.idSet.size();
  }

  public java.util.Iterator<Integer> getIdSetIterator() {
    return (this.idSet == null) ? null : this.idSet.iterator();
  }

  public void addToIdSet(int elem) {
    if (this.idSet == null) {
      this.idSet = new HashSet<Integer>();
    }
    this.idSet.add(elem);
  }

  public Set<Integer> getIdSet() {
    return this.idSet;
  }

  public CourseClassPhotoBo setIdSet(Set<Integer> idSet) {
    this.idSet = idSet;
    return this;
  }

  public void unsetIdSet() {
    this.idSet = null;
  }

  /** Returns true if field idSet is set (has been assigned a value) and false otherwise */
  public boolean isSetIdSet() {
    return this.idSet != null;
  }

  public void setIdSetIsSet(boolean value) {
    if (!value) {
      this.idSet = null;
    }
  }

  public int getCourseIdSetSize() {
    return (this.courseIdSet == null) ? 0 : this.courseIdSet.size();
  }

  public java.util.Iterator<Integer> getCourseIdSetIterator() {
    return (this.courseIdSet == null) ? null : this.courseIdSet.iterator();
  }

  public void addToCourseIdSet(int elem) {
    if (this.courseIdSet == null) {
      this.courseIdSet = new HashSet<Integer>();
    }
    this.courseIdSet.add(elem);
  }

  public Set<Integer> getCourseIdSet() {
    return this.courseIdSet;
  }

  public CourseClassPhotoBo setCourseIdSet(Set<Integer> courseIdSet) {
    this.courseIdSet = courseIdSet;
    return this;
  }

  public void unsetCourseIdSet() {
    this.courseIdSet = null;
  }

  /** Returns true if field courseIdSet is set (has been assigned a value) and false otherwise */
  public boolean isSetCourseIdSet() {
    return this.courseIdSet != null;
  }

  public void setCourseIdSetIsSet(boolean value) {
    if (!value) {
      this.courseIdSet = null;
    }
  }

  public int getClassPhotoIdSetSize() {
    return (this.classPhotoIdSet == null) ? 0 : this.classPhotoIdSet.size();
  }

  public java.util.Iterator<Integer> getClassPhotoIdSetIterator() {
    return (this.classPhotoIdSet == null) ? null : this.classPhotoIdSet.iterator();
  }

  public void addToClassPhotoIdSet(int elem) {
    if (this.classPhotoIdSet == null) {
      this.classPhotoIdSet = new HashSet<Integer>();
    }
    this.classPhotoIdSet.add(elem);
  }

  public Set<Integer> getClassPhotoIdSet() {
    return this.classPhotoIdSet;
  }

  public CourseClassPhotoBo setClassPhotoIdSet(Set<Integer> classPhotoIdSet) {
    this.classPhotoIdSet = classPhotoIdSet;
    return this;
  }

  public void unsetClassPhotoIdSet() {
    this.classPhotoIdSet = null;
  }

  /** Returns true if field classPhotoIdSet is set (has been assigned a value) and false otherwise */
  public boolean isSetClassPhotoIdSet() {
    return this.classPhotoIdSet != null;
  }

  public void setClassPhotoIdSetIsSet(boolean value) {
    if (!value) {
      this.classPhotoIdSet = null;
    }
  }

  public long getCreateTimeStart() {
    return this.createTimeStart;
  }

  public CourseClassPhotoBo setCreateTimeStart(long createTimeStart) {
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    return this;
  }

  public void unsetCreateTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  /** Returns true if field createTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  public void setCreateTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID, value);
  }

  public long getCreateTimeEnd() {
    return this.createTimeEnd;
  }

  public CourseClassPhotoBo setCreateTimeEnd(long createTimeEnd) {
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
    return this;
  }

  public void unsetCreateTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  /** Returns true if field createTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  public void setCreateTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case COURSE_ID:
      if (value == null) {
        unsetCourseId();
      } else {
        setCourseId((Integer)value);
      }
      break;

    case CLASS_PHOTO_ID:
      if (value == null) {
        unsetClassPhotoId();
      } else {
        setClassPhotoId((Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case ID_SET:
      if (value == null) {
        unsetIdSet();
      } else {
        setIdSet((Set<Integer>)value);
      }
      break;

    case COURSE_ID_SET:
      if (value == null) {
        unsetCourseIdSet();
      } else {
        setCourseIdSet((Set<Integer>)value);
      }
      break;

    case CLASS_PHOTO_ID_SET:
      if (value == null) {
        unsetClassPhotoIdSet();
      } else {
        setClassPhotoIdSet((Set<Integer>)value);
      }
      break;

    case CREATE_TIME_START:
      if (value == null) {
        unsetCreateTimeStart();
      } else {
        setCreateTimeStart((Long)value);
      }
      break;

    case CREATE_TIME_END:
      if (value == null) {
        unsetCreateTimeEnd();
      } else {
        setCreateTimeEnd((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Integer.valueOf(getId());

    case COURSE_ID:
      return Integer.valueOf(getCourseId());

    case CLASS_PHOTO_ID:
      return Integer.valueOf(getClassPhotoId());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case ID_SET:
      return getIdSet();

    case COURSE_ID_SET:
      return getCourseIdSet();

    case CLASS_PHOTO_ID_SET:
      return getClassPhotoIdSet();

    case CREATE_TIME_START:
      return Long.valueOf(getCreateTimeStart());

    case CREATE_TIME_END:
      return Long.valueOf(getCreateTimeEnd());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case COURSE_ID:
      return isSetCourseId();
    case CLASS_PHOTO_ID:
      return isSetClassPhotoId();
    case CREATE_TIME:
      return isSetCreateTime();
    case ID_SET:
      return isSetIdSet();
    case COURSE_ID_SET:
      return isSetCourseIdSet();
    case CLASS_PHOTO_ID_SET:
      return isSetClassPhotoIdSet();
    case CREATE_TIME_START:
      return isSetCreateTimeStart();
    case CREATE_TIME_END:
      return isSetCreateTimeEnd();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CourseClassPhotoBo)
      return this.equals((CourseClassPhotoBo)that);
    return false;
  }

  public boolean equals(CourseClassPhotoBo that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_courseId = true;
    boolean that_present_courseId = true;
    if (this_present_courseId || that_present_courseId) {
      if (!(this_present_courseId && that_present_courseId))
        return false;
      if (this.courseId != that.courseId)
        return false;
    }

    boolean this_present_classPhotoId = true;
    boolean that_present_classPhotoId = true;
    if (this_present_classPhotoId || that_present_classPhotoId) {
      if (!(this_present_classPhotoId && that_present_classPhotoId))
        return false;
      if (this.classPhotoId != that.classPhotoId)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_idSet = true && this.isSetIdSet();
    boolean that_present_idSet = true && that.isSetIdSet();
    if (this_present_idSet || that_present_idSet) {
      if (!(this_present_idSet && that_present_idSet))
        return false;
      if (!this.idSet.equals(that.idSet))
        return false;
    }

    boolean this_present_courseIdSet = true && this.isSetCourseIdSet();
    boolean that_present_courseIdSet = true && that.isSetCourseIdSet();
    if (this_present_courseIdSet || that_present_courseIdSet) {
      if (!(this_present_courseIdSet && that_present_courseIdSet))
        return false;
      if (!this.courseIdSet.equals(that.courseIdSet))
        return false;
    }

    boolean this_present_classPhotoIdSet = true && this.isSetClassPhotoIdSet();
    boolean that_present_classPhotoIdSet = true && that.isSetClassPhotoIdSet();
    if (this_present_classPhotoIdSet || that_present_classPhotoIdSet) {
      if (!(this_present_classPhotoIdSet && that_present_classPhotoIdSet))
        return false;
      if (!this.classPhotoIdSet.equals(that.classPhotoIdSet))
        return false;
    }

    boolean this_present_createTimeStart = true;
    boolean that_present_createTimeStart = true;
    if (this_present_createTimeStart || that_present_createTimeStart) {
      if (!(this_present_createTimeStart && that_present_createTimeStart))
        return false;
      if (this.createTimeStart != that.createTimeStart)
        return false;
    }

    boolean this_present_createTimeEnd = true;
    boolean that_present_createTimeEnd = true;
    if (this_present_createTimeEnd || that_present_createTimeEnd) {
      if (!(this_present_createTimeEnd && that_present_createTimeEnd))
        return false;
      if (this.createTimeEnd != that.createTimeEnd)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_id = true;
    builder.append(present_id);
    if (present_id)
      builder.append(id);

    boolean present_courseId = true;
    builder.append(present_courseId);
    if (present_courseId)
      builder.append(courseId);

    boolean present_classPhotoId = true;
    builder.append(present_classPhotoId);
    if (present_classPhotoId)
      builder.append(classPhotoId);

    boolean present_createTime = true;
    builder.append(present_createTime);
    if (present_createTime)
      builder.append(createTime);

    boolean present_idSet = true && (isSetIdSet());
    builder.append(present_idSet);
    if (present_idSet)
      builder.append(idSet);

    boolean present_courseIdSet = true && (isSetCourseIdSet());
    builder.append(present_courseIdSet);
    if (present_courseIdSet)
      builder.append(courseIdSet);

    boolean present_classPhotoIdSet = true && (isSetClassPhotoIdSet());
    builder.append(present_classPhotoIdSet);
    if (present_classPhotoIdSet)
      builder.append(classPhotoIdSet);

    boolean present_createTimeStart = true;
    builder.append(present_createTimeStart);
    if (present_createTimeStart)
      builder.append(createTimeStart);

    boolean present_createTimeEnd = true;
    builder.append(present_createTimeEnd);
    if (present_createTimeEnd)
      builder.append(createTimeEnd);

    return builder.toHashCode();
  }

  @Override
  public int compareTo(CourseClassPhotoBo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCourseId()).compareTo(other.isSetCourseId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCourseId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.courseId, other.courseId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClassPhotoId()).compareTo(other.isSetClassPhotoId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClassPhotoId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.classPhotoId, other.classPhotoId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdSet()).compareTo(other.isSetIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idSet, other.idSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCourseIdSet()).compareTo(other.isSetCourseIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCourseIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.courseIdSet, other.courseIdSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClassPhotoIdSet()).compareTo(other.isSetClassPhotoIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClassPhotoIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.classPhotoIdSet, other.classPhotoIdSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeStart()).compareTo(other.isSetCreateTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeStart, other.createTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeEnd()).compareTo(other.isSetCreateTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeEnd, other.createTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CourseClassPhotoBo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("courseId:");
    sb.append(this.courseId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("classPhotoId:");
    sb.append(this.classPhotoId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idSet:");
    if (this.idSet == null) {
      sb.append("null");
    } else {
      sb.append(this.idSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("courseIdSet:");
    if (this.courseIdSet == null) {
      sb.append("null");
    } else {
      sb.append(this.courseIdSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("classPhotoIdSet:");
    if (this.classPhotoIdSet == null) {
      sb.append("null");
    } else {
      sb.append(this.classPhotoIdSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeStart:");
    sb.append(this.createTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeEnd:");
    sb.append(this.createTimeEnd);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CourseClassPhotoBoStandardSchemeFactory implements SchemeFactory {
    public CourseClassPhotoBoStandardScheme getScheme() {
      return new CourseClassPhotoBoStandardScheme();
    }
  }

  private static class CourseClassPhotoBoStandardScheme extends StandardScheme<CourseClassPhotoBo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CourseClassPhotoBo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COURSE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.courseId = iprot.readI32();
              struct.setCourseIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLASS_PHOTO_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.classPhotoId = iprot.readI32();
              struct.setClassPhotoIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set0 = iprot.readSetBegin();
                struct.idSet = new HashSet<Integer>(2*_set0.size);
                for (int _i1 = 0; _i1 < _set0.size; ++_i1)
                {
                  int _elem2;
                  _elem2 = iprot.readI32();
                  struct.idSet.add(_elem2);
                }
                iprot.readSetEnd();
              }
              struct.setIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // COURSE_ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set3 = iprot.readSetBegin();
                struct.courseIdSet = new HashSet<Integer>(2*_set3.size);
                for (int _i4 = 0; _i4 < _set3.size; ++_i4)
                {
                  int _elem5;
                  _elem5 = iprot.readI32();
                  struct.courseIdSet.add(_elem5);
                }
                iprot.readSetEnd();
              }
              struct.setCourseIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CLASS_PHOTO_ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set6 = iprot.readSetBegin();
                struct.classPhotoIdSet = new HashSet<Integer>(2*_set6.size);
                for (int _i7 = 0; _i7 < _set6.size; ++_i7)
                {
                  int _elem8;
                  _elem8 = iprot.readI32();
                  struct.classPhotoIdSet.add(_elem8);
                }
                iprot.readSetEnd();
              }
              struct.setClassPhotoIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREATE_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeStart = iprot.readI64();
              struct.setCreateTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CREATE_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeEnd = iprot.readI64();
              struct.setCreateTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CourseClassPhotoBo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COURSE_ID_FIELD_DESC);
      oprot.writeI32(struct.courseId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CLASS_PHOTO_ID_FIELD_DESC);
      oprot.writeI32(struct.classPhotoId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.idSet != null) {
        oprot.writeFieldBegin(ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.idSet.size()));
          for (int _iter9 : struct.idSet)
          {
            oprot.writeI32(_iter9);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.courseIdSet != null) {
        oprot.writeFieldBegin(COURSE_ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.courseIdSet.size()));
          for (int _iter10 : struct.courseIdSet)
          {
            oprot.writeI32(_iter10);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.classPhotoIdSet != null) {
        oprot.writeFieldBegin(CLASS_PHOTO_ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.classPhotoIdSet.size()));
          for (int _iter11 : struct.classPhotoIdSet)
          {
            oprot.writeI32(_iter11);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.createTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.createTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CourseClassPhotoBoTupleSchemeFactory implements SchemeFactory {
    public CourseClassPhotoBoTupleScheme getScheme() {
      return new CourseClassPhotoBoTupleScheme();
    }
  }

  private static class CourseClassPhotoBoTupleScheme extends TupleScheme<CourseClassPhotoBo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CourseClassPhotoBo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCourseId()) {
        optionals.set(1);
      }
      if (struct.isSetClassPhotoId()) {
        optionals.set(2);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(3);
      }
      if (struct.isSetIdSet()) {
        optionals.set(4);
      }
      if (struct.isSetCourseIdSet()) {
        optionals.set(5);
      }
      if (struct.isSetClassPhotoIdSet()) {
        optionals.set(6);
      }
      if (struct.isSetCreateTimeStart()) {
        optionals.set(7);
      }
      if (struct.isSetCreateTimeEnd()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCourseId()) {
        oprot.writeI32(struct.courseId);
      }
      if (struct.isSetClassPhotoId()) {
        oprot.writeI32(struct.classPhotoId);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetIdSet()) {
        {
          oprot.writeI32(struct.idSet.size());
          for (int _iter12 : struct.idSet)
          {
            oprot.writeI32(_iter12);
          }
        }
      }
      if (struct.isSetCourseIdSet()) {
        {
          oprot.writeI32(struct.courseIdSet.size());
          for (int _iter13 : struct.courseIdSet)
          {
            oprot.writeI32(_iter13);
          }
        }
      }
      if (struct.isSetClassPhotoIdSet()) {
        {
          oprot.writeI32(struct.classPhotoIdSet.size());
          for (int _iter14 : struct.classPhotoIdSet)
          {
            oprot.writeI32(_iter14);
          }
        }
      }
      if (struct.isSetCreateTimeStart()) {
        oprot.writeI64(struct.createTimeStart);
      }
      if (struct.isSetCreateTimeEnd()) {
        oprot.writeI64(struct.createTimeEnd);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CourseClassPhotoBo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.courseId = iprot.readI32();
        struct.setCourseIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.classPhotoId = iprot.readI32();
        struct.setClassPhotoIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TSet _set15 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.idSet = new HashSet<Integer>(2*_set15.size);
          for (int _i16 = 0; _i16 < _set15.size; ++_i16)
          {
            int _elem17;
            _elem17 = iprot.readI32();
            struct.idSet.add(_elem17);
          }
        }
        struct.setIdSetIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TSet _set18 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.courseIdSet = new HashSet<Integer>(2*_set18.size);
          for (int _i19 = 0; _i19 < _set18.size; ++_i19)
          {
            int _elem20;
            _elem20 = iprot.readI32();
            struct.courseIdSet.add(_elem20);
          }
        }
        struct.setCourseIdSetIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TSet _set21 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.classPhotoIdSet = new HashSet<Integer>(2*_set21.size);
          for (int _i22 = 0; _i22 < _set21.size; ++_i22)
          {
            int _elem23;
            _elem23 = iprot.readI32();
            struct.classPhotoIdSet.add(_elem23);
          }
        }
        struct.setClassPhotoIdSetIsSet(true);
      }
      if (incoming.get(7)) {
        struct.createTimeStart = iprot.readI64();
        struct.setCreateTimeStartIsSet(true);
      }
      if (incoming.get(8)) {
        struct.createTimeEnd = iprot.readI64();
        struct.setCreateTimeEndIsSet(true);
      }
    }
  }

}

