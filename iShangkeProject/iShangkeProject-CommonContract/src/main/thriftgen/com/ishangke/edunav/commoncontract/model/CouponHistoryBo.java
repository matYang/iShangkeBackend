/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ishangke.edunav.commoncontract.model;

import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CouponHistoryBo implements org.apache.thrift.TBase<CouponHistoryBo, CouponHistoryBo._Fields>, java.io.Serializable, Cloneable, Comparable<CouponHistoryBo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CouponHistoryBo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COUPON_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("couponId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField CHARGE_FIELD_DESC = new org.apache.thrift.protocol.TField("charge", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("idSet", org.apache.thrift.protocol.TType.SET, (short)6);
  private static final org.apache.thrift.protocol.TField COUPON_ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("couponIdSet", org.apache.thrift.protocol.TType.SET, (short)7);
  private static final org.apache.thrift.protocol.TField CHARGE_START_FIELD_DESC = new org.apache.thrift.protocol.TField("chargeStart", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField CHARGE_END_FIELD_DESC = new org.apache.thrift.protocol.TField("chargeEnd", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimeStart", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimeEnd", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeStart", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeEnd", org.apache.thrift.protocol.TType.I64, (short)13);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CouponHistoryBoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CouponHistoryBoTupleSchemeFactory());
  }

  public int id; // required
  public int couponId; // required
  public double charge; // required
  public long lastModifyTime; // required
  public long createTime; // required
  public Set<Integer> idSet; // required
  public Set<Integer> couponIdSet; // required
  public double chargeStart; // required
  public double chargeEnd; // required
  public long lastModifyTimeStart; // required
  public long lastModifyTimeEnd; // required
  public long createTimeStart; // required
  public long createTimeEnd; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    COUPON_ID((short)2, "couponId"),
    CHARGE((short)3, "charge"),
    LAST_MODIFY_TIME((short)4, "lastModifyTime"),
    CREATE_TIME((short)5, "createTime"),
    ID_SET((short)6, "idSet"),
    COUPON_ID_SET((short)7, "couponIdSet"),
    CHARGE_START((short)8, "chargeStart"),
    CHARGE_END((short)9, "chargeEnd"),
    LAST_MODIFY_TIME_START((short)10, "lastModifyTimeStart"),
    LAST_MODIFY_TIME_END((short)11, "lastModifyTimeEnd"),
    CREATE_TIME_START((short)12, "createTimeStart"),
    CREATE_TIME_END((short)13, "createTimeEnd");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // COUPON_ID
          return COUPON_ID;
        case 3: // CHARGE
          return CHARGE;
        case 4: // LAST_MODIFY_TIME
          return LAST_MODIFY_TIME;
        case 5: // CREATE_TIME
          return CREATE_TIME;
        case 6: // ID_SET
          return ID_SET;
        case 7: // COUPON_ID_SET
          return COUPON_ID_SET;
        case 8: // CHARGE_START
          return CHARGE_START;
        case 9: // CHARGE_END
          return CHARGE_END;
        case 10: // LAST_MODIFY_TIME_START
          return LAST_MODIFY_TIME_START;
        case 11: // LAST_MODIFY_TIME_END
          return LAST_MODIFY_TIME_END;
        case 12: // CREATE_TIME_START
          return CREATE_TIME_START;
        case 13: // CREATE_TIME_END
          return CREATE_TIME_END;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __COUPONID_ISSET_ID = 1;
  private static final int __CHARGE_ISSET_ID = 2;
  private static final int __LASTMODIFYTIME_ISSET_ID = 3;
  private static final int __CREATETIME_ISSET_ID = 4;
  private static final int __CHARGESTART_ISSET_ID = 5;
  private static final int __CHARGEEND_ISSET_ID = 6;
  private static final int __LASTMODIFYTIMESTART_ISSET_ID = 7;
  private static final int __LASTMODIFYTIMEEND_ISSET_ID = 8;
  private static final int __CREATETIMESTART_ISSET_ID = 9;
  private static final int __CREATETIMEEND_ISSET_ID = 10;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COUPON_ID, new org.apache.thrift.meta_data.FieldMetaData("couponId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CHARGE, new org.apache.thrift.meta_data.FieldMetaData("charge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ID_SET, new org.apache.thrift.meta_data.FieldMetaData("idSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.COUPON_ID_SET, new org.apache.thrift.meta_data.FieldMetaData("couponIdSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.CHARGE_START, new org.apache.thrift.meta_data.FieldMetaData("chargeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CHARGE_END, new org.apache.thrift.meta_data.FieldMetaData("chargeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("createTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("createTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CouponHistoryBo.class, metaDataMap);
  }

  public CouponHistoryBo() {
  }

  public CouponHistoryBo(
    int id,
    int couponId,
    double charge,
    long lastModifyTime,
    long createTime,
    Set<Integer> idSet,
    Set<Integer> couponIdSet,
    double chargeStart,
    double chargeEnd,
    long lastModifyTimeStart,
    long lastModifyTimeEnd,
    long createTimeStart,
    long createTimeEnd)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.couponId = couponId;
    setCouponIdIsSet(true);
    this.charge = charge;
    setChargeIsSet(true);
    this.lastModifyTime = lastModifyTime;
    setLastModifyTimeIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.idSet = idSet;
    this.couponIdSet = couponIdSet;
    this.chargeStart = chargeStart;
    setChargeStartIsSet(true);
    this.chargeEnd = chargeEnd;
    setChargeEndIsSet(true);
    this.lastModifyTimeStart = lastModifyTimeStart;
    setLastModifyTimeStartIsSet(true);
    this.lastModifyTimeEnd = lastModifyTimeEnd;
    setLastModifyTimeEndIsSet(true);
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CouponHistoryBo(CouponHistoryBo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.couponId = other.couponId;
    this.charge = other.charge;
    this.lastModifyTime = other.lastModifyTime;
    this.createTime = other.createTime;
    if (other.isSetIdSet()) {
      Set<Integer> __this__idSet = new HashSet<Integer>(other.idSet);
      this.idSet = __this__idSet;
    }
    if (other.isSetCouponIdSet()) {
      Set<Integer> __this__couponIdSet = new HashSet<Integer>(other.couponIdSet);
      this.couponIdSet = __this__couponIdSet;
    }
    this.chargeStart = other.chargeStart;
    this.chargeEnd = other.chargeEnd;
    this.lastModifyTimeStart = other.lastModifyTimeStart;
    this.lastModifyTimeEnd = other.lastModifyTimeEnd;
    this.createTimeStart = other.createTimeStart;
    this.createTimeEnd = other.createTimeEnd;
  }

  public CouponHistoryBo deepCopy() {
    return new CouponHistoryBo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setCouponIdIsSet(false);
    this.couponId = 0;
    setChargeIsSet(false);
    this.charge = 0.0;
    setLastModifyTimeIsSet(false);
    this.lastModifyTime = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.idSet = null;
    this.couponIdSet = null;
    setChargeStartIsSet(false);
    this.chargeStart = 0.0;
    setChargeEndIsSet(false);
    this.chargeEnd = 0.0;
    setLastModifyTimeStartIsSet(false);
    this.lastModifyTimeStart = 0;
    setLastModifyTimeEndIsSet(false);
    this.lastModifyTimeEnd = 0;
    setCreateTimeStartIsSet(false);
    this.createTimeStart = 0;
    setCreateTimeEndIsSet(false);
    this.createTimeEnd = 0;
  }

  public int getId() {
    return this.id;
  }

  public CouponHistoryBo setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getCouponId() {
    return this.couponId;
  }

  public CouponHistoryBo setCouponId(int couponId) {
    this.couponId = couponId;
    setCouponIdIsSet(true);
    return this;
  }

  public void unsetCouponId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COUPONID_ISSET_ID);
  }

  /** Returns true if field couponId is set (has been assigned a value) and false otherwise */
  public boolean isSetCouponId() {
    return EncodingUtils.testBit(__isset_bitfield, __COUPONID_ISSET_ID);
  }

  public void setCouponIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COUPONID_ISSET_ID, value);
  }

  public double getCharge() {
    return this.charge;
  }

  public CouponHistoryBo setCharge(double charge) {
    this.charge = charge;
    setChargeIsSet(true);
    return this;
  }

  public void unsetCharge() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHARGE_ISSET_ID);
  }

  /** Returns true if field charge is set (has been assigned a value) and false otherwise */
  public boolean isSetCharge() {
    return EncodingUtils.testBit(__isset_bitfield, __CHARGE_ISSET_ID);
  }

  public void setChargeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHARGE_ISSET_ID, value);
  }

  public long getLastModifyTime() {
    return this.lastModifyTime;
  }

  public CouponHistoryBo setLastModifyTime(long lastModifyTime) {
    this.lastModifyTime = lastModifyTime;
    setLastModifyTimeIsSet(true);
    return this;
  }

  public void unsetLastModifyTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID);
  }

  /** Returns true if field lastModifyTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTime() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID);
  }

  public void setLastModifyTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public CouponHistoryBo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public int getIdSetSize() {
    return (this.idSet == null) ? 0 : this.idSet.size();
  }

  public java.util.Iterator<Integer> getIdSetIterator() {
    return (this.idSet == null) ? null : this.idSet.iterator();
  }

  public void addToIdSet(int elem) {
    if (this.idSet == null) {
      this.idSet = new HashSet<Integer>();
    }
    this.idSet.add(elem);
  }

  public Set<Integer> getIdSet() {
    return this.idSet;
  }

  public CouponHistoryBo setIdSet(Set<Integer> idSet) {
    this.idSet = idSet;
    return this;
  }

  public void unsetIdSet() {
    this.idSet = null;
  }

  /** Returns true if field idSet is set (has been assigned a value) and false otherwise */
  public boolean isSetIdSet() {
    return this.idSet != null;
  }

  public void setIdSetIsSet(boolean value) {
    if (!value) {
      this.idSet = null;
    }
  }

  public int getCouponIdSetSize() {
    return (this.couponIdSet == null) ? 0 : this.couponIdSet.size();
  }

  public java.util.Iterator<Integer> getCouponIdSetIterator() {
    return (this.couponIdSet == null) ? null : this.couponIdSet.iterator();
  }

  public void addToCouponIdSet(int elem) {
    if (this.couponIdSet == null) {
      this.couponIdSet = new HashSet<Integer>();
    }
    this.couponIdSet.add(elem);
  }

  public Set<Integer> getCouponIdSet() {
    return this.couponIdSet;
  }

  public CouponHistoryBo setCouponIdSet(Set<Integer> couponIdSet) {
    this.couponIdSet = couponIdSet;
    return this;
  }

  public void unsetCouponIdSet() {
    this.couponIdSet = null;
  }

  /** Returns true if field couponIdSet is set (has been assigned a value) and false otherwise */
  public boolean isSetCouponIdSet() {
    return this.couponIdSet != null;
  }

  public void setCouponIdSetIsSet(boolean value) {
    if (!value) {
      this.couponIdSet = null;
    }
  }

  public double getChargeStart() {
    return this.chargeStart;
  }

  public CouponHistoryBo setChargeStart(double chargeStart) {
    this.chargeStart = chargeStart;
    setChargeStartIsSet(true);
    return this;
  }

  public void unsetChargeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHARGESTART_ISSET_ID);
  }

  /** Returns true if field chargeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetChargeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __CHARGESTART_ISSET_ID);
  }

  public void setChargeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHARGESTART_ISSET_ID, value);
  }

  public double getChargeEnd() {
    return this.chargeEnd;
  }

  public CouponHistoryBo setChargeEnd(double chargeEnd) {
    this.chargeEnd = chargeEnd;
    setChargeEndIsSet(true);
    return this;
  }

  public void unsetChargeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHARGEEND_ISSET_ID);
  }

  /** Returns true if field chargeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetChargeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __CHARGEEND_ISSET_ID);
  }

  public void setChargeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHARGEEND_ISSET_ID, value);
  }

  public long getLastModifyTimeStart() {
    return this.lastModifyTimeStart;
  }

  public CouponHistoryBo setLastModifyTimeStart(long lastModifyTimeStart) {
    this.lastModifyTimeStart = lastModifyTimeStart;
    setLastModifyTimeStartIsSet(true);
    return this;
  }

  public void unsetLastModifyTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID);
  }

  /** Returns true if field lastModifyTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID);
  }

  public void setLastModifyTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID, value);
  }

  public long getLastModifyTimeEnd() {
    return this.lastModifyTimeEnd;
  }

  public CouponHistoryBo setLastModifyTimeEnd(long lastModifyTimeEnd) {
    this.lastModifyTimeEnd = lastModifyTimeEnd;
    setLastModifyTimeEndIsSet(true);
    return this;
  }

  public void unsetLastModifyTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID);
  }

  /** Returns true if field lastModifyTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID);
  }

  public void setLastModifyTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID, value);
  }

  public long getCreateTimeStart() {
    return this.createTimeStart;
  }

  public CouponHistoryBo setCreateTimeStart(long createTimeStart) {
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    return this;
  }

  public void unsetCreateTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  /** Returns true if field createTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  public void setCreateTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID, value);
  }

  public long getCreateTimeEnd() {
    return this.createTimeEnd;
  }

  public CouponHistoryBo setCreateTimeEnd(long createTimeEnd) {
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
    return this;
  }

  public void unsetCreateTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  /** Returns true if field createTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  public void setCreateTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case COUPON_ID:
      if (value == null) {
        unsetCouponId();
      } else {
        setCouponId((Integer)value);
      }
      break;

    case CHARGE:
      if (value == null) {
        unsetCharge();
      } else {
        setCharge((Double)value);
      }
      break;

    case LAST_MODIFY_TIME:
      if (value == null) {
        unsetLastModifyTime();
      } else {
        setLastModifyTime((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case ID_SET:
      if (value == null) {
        unsetIdSet();
      } else {
        setIdSet((Set<Integer>)value);
      }
      break;

    case COUPON_ID_SET:
      if (value == null) {
        unsetCouponIdSet();
      } else {
        setCouponIdSet((Set<Integer>)value);
      }
      break;

    case CHARGE_START:
      if (value == null) {
        unsetChargeStart();
      } else {
        setChargeStart((Double)value);
      }
      break;

    case CHARGE_END:
      if (value == null) {
        unsetChargeEnd();
      } else {
        setChargeEnd((Double)value);
      }
      break;

    case LAST_MODIFY_TIME_START:
      if (value == null) {
        unsetLastModifyTimeStart();
      } else {
        setLastModifyTimeStart((Long)value);
      }
      break;

    case LAST_MODIFY_TIME_END:
      if (value == null) {
        unsetLastModifyTimeEnd();
      } else {
        setLastModifyTimeEnd((Long)value);
      }
      break;

    case CREATE_TIME_START:
      if (value == null) {
        unsetCreateTimeStart();
      } else {
        setCreateTimeStart((Long)value);
      }
      break;

    case CREATE_TIME_END:
      if (value == null) {
        unsetCreateTimeEnd();
      } else {
        setCreateTimeEnd((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Integer.valueOf(getId());

    case COUPON_ID:
      return Integer.valueOf(getCouponId());

    case CHARGE:
      return Double.valueOf(getCharge());

    case LAST_MODIFY_TIME:
      return Long.valueOf(getLastModifyTime());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case ID_SET:
      return getIdSet();

    case COUPON_ID_SET:
      return getCouponIdSet();

    case CHARGE_START:
      return Double.valueOf(getChargeStart());

    case CHARGE_END:
      return Double.valueOf(getChargeEnd());

    case LAST_MODIFY_TIME_START:
      return Long.valueOf(getLastModifyTimeStart());

    case LAST_MODIFY_TIME_END:
      return Long.valueOf(getLastModifyTimeEnd());

    case CREATE_TIME_START:
      return Long.valueOf(getCreateTimeStart());

    case CREATE_TIME_END:
      return Long.valueOf(getCreateTimeEnd());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case COUPON_ID:
      return isSetCouponId();
    case CHARGE:
      return isSetCharge();
    case LAST_MODIFY_TIME:
      return isSetLastModifyTime();
    case CREATE_TIME:
      return isSetCreateTime();
    case ID_SET:
      return isSetIdSet();
    case COUPON_ID_SET:
      return isSetCouponIdSet();
    case CHARGE_START:
      return isSetChargeStart();
    case CHARGE_END:
      return isSetChargeEnd();
    case LAST_MODIFY_TIME_START:
      return isSetLastModifyTimeStart();
    case LAST_MODIFY_TIME_END:
      return isSetLastModifyTimeEnd();
    case CREATE_TIME_START:
      return isSetCreateTimeStart();
    case CREATE_TIME_END:
      return isSetCreateTimeEnd();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CouponHistoryBo)
      return this.equals((CouponHistoryBo)that);
    return false;
  }

  public boolean equals(CouponHistoryBo that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_couponId = true;
    boolean that_present_couponId = true;
    if (this_present_couponId || that_present_couponId) {
      if (!(this_present_couponId && that_present_couponId))
        return false;
      if (this.couponId != that.couponId)
        return false;
    }

    boolean this_present_charge = true;
    boolean that_present_charge = true;
    if (this_present_charge || that_present_charge) {
      if (!(this_present_charge && that_present_charge))
        return false;
      if (this.charge != that.charge)
        return false;
    }

    boolean this_present_lastModifyTime = true;
    boolean that_present_lastModifyTime = true;
    if (this_present_lastModifyTime || that_present_lastModifyTime) {
      if (!(this_present_lastModifyTime && that_present_lastModifyTime))
        return false;
      if (this.lastModifyTime != that.lastModifyTime)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_idSet = true && this.isSetIdSet();
    boolean that_present_idSet = true && that.isSetIdSet();
    if (this_present_idSet || that_present_idSet) {
      if (!(this_present_idSet && that_present_idSet))
        return false;
      if (!this.idSet.equals(that.idSet))
        return false;
    }

    boolean this_present_couponIdSet = true && this.isSetCouponIdSet();
    boolean that_present_couponIdSet = true && that.isSetCouponIdSet();
    if (this_present_couponIdSet || that_present_couponIdSet) {
      if (!(this_present_couponIdSet && that_present_couponIdSet))
        return false;
      if (!this.couponIdSet.equals(that.couponIdSet))
        return false;
    }

    boolean this_present_chargeStart = true;
    boolean that_present_chargeStart = true;
    if (this_present_chargeStart || that_present_chargeStart) {
      if (!(this_present_chargeStart && that_present_chargeStart))
        return false;
      if (this.chargeStart != that.chargeStart)
        return false;
    }

    boolean this_present_chargeEnd = true;
    boolean that_present_chargeEnd = true;
    if (this_present_chargeEnd || that_present_chargeEnd) {
      if (!(this_present_chargeEnd && that_present_chargeEnd))
        return false;
      if (this.chargeEnd != that.chargeEnd)
        return false;
    }

    boolean this_present_lastModifyTimeStart = true;
    boolean that_present_lastModifyTimeStart = true;
    if (this_present_lastModifyTimeStart || that_present_lastModifyTimeStart) {
      if (!(this_present_lastModifyTimeStart && that_present_lastModifyTimeStart))
        return false;
      if (this.lastModifyTimeStart != that.lastModifyTimeStart)
        return false;
    }

    boolean this_present_lastModifyTimeEnd = true;
    boolean that_present_lastModifyTimeEnd = true;
    if (this_present_lastModifyTimeEnd || that_present_lastModifyTimeEnd) {
      if (!(this_present_lastModifyTimeEnd && that_present_lastModifyTimeEnd))
        return false;
      if (this.lastModifyTimeEnd != that.lastModifyTimeEnd)
        return false;
    }

    boolean this_present_createTimeStart = true;
    boolean that_present_createTimeStart = true;
    if (this_present_createTimeStart || that_present_createTimeStart) {
      if (!(this_present_createTimeStart && that_present_createTimeStart))
        return false;
      if (this.createTimeStart != that.createTimeStart)
        return false;
    }

    boolean this_present_createTimeEnd = true;
    boolean that_present_createTimeEnd = true;
    if (this_present_createTimeEnd || that_present_createTimeEnd) {
      if (!(this_present_createTimeEnd && that_present_createTimeEnd))
        return false;
      if (this.createTimeEnd != that.createTimeEnd)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_id = true;
    builder.append(present_id);
    if (present_id)
      builder.append(id);

    boolean present_couponId = true;
    builder.append(present_couponId);
    if (present_couponId)
      builder.append(couponId);

    boolean present_charge = true;
    builder.append(present_charge);
    if (present_charge)
      builder.append(charge);

    boolean present_lastModifyTime = true;
    builder.append(present_lastModifyTime);
    if (present_lastModifyTime)
      builder.append(lastModifyTime);

    boolean present_createTime = true;
    builder.append(present_createTime);
    if (present_createTime)
      builder.append(createTime);

    boolean present_idSet = true && (isSetIdSet());
    builder.append(present_idSet);
    if (present_idSet)
      builder.append(idSet);

    boolean present_couponIdSet = true && (isSetCouponIdSet());
    builder.append(present_couponIdSet);
    if (present_couponIdSet)
      builder.append(couponIdSet);

    boolean present_chargeStart = true;
    builder.append(present_chargeStart);
    if (present_chargeStart)
      builder.append(chargeStart);

    boolean present_chargeEnd = true;
    builder.append(present_chargeEnd);
    if (present_chargeEnd)
      builder.append(chargeEnd);

    boolean present_lastModifyTimeStart = true;
    builder.append(present_lastModifyTimeStart);
    if (present_lastModifyTimeStart)
      builder.append(lastModifyTimeStart);

    boolean present_lastModifyTimeEnd = true;
    builder.append(present_lastModifyTimeEnd);
    if (present_lastModifyTimeEnd)
      builder.append(lastModifyTimeEnd);

    boolean present_createTimeStart = true;
    builder.append(present_createTimeStart);
    if (present_createTimeStart)
      builder.append(createTimeStart);

    boolean present_createTimeEnd = true;
    builder.append(present_createTimeEnd);
    if (present_createTimeEnd)
      builder.append(createTimeEnd);

    return builder.toHashCode();
  }

  @Override
  public int compareTo(CouponHistoryBo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCouponId()).compareTo(other.isSetCouponId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCouponId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.couponId, other.couponId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCharge()).compareTo(other.isSetCharge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCharge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.charge, other.charge);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTime()).compareTo(other.isSetLastModifyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTime, other.lastModifyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdSet()).compareTo(other.isSetIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idSet, other.idSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCouponIdSet()).compareTo(other.isSetCouponIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCouponIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.couponIdSet, other.couponIdSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChargeStart()).compareTo(other.isSetChargeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChargeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chargeStart, other.chargeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChargeEnd()).compareTo(other.isSetChargeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChargeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chargeEnd, other.chargeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimeStart()).compareTo(other.isSetLastModifyTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimeStart, other.lastModifyTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimeEnd()).compareTo(other.isSetLastModifyTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimeEnd, other.lastModifyTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeStart()).compareTo(other.isSetCreateTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeStart, other.createTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeEnd()).compareTo(other.isSetCreateTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeEnd, other.createTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CouponHistoryBo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("couponId:");
    sb.append(this.couponId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("charge:");
    sb.append(this.charge);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTime:");
    sb.append(this.lastModifyTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idSet:");
    if (this.idSet == null) {
      sb.append("null");
    } else {
      sb.append(this.idSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("couponIdSet:");
    if (this.couponIdSet == null) {
      sb.append("null");
    } else {
      sb.append(this.couponIdSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("chargeStart:");
    sb.append(this.chargeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("chargeEnd:");
    sb.append(this.chargeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTimeStart:");
    sb.append(this.lastModifyTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTimeEnd:");
    sb.append(this.lastModifyTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeStart:");
    sb.append(this.createTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeEnd:");
    sb.append(this.createTimeEnd);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CouponHistoryBoStandardSchemeFactory implements SchemeFactory {
    public CouponHistoryBoStandardScheme getScheme() {
      return new CouponHistoryBoStandardScheme();
    }
  }

  private static class CouponHistoryBoStandardScheme extends StandardScheme<CouponHistoryBo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CouponHistoryBo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COUPON_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.couponId = iprot.readI32();
              struct.setCouponIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CHARGE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.charge = iprot.readDouble();
              struct.setChargeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LAST_MODIFY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTime = iprot.readI64();
              struct.setLastModifyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set0 = iprot.readSetBegin();
                struct.idSet = new HashSet<Integer>(2*_set0.size);
                for (int _i1 = 0; _i1 < _set0.size; ++_i1)
                {
                  int _elem2;
                  _elem2 = iprot.readI32();
                  struct.idSet.add(_elem2);
                }
                iprot.readSetEnd();
              }
              struct.setIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // COUPON_ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set3 = iprot.readSetBegin();
                struct.couponIdSet = new HashSet<Integer>(2*_set3.size);
                for (int _i4 = 0; _i4 < _set3.size; ++_i4)
                {
                  int _elem5;
                  _elem5 = iprot.readI32();
                  struct.couponIdSet.add(_elem5);
                }
                iprot.readSetEnd();
              }
              struct.setCouponIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CHARGE_START
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.chargeStart = iprot.readDouble();
              struct.setChargeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CHARGE_END
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.chargeEnd = iprot.readDouble();
              struct.setChargeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // LAST_MODIFY_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimeStart = iprot.readI64();
              struct.setLastModifyTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // LAST_MODIFY_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimeEnd = iprot.readI64();
              struct.setLastModifyTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CREATE_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeStart = iprot.readI64();
              struct.setCreateTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATE_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeEnd = iprot.readI64();
              struct.setCreateTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CouponHistoryBo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COUPON_ID_FIELD_DESC);
      oprot.writeI32(struct.couponId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CHARGE_FIELD_DESC);
      oprot.writeDouble(struct.charge);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.idSet != null) {
        oprot.writeFieldBegin(ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.idSet.size()));
          for (int _iter6 : struct.idSet)
          {
            oprot.writeI32(_iter6);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.couponIdSet != null) {
        oprot.writeFieldBegin(COUPON_ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.couponIdSet.size()));
          for (int _iter7 : struct.couponIdSet)
          {
            oprot.writeI32(_iter7);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CHARGE_START_FIELD_DESC);
      oprot.writeDouble(struct.chargeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CHARGE_END_FIELD_DESC);
      oprot.writeDouble(struct.chargeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.createTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.createTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CouponHistoryBoTupleSchemeFactory implements SchemeFactory {
    public CouponHistoryBoTupleScheme getScheme() {
      return new CouponHistoryBoTupleScheme();
    }
  }

  private static class CouponHistoryBoTupleScheme extends TupleScheme<CouponHistoryBo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CouponHistoryBo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCouponId()) {
        optionals.set(1);
      }
      if (struct.isSetCharge()) {
        optionals.set(2);
      }
      if (struct.isSetLastModifyTime()) {
        optionals.set(3);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(4);
      }
      if (struct.isSetIdSet()) {
        optionals.set(5);
      }
      if (struct.isSetCouponIdSet()) {
        optionals.set(6);
      }
      if (struct.isSetChargeStart()) {
        optionals.set(7);
      }
      if (struct.isSetChargeEnd()) {
        optionals.set(8);
      }
      if (struct.isSetLastModifyTimeStart()) {
        optionals.set(9);
      }
      if (struct.isSetLastModifyTimeEnd()) {
        optionals.set(10);
      }
      if (struct.isSetCreateTimeStart()) {
        optionals.set(11);
      }
      if (struct.isSetCreateTimeEnd()) {
        optionals.set(12);
      }
      oprot.writeBitSet(optionals, 13);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCouponId()) {
        oprot.writeI32(struct.couponId);
      }
      if (struct.isSetCharge()) {
        oprot.writeDouble(struct.charge);
      }
      if (struct.isSetLastModifyTime()) {
        oprot.writeI64(struct.lastModifyTime);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetIdSet()) {
        {
          oprot.writeI32(struct.idSet.size());
          for (int _iter8 : struct.idSet)
          {
            oprot.writeI32(_iter8);
          }
        }
      }
      if (struct.isSetCouponIdSet()) {
        {
          oprot.writeI32(struct.couponIdSet.size());
          for (int _iter9 : struct.couponIdSet)
          {
            oprot.writeI32(_iter9);
          }
        }
      }
      if (struct.isSetChargeStart()) {
        oprot.writeDouble(struct.chargeStart);
      }
      if (struct.isSetChargeEnd()) {
        oprot.writeDouble(struct.chargeEnd);
      }
      if (struct.isSetLastModifyTimeStart()) {
        oprot.writeI64(struct.lastModifyTimeStart);
      }
      if (struct.isSetLastModifyTimeEnd()) {
        oprot.writeI64(struct.lastModifyTimeEnd);
      }
      if (struct.isSetCreateTimeStart()) {
        oprot.writeI64(struct.createTimeStart);
      }
      if (struct.isSetCreateTimeEnd()) {
        oprot.writeI64(struct.createTimeEnd);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CouponHistoryBo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(13);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.couponId = iprot.readI32();
        struct.setCouponIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.charge = iprot.readDouble();
        struct.setChargeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.lastModifyTime = iprot.readI64();
        struct.setLastModifyTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TSet _set10 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.idSet = new HashSet<Integer>(2*_set10.size);
          for (int _i11 = 0; _i11 < _set10.size; ++_i11)
          {
            int _elem12;
            _elem12 = iprot.readI32();
            struct.idSet.add(_elem12);
          }
        }
        struct.setIdSetIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TSet _set13 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.couponIdSet = new HashSet<Integer>(2*_set13.size);
          for (int _i14 = 0; _i14 < _set13.size; ++_i14)
          {
            int _elem15;
            _elem15 = iprot.readI32();
            struct.couponIdSet.add(_elem15);
          }
        }
        struct.setCouponIdSetIsSet(true);
      }
      if (incoming.get(7)) {
        struct.chargeStart = iprot.readDouble();
        struct.setChargeStartIsSet(true);
      }
      if (incoming.get(8)) {
        struct.chargeEnd = iprot.readDouble();
        struct.setChargeEndIsSet(true);
      }
      if (incoming.get(9)) {
        struct.lastModifyTimeStart = iprot.readI64();
        struct.setLastModifyTimeStartIsSet(true);
      }
      if (incoming.get(10)) {
        struct.lastModifyTimeEnd = iprot.readI64();
        struct.setLastModifyTimeEndIsSet(true);
      }
      if (incoming.get(11)) {
        struct.createTimeStart = iprot.readI64();
        struct.setCreateTimeStartIsSet(true);
      }
      if (incoming.get(12)) {
        struct.createTimeEnd = iprot.readI64();
        struct.setCreateTimeEndIsSet(true);
      }
    }
  }

}

