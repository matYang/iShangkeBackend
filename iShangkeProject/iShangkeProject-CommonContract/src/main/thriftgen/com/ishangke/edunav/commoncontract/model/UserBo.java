/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ishangke.edunav.commoncontract.model;

import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * UserBo
 */
public class UserBo implements org.apache.thrift.TBase<UserBo, UserBo._Fields>, java.io.Serializable, Cloneable, Comparable<UserBo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserBo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PASSWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("password", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField WECHAT_FIELD_DESC = new org.apache.thrift.protocol.TField("wechat", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField AVATAR_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarUrl", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField INVITATION_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("invitationCode", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField APPLIED_INVITATION_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("appliedInvitationCode", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField REFERENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("reference", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastLoginTime", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTime", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField ENABLED_FIELD_DESC = new org.apache.thrift.protocol.TField("enabled", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField GENDER_FIELD_DESC = new org.apache.thrift.protocol.TField("gender", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField BIRTHDAY_FIELD_DESC = new org.apache.thrift.protocol.TField("birthday", org.apache.thrift.protocol.TType.I64, (short)16);
  private static final org.apache.thrift.protocol.TField SCHOOL_FIELD_DESC = new org.apache.thrift.protocol.TField("school", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField MAJOR_FIELD_DESC = new org.apache.thrift.protocol.TField("major", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("idSet", org.apache.thrift.protocol.TType.SET, (short)19);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimeStart", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimeEnd", org.apache.thrift.protocol.TType.I64, (short)21);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeStart", org.apache.thrift.protocol.TType.I64, (short)22);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeEnd", org.apache.thrift.protocol.TType.I64, (short)23);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("lastLoginTimeStart", org.apache.thrift.protocol.TType.I64, (short)24);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("lastLoginTimeEnd", org.apache.thrift.protocol.TType.I64, (short)25);
  private static final org.apache.thrift.protocol.TField BIRTHDAY_START_FIELD_DESC = new org.apache.thrift.protocol.TField("birthdayStart", org.apache.thrift.protocol.TType.I64, (short)26);
  private static final org.apache.thrift.protocol.TField BIRTHDAY_END_FIELD_DESC = new org.apache.thrift.protocol.TField("birthdayEnd", org.apache.thrift.protocol.TType.I64, (short)27);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new UserBoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new UserBoTupleSchemeFactory());
  }

  public int id; // required
  public String name; // required
  public String password; // required
  public String phone; // required
  public String wechat; // required
  public String email; // required
  public String avatarUrl; // required
  public String invitationCode; // required
  public String appliedInvitationCode; // required
  public String reference; // required
  public long lastLoginTime; // required
  public long lastModifyTime; // required
  public long createTime; // required
  public int enabled; // required
  public int gender; // required
  public long birthday; // required
  public String school; // required
  public String major; // required
  public Set<Integer> idSet; // required
  public long lastModifyTimeStart; // required
  public long lastModifyTimeEnd; // required
  public long createTimeStart; // required
  public long createTimeEnd; // required
  public long lastLoginTimeStart; // required
  public long lastLoginTimeEnd; // required
  public long birthdayStart; // required
  public long birthdayEnd; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    PASSWORD((short)3, "password"),
    PHONE((short)4, "phone"),
    WECHAT((short)5, "wechat"),
    EMAIL((short)6, "email"),
    AVATAR_URL((short)7, "avatarUrl"),
    INVITATION_CODE((short)8, "invitationCode"),
    APPLIED_INVITATION_CODE((short)9, "appliedInvitationCode"),
    REFERENCE((short)10, "reference"),
    LAST_LOGIN_TIME((short)11, "lastLoginTime"),
    LAST_MODIFY_TIME((short)12, "lastModifyTime"),
    CREATE_TIME((short)13, "createTime"),
    ENABLED((short)14, "enabled"),
    GENDER((short)15, "gender"),
    BIRTHDAY((short)16, "birthday"),
    SCHOOL((short)17, "school"),
    MAJOR((short)18, "major"),
    ID_SET((short)19, "idSet"),
    LAST_MODIFY_TIME_START((short)20, "lastModifyTimeStart"),
    LAST_MODIFY_TIME_END((short)21, "lastModifyTimeEnd"),
    CREATE_TIME_START((short)22, "createTimeStart"),
    CREATE_TIME_END((short)23, "createTimeEnd"),
    LAST_LOGIN_TIME_START((short)24, "lastLoginTimeStart"),
    LAST_LOGIN_TIME_END((short)25, "lastLoginTimeEnd"),
    BIRTHDAY_START((short)26, "birthdayStart"),
    BIRTHDAY_END((short)27, "birthdayEnd");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // PASSWORD
          return PASSWORD;
        case 4: // PHONE
          return PHONE;
        case 5: // WECHAT
          return WECHAT;
        case 6: // EMAIL
          return EMAIL;
        case 7: // AVATAR_URL
          return AVATAR_URL;
        case 8: // INVITATION_CODE
          return INVITATION_CODE;
        case 9: // APPLIED_INVITATION_CODE
          return APPLIED_INVITATION_CODE;
        case 10: // REFERENCE
          return REFERENCE;
        case 11: // LAST_LOGIN_TIME
          return LAST_LOGIN_TIME;
        case 12: // LAST_MODIFY_TIME
          return LAST_MODIFY_TIME;
        case 13: // CREATE_TIME
          return CREATE_TIME;
        case 14: // ENABLED
          return ENABLED;
        case 15: // GENDER
          return GENDER;
        case 16: // BIRTHDAY
          return BIRTHDAY;
        case 17: // SCHOOL
          return SCHOOL;
        case 18: // MAJOR
          return MAJOR;
        case 19: // ID_SET
          return ID_SET;
        case 20: // LAST_MODIFY_TIME_START
          return LAST_MODIFY_TIME_START;
        case 21: // LAST_MODIFY_TIME_END
          return LAST_MODIFY_TIME_END;
        case 22: // CREATE_TIME_START
          return CREATE_TIME_START;
        case 23: // CREATE_TIME_END
          return CREATE_TIME_END;
        case 24: // LAST_LOGIN_TIME_START
          return LAST_LOGIN_TIME_START;
        case 25: // LAST_LOGIN_TIME_END
          return LAST_LOGIN_TIME_END;
        case 26: // BIRTHDAY_START
          return BIRTHDAY_START;
        case 27: // BIRTHDAY_END
          return BIRTHDAY_END;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __LASTLOGINTIME_ISSET_ID = 1;
  private static final int __LASTMODIFYTIME_ISSET_ID = 2;
  private static final int __CREATETIME_ISSET_ID = 3;
  private static final int __ENABLED_ISSET_ID = 4;
  private static final int __GENDER_ISSET_ID = 5;
  private static final int __BIRTHDAY_ISSET_ID = 6;
  private static final int __LASTMODIFYTIMESTART_ISSET_ID = 7;
  private static final int __LASTMODIFYTIMEEND_ISSET_ID = 8;
  private static final int __CREATETIMESTART_ISSET_ID = 9;
  private static final int __CREATETIMEEND_ISSET_ID = 10;
  private static final int __LASTLOGINTIMESTART_ISSET_ID = 11;
  private static final int __LASTLOGINTIMEEND_ISSET_ID = 12;
  private static final int __BIRTHDAYSTART_ISSET_ID = 13;
  private static final int __BIRTHDAYEND_ISSET_ID = 14;
  private short __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PASSWORD, new org.apache.thrift.meta_data.FieldMetaData("password", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WECHAT, new org.apache.thrift.meta_data.FieldMetaData("wechat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AVATAR_URL, new org.apache.thrift.meta_data.FieldMetaData("avatarUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INVITATION_CODE, new org.apache.thrift.meta_data.FieldMetaData("invitationCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLIED_INVITATION_CODE, new org.apache.thrift.meta_data.FieldMetaData("appliedInvitationCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REFERENCE, new org.apache.thrift.meta_data.FieldMetaData("reference", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAST_LOGIN_TIME, new org.apache.thrift.meta_data.FieldMetaData("lastLoginTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ENABLED, new org.apache.thrift.meta_data.FieldMetaData("enabled", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.GENDER, new org.apache.thrift.meta_data.FieldMetaData("gender", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BIRTHDAY, new org.apache.thrift.meta_data.FieldMetaData("birthday", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SCHOOL, new org.apache.thrift.meta_data.FieldMetaData("school", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MAJOR, new org.apache.thrift.meta_data.FieldMetaData("major", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ID_SET, new org.apache.thrift.meta_data.FieldMetaData("idSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.LAST_MODIFY_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("createTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("createTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_LOGIN_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("lastLoginTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_LOGIN_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("lastLoginTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.BIRTHDAY_START, new org.apache.thrift.meta_data.FieldMetaData("birthdayStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.BIRTHDAY_END, new org.apache.thrift.meta_data.FieldMetaData("birthdayEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserBo.class, metaDataMap);
  }

  public UserBo() {
  }

  public UserBo(
    int id,
    String name,
    String password,
    String phone,
    String wechat,
    String email,
    String avatarUrl,
    String invitationCode,
    String appliedInvitationCode,
    String reference,
    long lastLoginTime,
    long lastModifyTime,
    long createTime,
    int enabled,
    int gender,
    long birthday,
    String school,
    String major,
    Set<Integer> idSet,
    long lastModifyTimeStart,
    long lastModifyTimeEnd,
    long createTimeStart,
    long createTimeEnd,
    long lastLoginTimeStart,
    long lastLoginTimeEnd,
    long birthdayStart,
    long birthdayEnd)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.name = name;
    this.password = password;
    this.phone = phone;
    this.wechat = wechat;
    this.email = email;
    this.avatarUrl = avatarUrl;
    this.invitationCode = invitationCode;
    this.appliedInvitationCode = appliedInvitationCode;
    this.reference = reference;
    this.lastLoginTime = lastLoginTime;
    setLastLoginTimeIsSet(true);
    this.lastModifyTime = lastModifyTime;
    setLastModifyTimeIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.enabled = enabled;
    setEnabledIsSet(true);
    this.gender = gender;
    setGenderIsSet(true);
    this.birthday = birthday;
    setBirthdayIsSet(true);
    this.school = school;
    this.major = major;
    this.idSet = idSet;
    this.lastModifyTimeStart = lastModifyTimeStart;
    setLastModifyTimeStartIsSet(true);
    this.lastModifyTimeEnd = lastModifyTimeEnd;
    setLastModifyTimeEndIsSet(true);
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
    this.lastLoginTimeStart = lastLoginTimeStart;
    setLastLoginTimeStartIsSet(true);
    this.lastLoginTimeEnd = lastLoginTimeEnd;
    setLastLoginTimeEndIsSet(true);
    this.birthdayStart = birthdayStart;
    setBirthdayStartIsSet(true);
    this.birthdayEnd = birthdayEnd;
    setBirthdayEndIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserBo(UserBo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetPassword()) {
      this.password = other.password;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetWechat()) {
      this.wechat = other.wechat;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetAvatarUrl()) {
      this.avatarUrl = other.avatarUrl;
    }
    if (other.isSetInvitationCode()) {
      this.invitationCode = other.invitationCode;
    }
    if (other.isSetAppliedInvitationCode()) {
      this.appliedInvitationCode = other.appliedInvitationCode;
    }
    if (other.isSetReference()) {
      this.reference = other.reference;
    }
    this.lastLoginTime = other.lastLoginTime;
    this.lastModifyTime = other.lastModifyTime;
    this.createTime = other.createTime;
    this.enabled = other.enabled;
    this.gender = other.gender;
    this.birthday = other.birthday;
    if (other.isSetSchool()) {
      this.school = other.school;
    }
    if (other.isSetMajor()) {
      this.major = other.major;
    }
    if (other.isSetIdSet()) {
      Set<Integer> __this__idSet = new HashSet<Integer>(other.idSet);
      this.idSet = __this__idSet;
    }
    this.lastModifyTimeStart = other.lastModifyTimeStart;
    this.lastModifyTimeEnd = other.lastModifyTimeEnd;
    this.createTimeStart = other.createTimeStart;
    this.createTimeEnd = other.createTimeEnd;
    this.lastLoginTimeStart = other.lastLoginTimeStart;
    this.lastLoginTimeEnd = other.lastLoginTimeEnd;
    this.birthdayStart = other.birthdayStart;
    this.birthdayEnd = other.birthdayEnd;
  }

  public UserBo deepCopy() {
    return new UserBo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    this.password = null;
    this.phone = null;
    this.wechat = null;
    this.email = null;
    this.avatarUrl = null;
    this.invitationCode = null;
    this.appliedInvitationCode = null;
    this.reference = null;
    setLastLoginTimeIsSet(false);
    this.lastLoginTime = 0;
    setLastModifyTimeIsSet(false);
    this.lastModifyTime = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setEnabledIsSet(false);
    this.enabled = 0;
    setGenderIsSet(false);
    this.gender = 0;
    setBirthdayIsSet(false);
    this.birthday = 0;
    this.school = null;
    this.major = null;
    this.idSet = null;
    setLastModifyTimeStartIsSet(false);
    this.lastModifyTimeStart = 0;
    setLastModifyTimeEndIsSet(false);
    this.lastModifyTimeEnd = 0;
    setCreateTimeStartIsSet(false);
    this.createTimeStart = 0;
    setCreateTimeEndIsSet(false);
    this.createTimeEnd = 0;
    setLastLoginTimeStartIsSet(false);
    this.lastLoginTimeStart = 0;
    setLastLoginTimeEndIsSet(false);
    this.lastLoginTimeEnd = 0;
    setBirthdayStartIsSet(false);
    this.birthdayStart = 0;
    setBirthdayEndIsSet(false);
    this.birthdayEnd = 0;
  }

  public int getId() {
    return this.id;
  }

  public UserBo setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public UserBo setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getPassword() {
    return this.password;
  }

  public UserBo setPassword(String password) {
    this.password = password;
    return this;
  }

  public void unsetPassword() {
    this.password = null;
  }

  /** Returns true if field password is set (has been assigned a value) and false otherwise */
  public boolean isSetPassword() {
    return this.password != null;
  }

  public void setPasswordIsSet(boolean value) {
    if (!value) {
      this.password = null;
    }
  }

  public String getPhone() {
    return this.phone;
  }

  public UserBo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  public String getWechat() {
    return this.wechat;
  }

  public UserBo setWechat(String wechat) {
    this.wechat = wechat;
    return this;
  }

  public void unsetWechat() {
    this.wechat = null;
  }

  /** Returns true if field wechat is set (has been assigned a value) and false otherwise */
  public boolean isSetWechat() {
    return this.wechat != null;
  }

  public void setWechatIsSet(boolean value) {
    if (!value) {
      this.wechat = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public UserBo setEmail(String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public String getAvatarUrl() {
    return this.avatarUrl;
  }

  public UserBo setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  public void unsetAvatarUrl() {
    this.avatarUrl = null;
  }

  /** Returns true if field avatarUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetAvatarUrl() {
    return this.avatarUrl != null;
  }

  public void setAvatarUrlIsSet(boolean value) {
    if (!value) {
      this.avatarUrl = null;
    }
  }

  public String getInvitationCode() {
    return this.invitationCode;
  }

  public UserBo setInvitationCode(String invitationCode) {
    this.invitationCode = invitationCode;
    return this;
  }

  public void unsetInvitationCode() {
    this.invitationCode = null;
  }

  /** Returns true if field invitationCode is set (has been assigned a value) and false otherwise */
  public boolean isSetInvitationCode() {
    return this.invitationCode != null;
  }

  public void setInvitationCodeIsSet(boolean value) {
    if (!value) {
      this.invitationCode = null;
    }
  }

  public String getAppliedInvitationCode() {
    return this.appliedInvitationCode;
  }

  public UserBo setAppliedInvitationCode(String appliedInvitationCode) {
    this.appliedInvitationCode = appliedInvitationCode;
    return this;
  }

  public void unsetAppliedInvitationCode() {
    this.appliedInvitationCode = null;
  }

  /** Returns true if field appliedInvitationCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAppliedInvitationCode() {
    return this.appliedInvitationCode != null;
  }

  public void setAppliedInvitationCodeIsSet(boolean value) {
    if (!value) {
      this.appliedInvitationCode = null;
    }
  }

  public String getReference() {
    return this.reference;
  }

  public UserBo setReference(String reference) {
    this.reference = reference;
    return this;
  }

  public void unsetReference() {
    this.reference = null;
  }

  /** Returns true if field reference is set (has been assigned a value) and false otherwise */
  public boolean isSetReference() {
    return this.reference != null;
  }

  public void setReferenceIsSet(boolean value) {
    if (!value) {
      this.reference = null;
    }
  }

  public long getLastLoginTime() {
    return this.lastLoginTime;
  }

  public UserBo setLastLoginTime(long lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
    setLastLoginTimeIsSet(true);
    return this;
  }

  public void unsetLastLoginTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTLOGINTIME_ISSET_ID);
  }

  /** Returns true if field lastLoginTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLastLoginTime() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTLOGINTIME_ISSET_ID);
  }

  public void setLastLoginTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTLOGINTIME_ISSET_ID, value);
  }

  public long getLastModifyTime() {
    return this.lastModifyTime;
  }

  public UserBo setLastModifyTime(long lastModifyTime) {
    this.lastModifyTime = lastModifyTime;
    setLastModifyTimeIsSet(true);
    return this;
  }

  public void unsetLastModifyTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID);
  }

  /** Returns true if field lastModifyTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTime() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID);
  }

  public void setLastModifyTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public UserBo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public int getEnabled() {
    return this.enabled;
  }

  public UserBo setEnabled(int enabled) {
    this.enabled = enabled;
    setEnabledIsSet(true);
    return this;
  }

  public void unsetEnabled() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENABLED_ISSET_ID);
  }

  /** Returns true if field enabled is set (has been assigned a value) and false otherwise */
  public boolean isSetEnabled() {
    return EncodingUtils.testBit(__isset_bitfield, __ENABLED_ISSET_ID);
  }

  public void setEnabledIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENABLED_ISSET_ID, value);
  }

  public int getGender() {
    return this.gender;
  }

  public UserBo setGender(int gender) {
    this.gender = gender;
    setGenderIsSet(true);
    return this;
  }

  public void unsetGender() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GENDER_ISSET_ID);
  }

  /** Returns true if field gender is set (has been assigned a value) and false otherwise */
  public boolean isSetGender() {
    return EncodingUtils.testBit(__isset_bitfield, __GENDER_ISSET_ID);
  }

  public void setGenderIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GENDER_ISSET_ID, value);
  }

  public long getBirthday() {
    return this.birthday;
  }

  public UserBo setBirthday(long birthday) {
    this.birthday = birthday;
    setBirthdayIsSet(true);
    return this;
  }

  public void unsetBirthday() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BIRTHDAY_ISSET_ID);
  }

  /** Returns true if field birthday is set (has been assigned a value) and false otherwise */
  public boolean isSetBirthday() {
    return EncodingUtils.testBit(__isset_bitfield, __BIRTHDAY_ISSET_ID);
  }

  public void setBirthdayIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BIRTHDAY_ISSET_ID, value);
  }

  public String getSchool() {
    return this.school;
  }

  public UserBo setSchool(String school) {
    this.school = school;
    return this;
  }

  public void unsetSchool() {
    this.school = null;
  }

  /** Returns true if field school is set (has been assigned a value) and false otherwise */
  public boolean isSetSchool() {
    return this.school != null;
  }

  public void setSchoolIsSet(boolean value) {
    if (!value) {
      this.school = null;
    }
  }

  public String getMajor() {
    return this.major;
  }

  public UserBo setMajor(String major) {
    this.major = major;
    return this;
  }

  public void unsetMajor() {
    this.major = null;
  }

  /** Returns true if field major is set (has been assigned a value) and false otherwise */
  public boolean isSetMajor() {
    return this.major != null;
  }

  public void setMajorIsSet(boolean value) {
    if (!value) {
      this.major = null;
    }
  }

  public int getIdSetSize() {
    return (this.idSet == null) ? 0 : this.idSet.size();
  }

  public java.util.Iterator<Integer> getIdSetIterator() {
    return (this.idSet == null) ? null : this.idSet.iterator();
  }

  public void addToIdSet(int elem) {
    if (this.idSet == null) {
      this.idSet = new HashSet<Integer>();
    }
    this.idSet.add(elem);
  }

  public Set<Integer> getIdSet() {
    return this.idSet;
  }

  public UserBo setIdSet(Set<Integer> idSet) {
    this.idSet = idSet;
    return this;
  }

  public void unsetIdSet() {
    this.idSet = null;
  }

  /** Returns true if field idSet is set (has been assigned a value) and false otherwise */
  public boolean isSetIdSet() {
    return this.idSet != null;
  }

  public void setIdSetIsSet(boolean value) {
    if (!value) {
      this.idSet = null;
    }
  }

  public long getLastModifyTimeStart() {
    return this.lastModifyTimeStart;
  }

  public UserBo setLastModifyTimeStart(long lastModifyTimeStart) {
    this.lastModifyTimeStart = lastModifyTimeStart;
    setLastModifyTimeStartIsSet(true);
    return this;
  }

  public void unsetLastModifyTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID);
  }

  /** Returns true if field lastModifyTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID);
  }

  public void setLastModifyTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID, value);
  }

  public long getLastModifyTimeEnd() {
    return this.lastModifyTimeEnd;
  }

  public UserBo setLastModifyTimeEnd(long lastModifyTimeEnd) {
    this.lastModifyTimeEnd = lastModifyTimeEnd;
    setLastModifyTimeEndIsSet(true);
    return this;
  }

  public void unsetLastModifyTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID);
  }

  /** Returns true if field lastModifyTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID);
  }

  public void setLastModifyTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID, value);
  }

  public long getCreateTimeStart() {
    return this.createTimeStart;
  }

  public UserBo setCreateTimeStart(long createTimeStart) {
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    return this;
  }

  public void unsetCreateTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  /** Returns true if field createTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  public void setCreateTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID, value);
  }

  public long getCreateTimeEnd() {
    return this.createTimeEnd;
  }

  public UserBo setCreateTimeEnd(long createTimeEnd) {
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
    return this;
  }

  public void unsetCreateTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  /** Returns true if field createTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  public void setCreateTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID, value);
  }

  public long getLastLoginTimeStart() {
    return this.lastLoginTimeStart;
  }

  public UserBo setLastLoginTimeStart(long lastLoginTimeStart) {
    this.lastLoginTimeStart = lastLoginTimeStart;
    setLastLoginTimeStartIsSet(true);
    return this;
  }

  public void unsetLastLoginTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTLOGINTIMESTART_ISSET_ID);
  }

  /** Returns true if field lastLoginTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetLastLoginTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTLOGINTIMESTART_ISSET_ID);
  }

  public void setLastLoginTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTLOGINTIMESTART_ISSET_ID, value);
  }

  public long getLastLoginTimeEnd() {
    return this.lastLoginTimeEnd;
  }

  public UserBo setLastLoginTimeEnd(long lastLoginTimeEnd) {
    this.lastLoginTimeEnd = lastLoginTimeEnd;
    setLastLoginTimeEndIsSet(true);
    return this;
  }

  public void unsetLastLoginTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTLOGINTIMEEND_ISSET_ID);
  }

  /** Returns true if field lastLoginTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetLastLoginTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTLOGINTIMEEND_ISSET_ID);
  }

  public void setLastLoginTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTLOGINTIMEEND_ISSET_ID, value);
  }

  public long getBirthdayStart() {
    return this.birthdayStart;
  }

  public UserBo setBirthdayStart(long birthdayStart) {
    this.birthdayStart = birthdayStart;
    setBirthdayStartIsSet(true);
    return this;
  }

  public void unsetBirthdayStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BIRTHDAYSTART_ISSET_ID);
  }

  /** Returns true if field birthdayStart is set (has been assigned a value) and false otherwise */
  public boolean isSetBirthdayStart() {
    return EncodingUtils.testBit(__isset_bitfield, __BIRTHDAYSTART_ISSET_ID);
  }

  public void setBirthdayStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BIRTHDAYSTART_ISSET_ID, value);
  }

  public long getBirthdayEnd() {
    return this.birthdayEnd;
  }

  public UserBo setBirthdayEnd(long birthdayEnd) {
    this.birthdayEnd = birthdayEnd;
    setBirthdayEndIsSet(true);
    return this;
  }

  public void unsetBirthdayEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BIRTHDAYEND_ISSET_ID);
  }

  /** Returns true if field birthdayEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetBirthdayEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __BIRTHDAYEND_ISSET_ID);
  }

  public void setBirthdayEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BIRTHDAYEND_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case PASSWORD:
      if (value == null) {
        unsetPassword();
      } else {
        setPassword((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case WECHAT:
      if (value == null) {
        unsetWechat();
      } else {
        setWechat((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case AVATAR_URL:
      if (value == null) {
        unsetAvatarUrl();
      } else {
        setAvatarUrl((String)value);
      }
      break;

    case INVITATION_CODE:
      if (value == null) {
        unsetInvitationCode();
      } else {
        setInvitationCode((String)value);
      }
      break;

    case APPLIED_INVITATION_CODE:
      if (value == null) {
        unsetAppliedInvitationCode();
      } else {
        setAppliedInvitationCode((String)value);
      }
      break;

    case REFERENCE:
      if (value == null) {
        unsetReference();
      } else {
        setReference((String)value);
      }
      break;

    case LAST_LOGIN_TIME:
      if (value == null) {
        unsetLastLoginTime();
      } else {
        setLastLoginTime((Long)value);
      }
      break;

    case LAST_MODIFY_TIME:
      if (value == null) {
        unsetLastModifyTime();
      } else {
        setLastModifyTime((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case ENABLED:
      if (value == null) {
        unsetEnabled();
      } else {
        setEnabled((Integer)value);
      }
      break;

    case GENDER:
      if (value == null) {
        unsetGender();
      } else {
        setGender((Integer)value);
      }
      break;

    case BIRTHDAY:
      if (value == null) {
        unsetBirthday();
      } else {
        setBirthday((Long)value);
      }
      break;

    case SCHOOL:
      if (value == null) {
        unsetSchool();
      } else {
        setSchool((String)value);
      }
      break;

    case MAJOR:
      if (value == null) {
        unsetMajor();
      } else {
        setMajor((String)value);
      }
      break;

    case ID_SET:
      if (value == null) {
        unsetIdSet();
      } else {
        setIdSet((Set<Integer>)value);
      }
      break;

    case LAST_MODIFY_TIME_START:
      if (value == null) {
        unsetLastModifyTimeStart();
      } else {
        setLastModifyTimeStart((Long)value);
      }
      break;

    case LAST_MODIFY_TIME_END:
      if (value == null) {
        unsetLastModifyTimeEnd();
      } else {
        setLastModifyTimeEnd((Long)value);
      }
      break;

    case CREATE_TIME_START:
      if (value == null) {
        unsetCreateTimeStart();
      } else {
        setCreateTimeStart((Long)value);
      }
      break;

    case CREATE_TIME_END:
      if (value == null) {
        unsetCreateTimeEnd();
      } else {
        setCreateTimeEnd((Long)value);
      }
      break;

    case LAST_LOGIN_TIME_START:
      if (value == null) {
        unsetLastLoginTimeStart();
      } else {
        setLastLoginTimeStart((Long)value);
      }
      break;

    case LAST_LOGIN_TIME_END:
      if (value == null) {
        unsetLastLoginTimeEnd();
      } else {
        setLastLoginTimeEnd((Long)value);
      }
      break;

    case BIRTHDAY_START:
      if (value == null) {
        unsetBirthdayStart();
      } else {
        setBirthdayStart((Long)value);
      }
      break;

    case BIRTHDAY_END:
      if (value == null) {
        unsetBirthdayEnd();
      } else {
        setBirthdayEnd((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Integer.valueOf(getId());

    case NAME:
      return getName();

    case PASSWORD:
      return getPassword();

    case PHONE:
      return getPhone();

    case WECHAT:
      return getWechat();

    case EMAIL:
      return getEmail();

    case AVATAR_URL:
      return getAvatarUrl();

    case INVITATION_CODE:
      return getInvitationCode();

    case APPLIED_INVITATION_CODE:
      return getAppliedInvitationCode();

    case REFERENCE:
      return getReference();

    case LAST_LOGIN_TIME:
      return Long.valueOf(getLastLoginTime());

    case LAST_MODIFY_TIME:
      return Long.valueOf(getLastModifyTime());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case ENABLED:
      return Integer.valueOf(getEnabled());

    case GENDER:
      return Integer.valueOf(getGender());

    case BIRTHDAY:
      return Long.valueOf(getBirthday());

    case SCHOOL:
      return getSchool();

    case MAJOR:
      return getMajor();

    case ID_SET:
      return getIdSet();

    case LAST_MODIFY_TIME_START:
      return Long.valueOf(getLastModifyTimeStart());

    case LAST_MODIFY_TIME_END:
      return Long.valueOf(getLastModifyTimeEnd());

    case CREATE_TIME_START:
      return Long.valueOf(getCreateTimeStart());

    case CREATE_TIME_END:
      return Long.valueOf(getCreateTimeEnd());

    case LAST_LOGIN_TIME_START:
      return Long.valueOf(getLastLoginTimeStart());

    case LAST_LOGIN_TIME_END:
      return Long.valueOf(getLastLoginTimeEnd());

    case BIRTHDAY_START:
      return Long.valueOf(getBirthdayStart());

    case BIRTHDAY_END:
      return Long.valueOf(getBirthdayEnd());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case PASSWORD:
      return isSetPassword();
    case PHONE:
      return isSetPhone();
    case WECHAT:
      return isSetWechat();
    case EMAIL:
      return isSetEmail();
    case AVATAR_URL:
      return isSetAvatarUrl();
    case INVITATION_CODE:
      return isSetInvitationCode();
    case APPLIED_INVITATION_CODE:
      return isSetAppliedInvitationCode();
    case REFERENCE:
      return isSetReference();
    case LAST_LOGIN_TIME:
      return isSetLastLoginTime();
    case LAST_MODIFY_TIME:
      return isSetLastModifyTime();
    case CREATE_TIME:
      return isSetCreateTime();
    case ENABLED:
      return isSetEnabled();
    case GENDER:
      return isSetGender();
    case BIRTHDAY:
      return isSetBirthday();
    case SCHOOL:
      return isSetSchool();
    case MAJOR:
      return isSetMajor();
    case ID_SET:
      return isSetIdSet();
    case LAST_MODIFY_TIME_START:
      return isSetLastModifyTimeStart();
    case LAST_MODIFY_TIME_END:
      return isSetLastModifyTimeEnd();
    case CREATE_TIME_START:
      return isSetCreateTimeStart();
    case CREATE_TIME_END:
      return isSetCreateTimeEnd();
    case LAST_LOGIN_TIME_START:
      return isSetLastLoginTimeStart();
    case LAST_LOGIN_TIME_END:
      return isSetLastLoginTimeEnd();
    case BIRTHDAY_START:
      return isSetBirthdayStart();
    case BIRTHDAY_END:
      return isSetBirthdayEnd();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof UserBo)
      return this.equals((UserBo)that);
    return false;
  }

  public boolean equals(UserBo that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_password = true && this.isSetPassword();
    boolean that_present_password = true && that.isSetPassword();
    if (this_present_password || that_present_password) {
      if (!(this_present_password && that_present_password))
        return false;
      if (!this.password.equals(that.password))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_wechat = true && this.isSetWechat();
    boolean that_present_wechat = true && that.isSetWechat();
    if (this_present_wechat || that_present_wechat) {
      if (!(this_present_wechat && that_present_wechat))
        return false;
      if (!this.wechat.equals(that.wechat))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_avatarUrl = true && this.isSetAvatarUrl();
    boolean that_present_avatarUrl = true && that.isSetAvatarUrl();
    if (this_present_avatarUrl || that_present_avatarUrl) {
      if (!(this_present_avatarUrl && that_present_avatarUrl))
        return false;
      if (!this.avatarUrl.equals(that.avatarUrl))
        return false;
    }

    boolean this_present_invitationCode = true && this.isSetInvitationCode();
    boolean that_present_invitationCode = true && that.isSetInvitationCode();
    if (this_present_invitationCode || that_present_invitationCode) {
      if (!(this_present_invitationCode && that_present_invitationCode))
        return false;
      if (!this.invitationCode.equals(that.invitationCode))
        return false;
    }

    boolean this_present_appliedInvitationCode = true && this.isSetAppliedInvitationCode();
    boolean that_present_appliedInvitationCode = true && that.isSetAppliedInvitationCode();
    if (this_present_appliedInvitationCode || that_present_appliedInvitationCode) {
      if (!(this_present_appliedInvitationCode && that_present_appliedInvitationCode))
        return false;
      if (!this.appliedInvitationCode.equals(that.appliedInvitationCode))
        return false;
    }

    boolean this_present_reference = true && this.isSetReference();
    boolean that_present_reference = true && that.isSetReference();
    if (this_present_reference || that_present_reference) {
      if (!(this_present_reference && that_present_reference))
        return false;
      if (!this.reference.equals(that.reference))
        return false;
    }

    boolean this_present_lastLoginTime = true;
    boolean that_present_lastLoginTime = true;
    if (this_present_lastLoginTime || that_present_lastLoginTime) {
      if (!(this_present_lastLoginTime && that_present_lastLoginTime))
        return false;
      if (this.lastLoginTime != that.lastLoginTime)
        return false;
    }

    boolean this_present_lastModifyTime = true;
    boolean that_present_lastModifyTime = true;
    if (this_present_lastModifyTime || that_present_lastModifyTime) {
      if (!(this_present_lastModifyTime && that_present_lastModifyTime))
        return false;
      if (this.lastModifyTime != that.lastModifyTime)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_enabled = true;
    boolean that_present_enabled = true;
    if (this_present_enabled || that_present_enabled) {
      if (!(this_present_enabled && that_present_enabled))
        return false;
      if (this.enabled != that.enabled)
        return false;
    }

    boolean this_present_gender = true;
    boolean that_present_gender = true;
    if (this_present_gender || that_present_gender) {
      if (!(this_present_gender && that_present_gender))
        return false;
      if (this.gender != that.gender)
        return false;
    }

    boolean this_present_birthday = true;
    boolean that_present_birthday = true;
    if (this_present_birthday || that_present_birthday) {
      if (!(this_present_birthday && that_present_birthday))
        return false;
      if (this.birthday != that.birthday)
        return false;
    }

    boolean this_present_school = true && this.isSetSchool();
    boolean that_present_school = true && that.isSetSchool();
    if (this_present_school || that_present_school) {
      if (!(this_present_school && that_present_school))
        return false;
      if (!this.school.equals(that.school))
        return false;
    }

    boolean this_present_major = true && this.isSetMajor();
    boolean that_present_major = true && that.isSetMajor();
    if (this_present_major || that_present_major) {
      if (!(this_present_major && that_present_major))
        return false;
      if (!this.major.equals(that.major))
        return false;
    }

    boolean this_present_idSet = true && this.isSetIdSet();
    boolean that_present_idSet = true && that.isSetIdSet();
    if (this_present_idSet || that_present_idSet) {
      if (!(this_present_idSet && that_present_idSet))
        return false;
      if (!this.idSet.equals(that.idSet))
        return false;
    }

    boolean this_present_lastModifyTimeStart = true;
    boolean that_present_lastModifyTimeStart = true;
    if (this_present_lastModifyTimeStart || that_present_lastModifyTimeStart) {
      if (!(this_present_lastModifyTimeStart && that_present_lastModifyTimeStart))
        return false;
      if (this.lastModifyTimeStart != that.lastModifyTimeStart)
        return false;
    }

    boolean this_present_lastModifyTimeEnd = true;
    boolean that_present_lastModifyTimeEnd = true;
    if (this_present_lastModifyTimeEnd || that_present_lastModifyTimeEnd) {
      if (!(this_present_lastModifyTimeEnd && that_present_lastModifyTimeEnd))
        return false;
      if (this.lastModifyTimeEnd != that.lastModifyTimeEnd)
        return false;
    }

    boolean this_present_createTimeStart = true;
    boolean that_present_createTimeStart = true;
    if (this_present_createTimeStart || that_present_createTimeStart) {
      if (!(this_present_createTimeStart && that_present_createTimeStart))
        return false;
      if (this.createTimeStart != that.createTimeStart)
        return false;
    }

    boolean this_present_createTimeEnd = true;
    boolean that_present_createTimeEnd = true;
    if (this_present_createTimeEnd || that_present_createTimeEnd) {
      if (!(this_present_createTimeEnd && that_present_createTimeEnd))
        return false;
      if (this.createTimeEnd != that.createTimeEnd)
        return false;
    }

    boolean this_present_lastLoginTimeStart = true;
    boolean that_present_lastLoginTimeStart = true;
    if (this_present_lastLoginTimeStart || that_present_lastLoginTimeStart) {
      if (!(this_present_lastLoginTimeStart && that_present_lastLoginTimeStart))
        return false;
      if (this.lastLoginTimeStart != that.lastLoginTimeStart)
        return false;
    }

    boolean this_present_lastLoginTimeEnd = true;
    boolean that_present_lastLoginTimeEnd = true;
    if (this_present_lastLoginTimeEnd || that_present_lastLoginTimeEnd) {
      if (!(this_present_lastLoginTimeEnd && that_present_lastLoginTimeEnd))
        return false;
      if (this.lastLoginTimeEnd != that.lastLoginTimeEnd)
        return false;
    }

    boolean this_present_birthdayStart = true;
    boolean that_present_birthdayStart = true;
    if (this_present_birthdayStart || that_present_birthdayStart) {
      if (!(this_present_birthdayStart && that_present_birthdayStart))
        return false;
      if (this.birthdayStart != that.birthdayStart)
        return false;
    }

    boolean this_present_birthdayEnd = true;
    boolean that_present_birthdayEnd = true;
    if (this_present_birthdayEnd || that_present_birthdayEnd) {
      if (!(this_present_birthdayEnd && that_present_birthdayEnd))
        return false;
      if (this.birthdayEnd != that.birthdayEnd)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_id = true;
    builder.append(present_id);
    if (present_id)
      builder.append(id);

    boolean present_name = true && (isSetName());
    builder.append(present_name);
    if (present_name)
      builder.append(name);

    boolean present_password = true && (isSetPassword());
    builder.append(present_password);
    if (present_password)
      builder.append(password);

    boolean present_phone = true && (isSetPhone());
    builder.append(present_phone);
    if (present_phone)
      builder.append(phone);

    boolean present_wechat = true && (isSetWechat());
    builder.append(present_wechat);
    if (present_wechat)
      builder.append(wechat);

    boolean present_email = true && (isSetEmail());
    builder.append(present_email);
    if (present_email)
      builder.append(email);

    boolean present_avatarUrl = true && (isSetAvatarUrl());
    builder.append(present_avatarUrl);
    if (present_avatarUrl)
      builder.append(avatarUrl);

    boolean present_invitationCode = true && (isSetInvitationCode());
    builder.append(present_invitationCode);
    if (present_invitationCode)
      builder.append(invitationCode);

    boolean present_appliedInvitationCode = true && (isSetAppliedInvitationCode());
    builder.append(present_appliedInvitationCode);
    if (present_appliedInvitationCode)
      builder.append(appliedInvitationCode);

    boolean present_reference = true && (isSetReference());
    builder.append(present_reference);
    if (present_reference)
      builder.append(reference);

    boolean present_lastLoginTime = true;
    builder.append(present_lastLoginTime);
    if (present_lastLoginTime)
      builder.append(lastLoginTime);

    boolean present_lastModifyTime = true;
    builder.append(present_lastModifyTime);
    if (present_lastModifyTime)
      builder.append(lastModifyTime);

    boolean present_createTime = true;
    builder.append(present_createTime);
    if (present_createTime)
      builder.append(createTime);

    boolean present_enabled = true;
    builder.append(present_enabled);
    if (present_enabled)
      builder.append(enabled);

    boolean present_gender = true;
    builder.append(present_gender);
    if (present_gender)
      builder.append(gender);

    boolean present_birthday = true;
    builder.append(present_birthday);
    if (present_birthday)
      builder.append(birthday);

    boolean present_school = true && (isSetSchool());
    builder.append(present_school);
    if (present_school)
      builder.append(school);

    boolean present_major = true && (isSetMajor());
    builder.append(present_major);
    if (present_major)
      builder.append(major);

    boolean present_idSet = true && (isSetIdSet());
    builder.append(present_idSet);
    if (present_idSet)
      builder.append(idSet);

    boolean present_lastModifyTimeStart = true;
    builder.append(present_lastModifyTimeStart);
    if (present_lastModifyTimeStart)
      builder.append(lastModifyTimeStart);

    boolean present_lastModifyTimeEnd = true;
    builder.append(present_lastModifyTimeEnd);
    if (present_lastModifyTimeEnd)
      builder.append(lastModifyTimeEnd);

    boolean present_createTimeStart = true;
    builder.append(present_createTimeStart);
    if (present_createTimeStart)
      builder.append(createTimeStart);

    boolean present_createTimeEnd = true;
    builder.append(present_createTimeEnd);
    if (present_createTimeEnd)
      builder.append(createTimeEnd);

    boolean present_lastLoginTimeStart = true;
    builder.append(present_lastLoginTimeStart);
    if (present_lastLoginTimeStart)
      builder.append(lastLoginTimeStart);

    boolean present_lastLoginTimeEnd = true;
    builder.append(present_lastLoginTimeEnd);
    if (present_lastLoginTimeEnd)
      builder.append(lastLoginTimeEnd);

    boolean present_birthdayStart = true;
    builder.append(present_birthdayStart);
    if (present_birthdayStart)
      builder.append(birthdayStart);

    boolean present_birthdayEnd = true;
    builder.append(present_birthdayEnd);
    if (present_birthdayEnd)
      builder.append(birthdayEnd);

    return builder.toHashCode();
  }

  @Override
  public int compareTo(UserBo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPassword()).compareTo(other.isSetPassword());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPassword()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.password, other.password);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWechat()).compareTo(other.isSetWechat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWechat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wechat, other.wechat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAvatarUrl()).compareTo(other.isSetAvatarUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAvatarUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarUrl, other.avatarUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInvitationCode()).compareTo(other.isSetInvitationCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInvitationCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.invitationCode, other.invitationCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppliedInvitationCode()).compareTo(other.isSetAppliedInvitationCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppliedInvitationCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appliedInvitationCode, other.appliedInvitationCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReference()).compareTo(other.isSetReference());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReference()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reference, other.reference);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastLoginTime()).compareTo(other.isSetLastLoginTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastLoginTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastLoginTime, other.lastLoginTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTime()).compareTo(other.isSetLastModifyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTime, other.lastModifyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEnabled()).compareTo(other.isSetEnabled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnabled()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enabled, other.enabled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGender()).compareTo(other.isSetGender());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGender()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gender, other.gender);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBirthday()).compareTo(other.isSetBirthday());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBirthday()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.birthday, other.birthday);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSchool()).compareTo(other.isSetSchool());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSchool()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.school, other.school);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMajor()).compareTo(other.isSetMajor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMajor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.major, other.major);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdSet()).compareTo(other.isSetIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idSet, other.idSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimeStart()).compareTo(other.isSetLastModifyTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimeStart, other.lastModifyTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimeEnd()).compareTo(other.isSetLastModifyTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimeEnd, other.lastModifyTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeStart()).compareTo(other.isSetCreateTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeStart, other.createTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeEnd()).compareTo(other.isSetCreateTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeEnd, other.createTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastLoginTimeStart()).compareTo(other.isSetLastLoginTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastLoginTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastLoginTimeStart, other.lastLoginTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastLoginTimeEnd()).compareTo(other.isSetLastLoginTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastLoginTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastLoginTimeEnd, other.lastLoginTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBirthdayStart()).compareTo(other.isSetBirthdayStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBirthdayStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.birthdayStart, other.birthdayStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBirthdayEnd()).compareTo(other.isSetBirthdayEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBirthdayEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.birthdayEnd, other.birthdayEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("UserBo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("password:");
    if (this.password == null) {
      sb.append("null");
    } else {
      sb.append(this.password);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("wechat:");
    if (this.wechat == null) {
      sb.append("null");
    } else {
      sb.append(this.wechat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("avatarUrl:");
    if (this.avatarUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.avatarUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("invitationCode:");
    if (this.invitationCode == null) {
      sb.append("null");
    } else {
      sb.append(this.invitationCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("appliedInvitationCode:");
    if (this.appliedInvitationCode == null) {
      sb.append("null");
    } else {
      sb.append(this.appliedInvitationCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reference:");
    if (this.reference == null) {
      sb.append("null");
    } else {
      sb.append(this.reference);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastLoginTime:");
    sb.append(this.lastLoginTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTime:");
    sb.append(this.lastModifyTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("enabled:");
    sb.append(this.enabled);
    first = false;
    if (!first) sb.append(", ");
    sb.append("gender:");
    sb.append(this.gender);
    first = false;
    if (!first) sb.append(", ");
    sb.append("birthday:");
    sb.append(this.birthday);
    first = false;
    if (!first) sb.append(", ");
    sb.append("school:");
    if (this.school == null) {
      sb.append("null");
    } else {
      sb.append(this.school);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("major:");
    if (this.major == null) {
      sb.append("null");
    } else {
      sb.append(this.major);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("idSet:");
    if (this.idSet == null) {
      sb.append("null");
    } else {
      sb.append(this.idSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTimeStart:");
    sb.append(this.lastModifyTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTimeEnd:");
    sb.append(this.lastModifyTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeStart:");
    sb.append(this.createTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeEnd:");
    sb.append(this.createTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastLoginTimeStart:");
    sb.append(this.lastLoginTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastLoginTimeEnd:");
    sb.append(this.lastLoginTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("birthdayStart:");
    sb.append(this.birthdayStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("birthdayEnd:");
    sb.append(this.birthdayEnd);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserBoStandardSchemeFactory implements SchemeFactory {
    public UserBoStandardScheme getScheme() {
      return new UserBoStandardScheme();
    }
  }

  private static class UserBoStandardScheme extends StandardScheme<UserBo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserBo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PASSWORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.password = iprot.readString();
              struct.setPasswordIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // WECHAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.wechat = iprot.readString();
              struct.setWechatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // AVATAR_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.avatarUrl = iprot.readString();
              struct.setAvatarUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // INVITATION_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.invitationCode = iprot.readString();
              struct.setInvitationCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // APPLIED_INVITATION_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appliedInvitationCode = iprot.readString();
              struct.setAppliedInvitationCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // REFERENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reference = iprot.readString();
              struct.setReferenceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // LAST_LOGIN_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastLoginTime = iprot.readI64();
              struct.setLastLoginTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // LAST_MODIFY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTime = iprot.readI64();
              struct.setLastModifyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ENABLED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.enabled = iprot.readI32();
              struct.setEnabledIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // GENDER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.gender = iprot.readI32();
              struct.setGenderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // BIRTHDAY
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.birthday = iprot.readI64();
              struct.setBirthdayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // SCHOOL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.school = iprot.readString();
              struct.setSchoolIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // MAJOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.major = iprot.readString();
              struct.setMajorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set0 = iprot.readSetBegin();
                struct.idSet = new HashSet<Integer>(2*_set0.size);
                for (int _i1 = 0; _i1 < _set0.size; ++_i1)
                {
                  int _elem2;
                  _elem2 = iprot.readI32();
                  struct.idSet.add(_elem2);
                }
                iprot.readSetEnd();
              }
              struct.setIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // LAST_MODIFY_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimeStart = iprot.readI64();
              struct.setLastModifyTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // LAST_MODIFY_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimeEnd = iprot.readI64();
              struct.setLastModifyTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // CREATE_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeStart = iprot.readI64();
              struct.setCreateTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // CREATE_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeEnd = iprot.readI64();
              struct.setCreateTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // LAST_LOGIN_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastLoginTimeStart = iprot.readI64();
              struct.setLastLoginTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // LAST_LOGIN_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastLoginTimeEnd = iprot.readI64();
              struct.setLastLoginTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // BIRTHDAY_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.birthdayStart = iprot.readI64();
              struct.setBirthdayStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // BIRTHDAY_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.birthdayEnd = iprot.readI64();
              struct.setBirthdayEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserBo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.password != null) {
        oprot.writeFieldBegin(PASSWORD_FIELD_DESC);
        oprot.writeString(struct.password);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      if (struct.wechat != null) {
        oprot.writeFieldBegin(WECHAT_FIELD_DESC);
        oprot.writeString(struct.wechat);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      if (struct.avatarUrl != null) {
        oprot.writeFieldBegin(AVATAR_URL_FIELD_DESC);
        oprot.writeString(struct.avatarUrl);
        oprot.writeFieldEnd();
      }
      if (struct.invitationCode != null) {
        oprot.writeFieldBegin(INVITATION_CODE_FIELD_DESC);
        oprot.writeString(struct.invitationCode);
        oprot.writeFieldEnd();
      }
      if (struct.appliedInvitationCode != null) {
        oprot.writeFieldBegin(APPLIED_INVITATION_CODE_FIELD_DESC);
        oprot.writeString(struct.appliedInvitationCode);
        oprot.writeFieldEnd();
      }
      if (struct.reference != null) {
        oprot.writeFieldBegin(REFERENCE_FIELD_DESC);
        oprot.writeString(struct.reference);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LAST_LOGIN_TIME_FIELD_DESC);
      oprot.writeI64(struct.lastLoginTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ENABLED_FIELD_DESC);
      oprot.writeI32(struct.enabled);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GENDER_FIELD_DESC);
      oprot.writeI32(struct.gender);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BIRTHDAY_FIELD_DESC);
      oprot.writeI64(struct.birthday);
      oprot.writeFieldEnd();
      if (struct.school != null) {
        oprot.writeFieldBegin(SCHOOL_FIELD_DESC);
        oprot.writeString(struct.school);
        oprot.writeFieldEnd();
      }
      if (struct.major != null) {
        oprot.writeFieldBegin(MAJOR_FIELD_DESC);
        oprot.writeString(struct.major);
        oprot.writeFieldEnd();
      }
      if (struct.idSet != null) {
        oprot.writeFieldBegin(ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.idSet.size()));
          for (int _iter3 : struct.idSet)
          {
            oprot.writeI32(_iter3);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LAST_MODIFY_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.createTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.createTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_LOGIN_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.lastLoginTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_LOGIN_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.lastLoginTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BIRTHDAY_START_FIELD_DESC);
      oprot.writeI64(struct.birthdayStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BIRTHDAY_END_FIELD_DESC);
      oprot.writeI64(struct.birthdayEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserBoTupleSchemeFactory implements SchemeFactory {
    public UserBoTupleScheme getScheme() {
      return new UserBoTupleScheme();
    }
  }

  private static class UserBoTupleScheme extends TupleScheme<UserBo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserBo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetPassword()) {
        optionals.set(2);
      }
      if (struct.isSetPhone()) {
        optionals.set(3);
      }
      if (struct.isSetWechat()) {
        optionals.set(4);
      }
      if (struct.isSetEmail()) {
        optionals.set(5);
      }
      if (struct.isSetAvatarUrl()) {
        optionals.set(6);
      }
      if (struct.isSetInvitationCode()) {
        optionals.set(7);
      }
      if (struct.isSetAppliedInvitationCode()) {
        optionals.set(8);
      }
      if (struct.isSetReference()) {
        optionals.set(9);
      }
      if (struct.isSetLastLoginTime()) {
        optionals.set(10);
      }
      if (struct.isSetLastModifyTime()) {
        optionals.set(11);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(12);
      }
      if (struct.isSetEnabled()) {
        optionals.set(13);
      }
      if (struct.isSetGender()) {
        optionals.set(14);
      }
      if (struct.isSetBirthday()) {
        optionals.set(15);
      }
      if (struct.isSetSchool()) {
        optionals.set(16);
      }
      if (struct.isSetMajor()) {
        optionals.set(17);
      }
      if (struct.isSetIdSet()) {
        optionals.set(18);
      }
      if (struct.isSetLastModifyTimeStart()) {
        optionals.set(19);
      }
      if (struct.isSetLastModifyTimeEnd()) {
        optionals.set(20);
      }
      if (struct.isSetCreateTimeStart()) {
        optionals.set(21);
      }
      if (struct.isSetCreateTimeEnd()) {
        optionals.set(22);
      }
      if (struct.isSetLastLoginTimeStart()) {
        optionals.set(23);
      }
      if (struct.isSetLastLoginTimeEnd()) {
        optionals.set(24);
      }
      if (struct.isSetBirthdayStart()) {
        optionals.set(25);
      }
      if (struct.isSetBirthdayEnd()) {
        optionals.set(26);
      }
      oprot.writeBitSet(optionals, 27);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetPassword()) {
        oprot.writeString(struct.password);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetWechat()) {
        oprot.writeString(struct.wechat);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetAvatarUrl()) {
        oprot.writeString(struct.avatarUrl);
      }
      if (struct.isSetInvitationCode()) {
        oprot.writeString(struct.invitationCode);
      }
      if (struct.isSetAppliedInvitationCode()) {
        oprot.writeString(struct.appliedInvitationCode);
      }
      if (struct.isSetReference()) {
        oprot.writeString(struct.reference);
      }
      if (struct.isSetLastLoginTime()) {
        oprot.writeI64(struct.lastLoginTime);
      }
      if (struct.isSetLastModifyTime()) {
        oprot.writeI64(struct.lastModifyTime);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetEnabled()) {
        oprot.writeI32(struct.enabled);
      }
      if (struct.isSetGender()) {
        oprot.writeI32(struct.gender);
      }
      if (struct.isSetBirthday()) {
        oprot.writeI64(struct.birthday);
      }
      if (struct.isSetSchool()) {
        oprot.writeString(struct.school);
      }
      if (struct.isSetMajor()) {
        oprot.writeString(struct.major);
      }
      if (struct.isSetIdSet()) {
        {
          oprot.writeI32(struct.idSet.size());
          for (int _iter4 : struct.idSet)
          {
            oprot.writeI32(_iter4);
          }
        }
      }
      if (struct.isSetLastModifyTimeStart()) {
        oprot.writeI64(struct.lastModifyTimeStart);
      }
      if (struct.isSetLastModifyTimeEnd()) {
        oprot.writeI64(struct.lastModifyTimeEnd);
      }
      if (struct.isSetCreateTimeStart()) {
        oprot.writeI64(struct.createTimeStart);
      }
      if (struct.isSetCreateTimeEnd()) {
        oprot.writeI64(struct.createTimeEnd);
      }
      if (struct.isSetLastLoginTimeStart()) {
        oprot.writeI64(struct.lastLoginTimeStart);
      }
      if (struct.isSetLastLoginTimeEnd()) {
        oprot.writeI64(struct.lastLoginTimeEnd);
      }
      if (struct.isSetBirthdayStart()) {
        oprot.writeI64(struct.birthdayStart);
      }
      if (struct.isSetBirthdayEnd()) {
        oprot.writeI64(struct.birthdayEnd);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserBo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(27);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.password = iprot.readString();
        struct.setPasswordIsSet(true);
      }
      if (incoming.get(3)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(4)) {
        struct.wechat = iprot.readString();
        struct.setWechatIsSet(true);
      }
      if (incoming.get(5)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(6)) {
        struct.avatarUrl = iprot.readString();
        struct.setAvatarUrlIsSet(true);
      }
      if (incoming.get(7)) {
        struct.invitationCode = iprot.readString();
        struct.setInvitationCodeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.appliedInvitationCode = iprot.readString();
        struct.setAppliedInvitationCodeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.reference = iprot.readString();
        struct.setReferenceIsSet(true);
      }
      if (incoming.get(10)) {
        struct.lastLoginTime = iprot.readI64();
        struct.setLastLoginTimeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.lastModifyTime = iprot.readI64();
        struct.setLastModifyTimeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.enabled = iprot.readI32();
        struct.setEnabledIsSet(true);
      }
      if (incoming.get(14)) {
        struct.gender = iprot.readI32();
        struct.setGenderIsSet(true);
      }
      if (incoming.get(15)) {
        struct.birthday = iprot.readI64();
        struct.setBirthdayIsSet(true);
      }
      if (incoming.get(16)) {
        struct.school = iprot.readString();
        struct.setSchoolIsSet(true);
      }
      if (incoming.get(17)) {
        struct.major = iprot.readString();
        struct.setMajorIsSet(true);
      }
      if (incoming.get(18)) {
        {
          org.apache.thrift.protocol.TSet _set5 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.idSet = new HashSet<Integer>(2*_set5.size);
          for (int _i6 = 0; _i6 < _set5.size; ++_i6)
          {
            int _elem7;
            _elem7 = iprot.readI32();
            struct.idSet.add(_elem7);
          }
        }
        struct.setIdSetIsSet(true);
      }
      if (incoming.get(19)) {
        struct.lastModifyTimeStart = iprot.readI64();
        struct.setLastModifyTimeStartIsSet(true);
      }
      if (incoming.get(20)) {
        struct.lastModifyTimeEnd = iprot.readI64();
        struct.setLastModifyTimeEndIsSet(true);
      }
      if (incoming.get(21)) {
        struct.createTimeStart = iprot.readI64();
        struct.setCreateTimeStartIsSet(true);
      }
      if (incoming.get(22)) {
        struct.createTimeEnd = iprot.readI64();
        struct.setCreateTimeEndIsSet(true);
      }
      if (incoming.get(23)) {
        struct.lastLoginTimeStart = iprot.readI64();
        struct.setLastLoginTimeStartIsSet(true);
      }
      if (incoming.get(24)) {
        struct.lastLoginTimeEnd = iprot.readI64();
        struct.setLastLoginTimeEndIsSet(true);
      }
      if (incoming.get(25)) {
        struct.birthdayStart = iprot.readI64();
        struct.setBirthdayStartIsSet(true);
      }
      if (incoming.get(26)) {
        struct.birthdayEnd = iprot.readI64();
        struct.setBirthdayEndIsSet(true);
      }
    }
  }

}

