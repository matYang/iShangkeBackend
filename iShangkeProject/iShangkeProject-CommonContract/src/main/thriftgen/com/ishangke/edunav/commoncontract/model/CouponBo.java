/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ishangke.edunav.commoncontract.model;

import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * CouponBo
 */
public class CouponBo implements org.apache.thrift.TBase<CouponBo, CouponBo._Fields>, java.io.Serializable, Cloneable, Comparable<CouponBo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CouponBo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("code", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TOTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("total", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField BALANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("balance", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField ORIGIN_FIELD_DESC = new org.apache.thrift.protocol.TField("origin", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField EXPIRY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("expiryTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField ENABLED_FIELD_DESC = new org.apache.thrift.protocol.TField("enabled", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("idSet", org.apache.thrift.protocol.TType.SET, (short)12);
  private static final org.apache.thrift.protocol.TField TOTAL_START_FIELD_DESC = new org.apache.thrift.protocol.TField("totalStart", org.apache.thrift.protocol.TType.DOUBLE, (short)13);
  private static final org.apache.thrift.protocol.TField TOTAL_END_FIELD_DESC = new org.apache.thrift.protocol.TField("totalEnd", org.apache.thrift.protocol.TType.DOUBLE, (short)14);
  private static final org.apache.thrift.protocol.TField BALANCE_START_FIELD_DESC = new org.apache.thrift.protocol.TField("balanceStart", org.apache.thrift.protocol.TType.DOUBLE, (short)15);
  private static final org.apache.thrift.protocol.TField BALANCE_END_FIELD_DESC = new org.apache.thrift.protocol.TField("balanceEnd", org.apache.thrift.protocol.TType.DOUBLE, (short)16);
  private static final org.apache.thrift.protocol.TField EXPIRY_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("expiryTimeStart", org.apache.thrift.protocol.TType.I64, (short)17);
  private static final org.apache.thrift.protocol.TField EXPIRY_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("expiryTimeEnd", org.apache.thrift.protocol.TType.I64, (short)18);
  private static final org.apache.thrift.protocol.TField USER_ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("userIdSet", org.apache.thrift.protocol.TType.SET, (short)19);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimeStart", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimeEnd", org.apache.thrift.protocol.TType.I64, (short)21);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeStart", org.apache.thrift.protocol.TType.I64, (short)22);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeEnd", org.apache.thrift.protocol.TType.I64, (short)23);
  private static final org.apache.thrift.protocol.TField ORIGIN_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("originSet", org.apache.thrift.protocol.TType.SET, (short)24);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CouponBoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CouponBoTupleSchemeFactory());
  }

  public int id; // required
  public String code; // required
  public double total; // required
  public double balance; // required
  public int origin; // required
  public long expiryTime; // required
  public String remark; // required
  public int userId; // required
  public long lastModifyTime; // required
  public long createTime; // required
  public int enabled; // required
  public Set<Integer> idSet; // required
  public double totalStart; // required
  public double totalEnd; // required
  public double balanceStart; // required
  public double balanceEnd; // required
  public long expiryTimeStart; // required
  public long expiryTimeEnd; // required
  public Set<Integer> userIdSet; // required
  public long lastModifyTimeStart; // required
  public long lastModifyTimeEnd; // required
  public long createTimeStart; // required
  public long createTimeEnd; // required
  public Set<Integer> originSet; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    CODE((short)2, "code"),
    TOTAL((short)3, "total"),
    BALANCE((short)4, "balance"),
    ORIGIN((short)5, "origin"),
    EXPIRY_TIME((short)6, "expiryTime"),
    REMARK((short)7, "remark"),
    USER_ID((short)8, "userId"),
    LAST_MODIFY_TIME((short)9, "lastModifyTime"),
    CREATE_TIME((short)10, "createTime"),
    ENABLED((short)11, "enabled"),
    ID_SET((short)12, "idSet"),
    TOTAL_START((short)13, "totalStart"),
    TOTAL_END((short)14, "totalEnd"),
    BALANCE_START((short)15, "balanceStart"),
    BALANCE_END((short)16, "balanceEnd"),
    EXPIRY_TIME_START((short)17, "expiryTimeStart"),
    EXPIRY_TIME_END((short)18, "expiryTimeEnd"),
    USER_ID_SET((short)19, "userIdSet"),
    LAST_MODIFY_TIME_START((short)20, "lastModifyTimeStart"),
    LAST_MODIFY_TIME_END((short)21, "lastModifyTimeEnd"),
    CREATE_TIME_START((short)22, "createTimeStart"),
    CREATE_TIME_END((short)23, "createTimeEnd"),
    ORIGIN_SET((short)24, "originSet");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CODE
          return CODE;
        case 3: // TOTAL
          return TOTAL;
        case 4: // BALANCE
          return BALANCE;
        case 5: // ORIGIN
          return ORIGIN;
        case 6: // EXPIRY_TIME
          return EXPIRY_TIME;
        case 7: // REMARK
          return REMARK;
        case 8: // USER_ID
          return USER_ID;
        case 9: // LAST_MODIFY_TIME
          return LAST_MODIFY_TIME;
        case 10: // CREATE_TIME
          return CREATE_TIME;
        case 11: // ENABLED
          return ENABLED;
        case 12: // ID_SET
          return ID_SET;
        case 13: // TOTAL_START
          return TOTAL_START;
        case 14: // TOTAL_END
          return TOTAL_END;
        case 15: // BALANCE_START
          return BALANCE_START;
        case 16: // BALANCE_END
          return BALANCE_END;
        case 17: // EXPIRY_TIME_START
          return EXPIRY_TIME_START;
        case 18: // EXPIRY_TIME_END
          return EXPIRY_TIME_END;
        case 19: // USER_ID_SET
          return USER_ID_SET;
        case 20: // LAST_MODIFY_TIME_START
          return LAST_MODIFY_TIME_START;
        case 21: // LAST_MODIFY_TIME_END
          return LAST_MODIFY_TIME_END;
        case 22: // CREATE_TIME_START
          return CREATE_TIME_START;
        case 23: // CREATE_TIME_END
          return CREATE_TIME_END;
        case 24: // ORIGIN_SET
          return ORIGIN_SET;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __TOTAL_ISSET_ID = 1;
  private static final int __BALANCE_ISSET_ID = 2;
  private static final int __ORIGIN_ISSET_ID = 3;
  private static final int __EXPIRYTIME_ISSET_ID = 4;
  private static final int __USERID_ISSET_ID = 5;
  private static final int __LASTMODIFYTIME_ISSET_ID = 6;
  private static final int __CREATETIME_ISSET_ID = 7;
  private static final int __ENABLED_ISSET_ID = 8;
  private static final int __TOTALSTART_ISSET_ID = 9;
  private static final int __TOTALEND_ISSET_ID = 10;
  private static final int __BALANCESTART_ISSET_ID = 11;
  private static final int __BALANCEEND_ISSET_ID = 12;
  private static final int __EXPIRYTIMESTART_ISSET_ID = 13;
  private static final int __EXPIRYTIMEEND_ISSET_ID = 14;
  private static final int __LASTMODIFYTIMESTART_ISSET_ID = 15;
  private static final int __LASTMODIFYTIMEEND_ISSET_ID = 16;
  private static final int __CREATETIMESTART_ISSET_ID = 17;
  private static final int __CREATETIMEEND_ISSET_ID = 18;
  private int __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CODE, new org.apache.thrift.meta_data.FieldMetaData("code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL, new org.apache.thrift.meta_data.FieldMetaData("total", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BALANCE, new org.apache.thrift.meta_data.FieldMetaData("balance", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ORIGIN, new org.apache.thrift.meta_data.FieldMetaData("origin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.EXPIRY_TIME, new org.apache.thrift.meta_data.FieldMetaData("expiryTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ENABLED, new org.apache.thrift.meta_data.FieldMetaData("enabled", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_SET, new org.apache.thrift.meta_data.FieldMetaData("idSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.TOTAL_START, new org.apache.thrift.meta_data.FieldMetaData("totalStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TOTAL_END, new org.apache.thrift.meta_data.FieldMetaData("totalEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BALANCE_START, new org.apache.thrift.meta_data.FieldMetaData("balanceStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BALANCE_END, new org.apache.thrift.meta_data.FieldMetaData("balanceEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.EXPIRY_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("expiryTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.EXPIRY_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("expiryTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.USER_ID_SET, new org.apache.thrift.meta_data.FieldMetaData("userIdSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.LAST_MODIFY_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("createTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("createTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ORIGIN_SET, new org.apache.thrift.meta_data.FieldMetaData("originSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CouponBo.class, metaDataMap);
  }

  public CouponBo() {
  }

  public CouponBo(
    int id,
    String code,
    double total,
    double balance,
    int origin,
    long expiryTime,
    String remark,
    int userId,
    long lastModifyTime,
    long createTime,
    int enabled,
    Set<Integer> idSet,
    double totalStart,
    double totalEnd,
    double balanceStart,
    double balanceEnd,
    long expiryTimeStart,
    long expiryTimeEnd,
    Set<Integer> userIdSet,
    long lastModifyTimeStart,
    long lastModifyTimeEnd,
    long createTimeStart,
    long createTimeEnd,
    Set<Integer> originSet)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.code = code;
    this.total = total;
    setTotalIsSet(true);
    this.balance = balance;
    setBalanceIsSet(true);
    this.origin = origin;
    setOriginIsSet(true);
    this.expiryTime = expiryTime;
    setExpiryTimeIsSet(true);
    this.remark = remark;
    this.userId = userId;
    setUserIdIsSet(true);
    this.lastModifyTime = lastModifyTime;
    setLastModifyTimeIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.enabled = enabled;
    setEnabledIsSet(true);
    this.idSet = idSet;
    this.totalStart = totalStart;
    setTotalStartIsSet(true);
    this.totalEnd = totalEnd;
    setTotalEndIsSet(true);
    this.balanceStart = balanceStart;
    setBalanceStartIsSet(true);
    this.balanceEnd = balanceEnd;
    setBalanceEndIsSet(true);
    this.expiryTimeStart = expiryTimeStart;
    setExpiryTimeStartIsSet(true);
    this.expiryTimeEnd = expiryTimeEnd;
    setExpiryTimeEndIsSet(true);
    this.userIdSet = userIdSet;
    this.lastModifyTimeStart = lastModifyTimeStart;
    setLastModifyTimeStartIsSet(true);
    this.lastModifyTimeEnd = lastModifyTimeEnd;
    setLastModifyTimeEndIsSet(true);
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
    this.originSet = originSet;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CouponBo(CouponBo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetCode()) {
      this.code = other.code;
    }
    this.total = other.total;
    this.balance = other.balance;
    this.origin = other.origin;
    this.expiryTime = other.expiryTime;
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
    this.userId = other.userId;
    this.lastModifyTime = other.lastModifyTime;
    this.createTime = other.createTime;
    this.enabled = other.enabled;
    if (other.isSetIdSet()) {
      Set<Integer> __this__idSet = new HashSet<Integer>(other.idSet);
      this.idSet = __this__idSet;
    }
    this.totalStart = other.totalStart;
    this.totalEnd = other.totalEnd;
    this.balanceStart = other.balanceStart;
    this.balanceEnd = other.balanceEnd;
    this.expiryTimeStart = other.expiryTimeStart;
    this.expiryTimeEnd = other.expiryTimeEnd;
    if (other.isSetUserIdSet()) {
      Set<Integer> __this__userIdSet = new HashSet<Integer>(other.userIdSet);
      this.userIdSet = __this__userIdSet;
    }
    this.lastModifyTimeStart = other.lastModifyTimeStart;
    this.lastModifyTimeEnd = other.lastModifyTimeEnd;
    this.createTimeStart = other.createTimeStart;
    this.createTimeEnd = other.createTimeEnd;
    if (other.isSetOriginSet()) {
      Set<Integer> __this__originSet = new HashSet<Integer>(other.originSet);
      this.originSet = __this__originSet;
    }
  }

  public CouponBo deepCopy() {
    return new CouponBo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.code = null;
    setTotalIsSet(false);
    this.total = 0.0;
    setBalanceIsSet(false);
    this.balance = 0.0;
    setOriginIsSet(false);
    this.origin = 0;
    setExpiryTimeIsSet(false);
    this.expiryTime = 0;
    this.remark = null;
    setUserIdIsSet(false);
    this.userId = 0;
    setLastModifyTimeIsSet(false);
    this.lastModifyTime = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setEnabledIsSet(false);
    this.enabled = 0;
    this.idSet = null;
    setTotalStartIsSet(false);
    this.totalStart = 0.0;
    setTotalEndIsSet(false);
    this.totalEnd = 0.0;
    setBalanceStartIsSet(false);
    this.balanceStart = 0.0;
    setBalanceEndIsSet(false);
    this.balanceEnd = 0.0;
    setExpiryTimeStartIsSet(false);
    this.expiryTimeStart = 0;
    setExpiryTimeEndIsSet(false);
    this.expiryTimeEnd = 0;
    this.userIdSet = null;
    setLastModifyTimeStartIsSet(false);
    this.lastModifyTimeStart = 0;
    setLastModifyTimeEndIsSet(false);
    this.lastModifyTimeEnd = 0;
    setCreateTimeStartIsSet(false);
    this.createTimeStart = 0;
    setCreateTimeEndIsSet(false);
    this.createTimeEnd = 0;
    this.originSet = null;
  }

  public int getId() {
    return this.id;
  }

  public CouponBo setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getCode() {
    return this.code;
  }

  public CouponBo setCode(String code) {
    this.code = code;
    return this;
  }

  public void unsetCode() {
    this.code = null;
  }

  /** Returns true if field code is set (has been assigned a value) and false otherwise */
  public boolean isSetCode() {
    return this.code != null;
  }

  public void setCodeIsSet(boolean value) {
    if (!value) {
      this.code = null;
    }
  }

  public double getTotal() {
    return this.total;
  }

  public CouponBo setTotal(double total) {
    this.total = total;
    setTotalIsSet(true);
    return this;
  }

  public void unsetTotal() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTAL_ISSET_ID);
  }

  /** Returns true if field total is set (has been assigned a value) and false otherwise */
  public boolean isSetTotal() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTAL_ISSET_ID);
  }

  public void setTotalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTAL_ISSET_ID, value);
  }

  public double getBalance() {
    return this.balance;
  }

  public CouponBo setBalance(double balance) {
    this.balance = balance;
    setBalanceIsSet(true);
    return this;
  }

  public void unsetBalance() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BALANCE_ISSET_ID);
  }

  /** Returns true if field balance is set (has been assigned a value) and false otherwise */
  public boolean isSetBalance() {
    return EncodingUtils.testBit(__isset_bitfield, __BALANCE_ISSET_ID);
  }

  public void setBalanceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BALANCE_ISSET_ID, value);
  }

  public int getOrigin() {
    return this.origin;
  }

  public CouponBo setOrigin(int origin) {
    this.origin = origin;
    setOriginIsSet(true);
    return this;
  }

  public void unsetOrigin() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORIGIN_ISSET_ID);
  }

  /** Returns true if field origin is set (has been assigned a value) and false otherwise */
  public boolean isSetOrigin() {
    return EncodingUtils.testBit(__isset_bitfield, __ORIGIN_ISSET_ID);
  }

  public void setOriginIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORIGIN_ISSET_ID, value);
  }

  public long getExpiryTime() {
    return this.expiryTime;
  }

  public CouponBo setExpiryTime(long expiryTime) {
    this.expiryTime = expiryTime;
    setExpiryTimeIsSet(true);
    return this;
  }

  public void unsetExpiryTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXPIRYTIME_ISSET_ID);
  }

  /** Returns true if field expiryTime is set (has been assigned a value) and false otherwise */
  public boolean isSetExpiryTime() {
    return EncodingUtils.testBit(__isset_bitfield, __EXPIRYTIME_ISSET_ID);
  }

  public void setExpiryTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXPIRYTIME_ISSET_ID, value);
  }

  public String getRemark() {
    return this.remark;
  }

  public CouponBo setRemark(String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  public int getUserId() {
    return this.userId;
  }

  public CouponBo setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  public long getLastModifyTime() {
    return this.lastModifyTime;
  }

  public CouponBo setLastModifyTime(long lastModifyTime) {
    this.lastModifyTime = lastModifyTime;
    setLastModifyTimeIsSet(true);
    return this;
  }

  public void unsetLastModifyTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID);
  }

  /** Returns true if field lastModifyTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTime() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID);
  }

  public void setLastModifyTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public CouponBo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public int getEnabled() {
    return this.enabled;
  }

  public CouponBo setEnabled(int enabled) {
    this.enabled = enabled;
    setEnabledIsSet(true);
    return this;
  }

  public void unsetEnabled() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENABLED_ISSET_ID);
  }

  /** Returns true if field enabled is set (has been assigned a value) and false otherwise */
  public boolean isSetEnabled() {
    return EncodingUtils.testBit(__isset_bitfield, __ENABLED_ISSET_ID);
  }

  public void setEnabledIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENABLED_ISSET_ID, value);
  }

  public int getIdSetSize() {
    return (this.idSet == null) ? 0 : this.idSet.size();
  }

  public java.util.Iterator<Integer> getIdSetIterator() {
    return (this.idSet == null) ? null : this.idSet.iterator();
  }

  public void addToIdSet(int elem) {
    if (this.idSet == null) {
      this.idSet = new HashSet<Integer>();
    }
    this.idSet.add(elem);
  }

  public Set<Integer> getIdSet() {
    return this.idSet;
  }

  public CouponBo setIdSet(Set<Integer> idSet) {
    this.idSet = idSet;
    return this;
  }

  public void unsetIdSet() {
    this.idSet = null;
  }

  /** Returns true if field idSet is set (has been assigned a value) and false otherwise */
  public boolean isSetIdSet() {
    return this.idSet != null;
  }

  public void setIdSetIsSet(boolean value) {
    if (!value) {
      this.idSet = null;
    }
  }

  public double getTotalStart() {
    return this.totalStart;
  }

  public CouponBo setTotalStart(double totalStart) {
    this.totalStart = totalStart;
    setTotalStartIsSet(true);
    return this;
  }

  public void unsetTotalStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALSTART_ISSET_ID);
  }

  /** Returns true if field totalStart is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalStart() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALSTART_ISSET_ID);
  }

  public void setTotalStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALSTART_ISSET_ID, value);
  }

  public double getTotalEnd() {
    return this.totalEnd;
  }

  public CouponBo setTotalEnd(double totalEnd) {
    this.totalEnd = totalEnd;
    setTotalEndIsSet(true);
    return this;
  }

  public void unsetTotalEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALEND_ISSET_ID);
  }

  /** Returns true if field totalEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALEND_ISSET_ID);
  }

  public void setTotalEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALEND_ISSET_ID, value);
  }

  public double getBalanceStart() {
    return this.balanceStart;
  }

  public CouponBo setBalanceStart(double balanceStart) {
    this.balanceStart = balanceStart;
    setBalanceStartIsSet(true);
    return this;
  }

  public void unsetBalanceStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BALANCESTART_ISSET_ID);
  }

  /** Returns true if field balanceStart is set (has been assigned a value) and false otherwise */
  public boolean isSetBalanceStart() {
    return EncodingUtils.testBit(__isset_bitfield, __BALANCESTART_ISSET_ID);
  }

  public void setBalanceStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BALANCESTART_ISSET_ID, value);
  }

  public double getBalanceEnd() {
    return this.balanceEnd;
  }

  public CouponBo setBalanceEnd(double balanceEnd) {
    this.balanceEnd = balanceEnd;
    setBalanceEndIsSet(true);
    return this;
  }

  public void unsetBalanceEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BALANCEEND_ISSET_ID);
  }

  /** Returns true if field balanceEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetBalanceEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __BALANCEEND_ISSET_ID);
  }

  public void setBalanceEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BALANCEEND_ISSET_ID, value);
  }

  public long getExpiryTimeStart() {
    return this.expiryTimeStart;
  }

  public CouponBo setExpiryTimeStart(long expiryTimeStart) {
    this.expiryTimeStart = expiryTimeStart;
    setExpiryTimeStartIsSet(true);
    return this;
  }

  public void unsetExpiryTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXPIRYTIMESTART_ISSET_ID);
  }

  /** Returns true if field expiryTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetExpiryTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __EXPIRYTIMESTART_ISSET_ID);
  }

  public void setExpiryTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXPIRYTIMESTART_ISSET_ID, value);
  }

  public long getExpiryTimeEnd() {
    return this.expiryTimeEnd;
  }

  public CouponBo setExpiryTimeEnd(long expiryTimeEnd) {
    this.expiryTimeEnd = expiryTimeEnd;
    setExpiryTimeEndIsSet(true);
    return this;
  }

  public void unsetExpiryTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXPIRYTIMEEND_ISSET_ID);
  }

  /** Returns true if field expiryTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetExpiryTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __EXPIRYTIMEEND_ISSET_ID);
  }

  public void setExpiryTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXPIRYTIMEEND_ISSET_ID, value);
  }

  public int getUserIdSetSize() {
    return (this.userIdSet == null) ? 0 : this.userIdSet.size();
  }

  public java.util.Iterator<Integer> getUserIdSetIterator() {
    return (this.userIdSet == null) ? null : this.userIdSet.iterator();
  }

  public void addToUserIdSet(int elem) {
    if (this.userIdSet == null) {
      this.userIdSet = new HashSet<Integer>();
    }
    this.userIdSet.add(elem);
  }

  public Set<Integer> getUserIdSet() {
    return this.userIdSet;
  }

  public CouponBo setUserIdSet(Set<Integer> userIdSet) {
    this.userIdSet = userIdSet;
    return this;
  }

  public void unsetUserIdSet() {
    this.userIdSet = null;
  }

  /** Returns true if field userIdSet is set (has been assigned a value) and false otherwise */
  public boolean isSetUserIdSet() {
    return this.userIdSet != null;
  }

  public void setUserIdSetIsSet(boolean value) {
    if (!value) {
      this.userIdSet = null;
    }
  }

  public long getLastModifyTimeStart() {
    return this.lastModifyTimeStart;
  }

  public CouponBo setLastModifyTimeStart(long lastModifyTimeStart) {
    this.lastModifyTimeStart = lastModifyTimeStart;
    setLastModifyTimeStartIsSet(true);
    return this;
  }

  public void unsetLastModifyTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID);
  }

  /** Returns true if field lastModifyTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID);
  }

  public void setLastModifyTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID, value);
  }

  public long getLastModifyTimeEnd() {
    return this.lastModifyTimeEnd;
  }

  public CouponBo setLastModifyTimeEnd(long lastModifyTimeEnd) {
    this.lastModifyTimeEnd = lastModifyTimeEnd;
    setLastModifyTimeEndIsSet(true);
    return this;
  }

  public void unsetLastModifyTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID);
  }

  /** Returns true if field lastModifyTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID);
  }

  public void setLastModifyTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID, value);
  }

  public long getCreateTimeStart() {
    return this.createTimeStart;
  }

  public CouponBo setCreateTimeStart(long createTimeStart) {
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    return this;
  }

  public void unsetCreateTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  /** Returns true if field createTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  public void setCreateTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID, value);
  }

  public long getCreateTimeEnd() {
    return this.createTimeEnd;
  }

  public CouponBo setCreateTimeEnd(long createTimeEnd) {
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
    return this;
  }

  public void unsetCreateTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  /** Returns true if field createTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  public void setCreateTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID, value);
  }

  public int getOriginSetSize() {
    return (this.originSet == null) ? 0 : this.originSet.size();
  }

  public java.util.Iterator<Integer> getOriginSetIterator() {
    return (this.originSet == null) ? null : this.originSet.iterator();
  }

  public void addToOriginSet(int elem) {
    if (this.originSet == null) {
      this.originSet = new HashSet<Integer>();
    }
    this.originSet.add(elem);
  }

  public Set<Integer> getOriginSet() {
    return this.originSet;
  }

  public CouponBo setOriginSet(Set<Integer> originSet) {
    this.originSet = originSet;
    return this;
  }

  public void unsetOriginSet() {
    this.originSet = null;
  }

  /** Returns true if field originSet is set (has been assigned a value) and false otherwise */
  public boolean isSetOriginSet() {
    return this.originSet != null;
  }

  public void setOriginSetIsSet(boolean value) {
    if (!value) {
      this.originSet = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case CODE:
      if (value == null) {
        unsetCode();
      } else {
        setCode((String)value);
      }
      break;

    case TOTAL:
      if (value == null) {
        unsetTotal();
      } else {
        setTotal((Double)value);
      }
      break;

    case BALANCE:
      if (value == null) {
        unsetBalance();
      } else {
        setBalance((Double)value);
      }
      break;

    case ORIGIN:
      if (value == null) {
        unsetOrigin();
      } else {
        setOrigin((Integer)value);
      }
      break;

    case EXPIRY_TIME:
      if (value == null) {
        unsetExpiryTime();
      } else {
        setExpiryTime((Long)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((String)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;

    case LAST_MODIFY_TIME:
      if (value == null) {
        unsetLastModifyTime();
      } else {
        setLastModifyTime((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case ENABLED:
      if (value == null) {
        unsetEnabled();
      } else {
        setEnabled((Integer)value);
      }
      break;

    case ID_SET:
      if (value == null) {
        unsetIdSet();
      } else {
        setIdSet((Set<Integer>)value);
      }
      break;

    case TOTAL_START:
      if (value == null) {
        unsetTotalStart();
      } else {
        setTotalStart((Double)value);
      }
      break;

    case TOTAL_END:
      if (value == null) {
        unsetTotalEnd();
      } else {
        setTotalEnd((Double)value);
      }
      break;

    case BALANCE_START:
      if (value == null) {
        unsetBalanceStart();
      } else {
        setBalanceStart((Double)value);
      }
      break;

    case BALANCE_END:
      if (value == null) {
        unsetBalanceEnd();
      } else {
        setBalanceEnd((Double)value);
      }
      break;

    case EXPIRY_TIME_START:
      if (value == null) {
        unsetExpiryTimeStart();
      } else {
        setExpiryTimeStart((Long)value);
      }
      break;

    case EXPIRY_TIME_END:
      if (value == null) {
        unsetExpiryTimeEnd();
      } else {
        setExpiryTimeEnd((Long)value);
      }
      break;

    case USER_ID_SET:
      if (value == null) {
        unsetUserIdSet();
      } else {
        setUserIdSet((Set<Integer>)value);
      }
      break;

    case LAST_MODIFY_TIME_START:
      if (value == null) {
        unsetLastModifyTimeStart();
      } else {
        setLastModifyTimeStart((Long)value);
      }
      break;

    case LAST_MODIFY_TIME_END:
      if (value == null) {
        unsetLastModifyTimeEnd();
      } else {
        setLastModifyTimeEnd((Long)value);
      }
      break;

    case CREATE_TIME_START:
      if (value == null) {
        unsetCreateTimeStart();
      } else {
        setCreateTimeStart((Long)value);
      }
      break;

    case CREATE_TIME_END:
      if (value == null) {
        unsetCreateTimeEnd();
      } else {
        setCreateTimeEnd((Long)value);
      }
      break;

    case ORIGIN_SET:
      if (value == null) {
        unsetOriginSet();
      } else {
        setOriginSet((Set<Integer>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Integer.valueOf(getId());

    case CODE:
      return getCode();

    case TOTAL:
      return Double.valueOf(getTotal());

    case BALANCE:
      return Double.valueOf(getBalance());

    case ORIGIN:
      return Integer.valueOf(getOrigin());

    case EXPIRY_TIME:
      return Long.valueOf(getExpiryTime());

    case REMARK:
      return getRemark();

    case USER_ID:
      return Integer.valueOf(getUserId());

    case LAST_MODIFY_TIME:
      return Long.valueOf(getLastModifyTime());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case ENABLED:
      return Integer.valueOf(getEnabled());

    case ID_SET:
      return getIdSet();

    case TOTAL_START:
      return Double.valueOf(getTotalStart());

    case TOTAL_END:
      return Double.valueOf(getTotalEnd());

    case BALANCE_START:
      return Double.valueOf(getBalanceStart());

    case BALANCE_END:
      return Double.valueOf(getBalanceEnd());

    case EXPIRY_TIME_START:
      return Long.valueOf(getExpiryTimeStart());

    case EXPIRY_TIME_END:
      return Long.valueOf(getExpiryTimeEnd());

    case USER_ID_SET:
      return getUserIdSet();

    case LAST_MODIFY_TIME_START:
      return Long.valueOf(getLastModifyTimeStart());

    case LAST_MODIFY_TIME_END:
      return Long.valueOf(getLastModifyTimeEnd());

    case CREATE_TIME_START:
      return Long.valueOf(getCreateTimeStart());

    case CREATE_TIME_END:
      return Long.valueOf(getCreateTimeEnd());

    case ORIGIN_SET:
      return getOriginSet();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CODE:
      return isSetCode();
    case TOTAL:
      return isSetTotal();
    case BALANCE:
      return isSetBalance();
    case ORIGIN:
      return isSetOrigin();
    case EXPIRY_TIME:
      return isSetExpiryTime();
    case REMARK:
      return isSetRemark();
    case USER_ID:
      return isSetUserId();
    case LAST_MODIFY_TIME:
      return isSetLastModifyTime();
    case CREATE_TIME:
      return isSetCreateTime();
    case ENABLED:
      return isSetEnabled();
    case ID_SET:
      return isSetIdSet();
    case TOTAL_START:
      return isSetTotalStart();
    case TOTAL_END:
      return isSetTotalEnd();
    case BALANCE_START:
      return isSetBalanceStart();
    case BALANCE_END:
      return isSetBalanceEnd();
    case EXPIRY_TIME_START:
      return isSetExpiryTimeStart();
    case EXPIRY_TIME_END:
      return isSetExpiryTimeEnd();
    case USER_ID_SET:
      return isSetUserIdSet();
    case LAST_MODIFY_TIME_START:
      return isSetLastModifyTimeStart();
    case LAST_MODIFY_TIME_END:
      return isSetLastModifyTimeEnd();
    case CREATE_TIME_START:
      return isSetCreateTimeStart();
    case CREATE_TIME_END:
      return isSetCreateTimeEnd();
    case ORIGIN_SET:
      return isSetOriginSet();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CouponBo)
      return this.equals((CouponBo)that);
    return false;
  }

  public boolean equals(CouponBo that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_code = true && this.isSetCode();
    boolean that_present_code = true && that.isSetCode();
    if (this_present_code || that_present_code) {
      if (!(this_present_code && that_present_code))
        return false;
      if (!this.code.equals(that.code))
        return false;
    }

    boolean this_present_total = true;
    boolean that_present_total = true;
    if (this_present_total || that_present_total) {
      if (!(this_present_total && that_present_total))
        return false;
      if (this.total != that.total)
        return false;
    }

    boolean this_present_balance = true;
    boolean that_present_balance = true;
    if (this_present_balance || that_present_balance) {
      if (!(this_present_balance && that_present_balance))
        return false;
      if (this.balance != that.balance)
        return false;
    }

    boolean this_present_origin = true;
    boolean that_present_origin = true;
    if (this_present_origin || that_present_origin) {
      if (!(this_present_origin && that_present_origin))
        return false;
      if (this.origin != that.origin)
        return false;
    }

    boolean this_present_expiryTime = true;
    boolean that_present_expiryTime = true;
    if (this_present_expiryTime || that_present_expiryTime) {
      if (!(this_present_expiryTime && that_present_expiryTime))
        return false;
      if (this.expiryTime != that.expiryTime)
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_lastModifyTime = true;
    boolean that_present_lastModifyTime = true;
    if (this_present_lastModifyTime || that_present_lastModifyTime) {
      if (!(this_present_lastModifyTime && that_present_lastModifyTime))
        return false;
      if (this.lastModifyTime != that.lastModifyTime)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_enabled = true;
    boolean that_present_enabled = true;
    if (this_present_enabled || that_present_enabled) {
      if (!(this_present_enabled && that_present_enabled))
        return false;
      if (this.enabled != that.enabled)
        return false;
    }

    boolean this_present_idSet = true && this.isSetIdSet();
    boolean that_present_idSet = true && that.isSetIdSet();
    if (this_present_idSet || that_present_idSet) {
      if (!(this_present_idSet && that_present_idSet))
        return false;
      if (!this.idSet.equals(that.idSet))
        return false;
    }

    boolean this_present_totalStart = true;
    boolean that_present_totalStart = true;
    if (this_present_totalStart || that_present_totalStart) {
      if (!(this_present_totalStart && that_present_totalStart))
        return false;
      if (this.totalStart != that.totalStart)
        return false;
    }

    boolean this_present_totalEnd = true;
    boolean that_present_totalEnd = true;
    if (this_present_totalEnd || that_present_totalEnd) {
      if (!(this_present_totalEnd && that_present_totalEnd))
        return false;
      if (this.totalEnd != that.totalEnd)
        return false;
    }

    boolean this_present_balanceStart = true;
    boolean that_present_balanceStart = true;
    if (this_present_balanceStart || that_present_balanceStart) {
      if (!(this_present_balanceStart && that_present_balanceStart))
        return false;
      if (this.balanceStart != that.balanceStart)
        return false;
    }

    boolean this_present_balanceEnd = true;
    boolean that_present_balanceEnd = true;
    if (this_present_balanceEnd || that_present_balanceEnd) {
      if (!(this_present_balanceEnd && that_present_balanceEnd))
        return false;
      if (this.balanceEnd != that.balanceEnd)
        return false;
    }

    boolean this_present_expiryTimeStart = true;
    boolean that_present_expiryTimeStart = true;
    if (this_present_expiryTimeStart || that_present_expiryTimeStart) {
      if (!(this_present_expiryTimeStart && that_present_expiryTimeStart))
        return false;
      if (this.expiryTimeStart != that.expiryTimeStart)
        return false;
    }

    boolean this_present_expiryTimeEnd = true;
    boolean that_present_expiryTimeEnd = true;
    if (this_present_expiryTimeEnd || that_present_expiryTimeEnd) {
      if (!(this_present_expiryTimeEnd && that_present_expiryTimeEnd))
        return false;
      if (this.expiryTimeEnd != that.expiryTimeEnd)
        return false;
    }

    boolean this_present_userIdSet = true && this.isSetUserIdSet();
    boolean that_present_userIdSet = true && that.isSetUserIdSet();
    if (this_present_userIdSet || that_present_userIdSet) {
      if (!(this_present_userIdSet && that_present_userIdSet))
        return false;
      if (!this.userIdSet.equals(that.userIdSet))
        return false;
    }

    boolean this_present_lastModifyTimeStart = true;
    boolean that_present_lastModifyTimeStart = true;
    if (this_present_lastModifyTimeStart || that_present_lastModifyTimeStart) {
      if (!(this_present_lastModifyTimeStart && that_present_lastModifyTimeStart))
        return false;
      if (this.lastModifyTimeStart != that.lastModifyTimeStart)
        return false;
    }

    boolean this_present_lastModifyTimeEnd = true;
    boolean that_present_lastModifyTimeEnd = true;
    if (this_present_lastModifyTimeEnd || that_present_lastModifyTimeEnd) {
      if (!(this_present_lastModifyTimeEnd && that_present_lastModifyTimeEnd))
        return false;
      if (this.lastModifyTimeEnd != that.lastModifyTimeEnd)
        return false;
    }

    boolean this_present_createTimeStart = true;
    boolean that_present_createTimeStart = true;
    if (this_present_createTimeStart || that_present_createTimeStart) {
      if (!(this_present_createTimeStart && that_present_createTimeStart))
        return false;
      if (this.createTimeStart != that.createTimeStart)
        return false;
    }

    boolean this_present_createTimeEnd = true;
    boolean that_present_createTimeEnd = true;
    if (this_present_createTimeEnd || that_present_createTimeEnd) {
      if (!(this_present_createTimeEnd && that_present_createTimeEnd))
        return false;
      if (this.createTimeEnd != that.createTimeEnd)
        return false;
    }

    boolean this_present_originSet = true && this.isSetOriginSet();
    boolean that_present_originSet = true && that.isSetOriginSet();
    if (this_present_originSet || that_present_originSet) {
      if (!(this_present_originSet && that_present_originSet))
        return false;
      if (!this.originSet.equals(that.originSet))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_id = true;
    builder.append(present_id);
    if (present_id)
      builder.append(id);

    boolean present_code = true && (isSetCode());
    builder.append(present_code);
    if (present_code)
      builder.append(code);

    boolean present_total = true;
    builder.append(present_total);
    if (present_total)
      builder.append(total);

    boolean present_balance = true;
    builder.append(present_balance);
    if (present_balance)
      builder.append(balance);

    boolean present_origin = true;
    builder.append(present_origin);
    if (present_origin)
      builder.append(origin);

    boolean present_expiryTime = true;
    builder.append(present_expiryTime);
    if (present_expiryTime)
      builder.append(expiryTime);

    boolean present_remark = true && (isSetRemark());
    builder.append(present_remark);
    if (present_remark)
      builder.append(remark);

    boolean present_userId = true;
    builder.append(present_userId);
    if (present_userId)
      builder.append(userId);

    boolean present_lastModifyTime = true;
    builder.append(present_lastModifyTime);
    if (present_lastModifyTime)
      builder.append(lastModifyTime);

    boolean present_createTime = true;
    builder.append(present_createTime);
    if (present_createTime)
      builder.append(createTime);

    boolean present_enabled = true;
    builder.append(present_enabled);
    if (present_enabled)
      builder.append(enabled);

    boolean present_idSet = true && (isSetIdSet());
    builder.append(present_idSet);
    if (present_idSet)
      builder.append(idSet);

    boolean present_totalStart = true;
    builder.append(present_totalStart);
    if (present_totalStart)
      builder.append(totalStart);

    boolean present_totalEnd = true;
    builder.append(present_totalEnd);
    if (present_totalEnd)
      builder.append(totalEnd);

    boolean present_balanceStart = true;
    builder.append(present_balanceStart);
    if (present_balanceStart)
      builder.append(balanceStart);

    boolean present_balanceEnd = true;
    builder.append(present_balanceEnd);
    if (present_balanceEnd)
      builder.append(balanceEnd);

    boolean present_expiryTimeStart = true;
    builder.append(present_expiryTimeStart);
    if (present_expiryTimeStart)
      builder.append(expiryTimeStart);

    boolean present_expiryTimeEnd = true;
    builder.append(present_expiryTimeEnd);
    if (present_expiryTimeEnd)
      builder.append(expiryTimeEnd);

    boolean present_userIdSet = true && (isSetUserIdSet());
    builder.append(present_userIdSet);
    if (present_userIdSet)
      builder.append(userIdSet);

    boolean present_lastModifyTimeStart = true;
    builder.append(present_lastModifyTimeStart);
    if (present_lastModifyTimeStart)
      builder.append(lastModifyTimeStart);

    boolean present_lastModifyTimeEnd = true;
    builder.append(present_lastModifyTimeEnd);
    if (present_lastModifyTimeEnd)
      builder.append(lastModifyTimeEnd);

    boolean present_createTimeStart = true;
    builder.append(present_createTimeStart);
    if (present_createTimeStart)
      builder.append(createTimeStart);

    boolean present_createTimeEnd = true;
    builder.append(present_createTimeEnd);
    if (present_createTimeEnd)
      builder.append(createTimeEnd);

    boolean present_originSet = true && (isSetOriginSet());
    builder.append(present_originSet);
    if (present_originSet)
      builder.append(originSet);

    return builder.toHashCode();
  }

  @Override
  public int compareTo(CouponBo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCode()).compareTo(other.isSetCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.code, other.code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotal()).compareTo(other.isSetTotal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.total, other.total);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBalance()).compareTo(other.isSetBalance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBalance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.balance, other.balance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrigin()).compareTo(other.isSetOrigin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrigin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.origin, other.origin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpiryTime()).compareTo(other.isSetExpiryTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpiryTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expiryTime, other.expiryTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTime()).compareTo(other.isSetLastModifyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTime, other.lastModifyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEnabled()).compareTo(other.isSetEnabled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnabled()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enabled, other.enabled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdSet()).compareTo(other.isSetIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idSet, other.idSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalStart()).compareTo(other.isSetTotalStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalStart, other.totalStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalEnd()).compareTo(other.isSetTotalEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalEnd, other.totalEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBalanceStart()).compareTo(other.isSetBalanceStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBalanceStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.balanceStart, other.balanceStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBalanceEnd()).compareTo(other.isSetBalanceEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBalanceEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.balanceEnd, other.balanceEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpiryTimeStart()).compareTo(other.isSetExpiryTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpiryTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expiryTimeStart, other.expiryTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpiryTimeEnd()).compareTo(other.isSetExpiryTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpiryTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expiryTimeEnd, other.expiryTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserIdSet()).compareTo(other.isSetUserIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userIdSet, other.userIdSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimeStart()).compareTo(other.isSetLastModifyTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimeStart, other.lastModifyTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimeEnd()).compareTo(other.isSetLastModifyTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimeEnd, other.lastModifyTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeStart()).compareTo(other.isSetCreateTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeStart, other.createTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeEnd()).compareTo(other.isSetCreateTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeEnd, other.createTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOriginSet()).compareTo(other.isSetOriginSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOriginSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.originSet, other.originSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CouponBo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("code:");
    if (this.code == null) {
      sb.append("null");
    } else {
      sb.append(this.code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("total:");
    sb.append(this.total);
    first = false;
    if (!first) sb.append(", ");
    sb.append("balance:");
    sb.append(this.balance);
    first = false;
    if (!first) sb.append(", ");
    sb.append("origin:");
    sb.append(this.origin);
    first = false;
    if (!first) sb.append(", ");
    sb.append("expiryTime:");
    sb.append(this.expiryTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("remark:");
    if (this.remark == null) {
      sb.append("null");
    } else {
      sb.append(this.remark);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTime:");
    sb.append(this.lastModifyTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("enabled:");
    sb.append(this.enabled);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idSet:");
    if (this.idSet == null) {
      sb.append("null");
    } else {
      sb.append(this.idSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalStart:");
    sb.append(this.totalStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalEnd:");
    sb.append(this.totalEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("balanceStart:");
    sb.append(this.balanceStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("balanceEnd:");
    sb.append(this.balanceEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("expiryTimeStart:");
    sb.append(this.expiryTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("expiryTimeEnd:");
    sb.append(this.expiryTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userIdSet:");
    if (this.userIdSet == null) {
      sb.append("null");
    } else {
      sb.append(this.userIdSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTimeStart:");
    sb.append(this.lastModifyTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTimeEnd:");
    sb.append(this.lastModifyTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeStart:");
    sb.append(this.createTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeEnd:");
    sb.append(this.createTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("originSet:");
    if (this.originSet == null) {
      sb.append("null");
    } else {
      sb.append(this.originSet);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CouponBoStandardSchemeFactory implements SchemeFactory {
    public CouponBoStandardScheme getScheme() {
      return new CouponBoStandardScheme();
    }
  }

  private static class CouponBoStandardScheme extends StandardScheme<CouponBo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CouponBo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.code = iprot.readString();
              struct.setCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TOTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.total = iprot.readDouble();
              struct.setTotalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BALANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.balance = iprot.readDouble();
              struct.setBalanceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ORIGIN
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.origin = iprot.readI32();
              struct.setOriginIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // EXPIRY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.expiryTime = iprot.readI64();
              struct.setExpiryTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // LAST_MODIFY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTime = iprot.readI64();
              struct.setLastModifyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ENABLED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.enabled = iprot.readI32();
              struct.setEnabledIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set0 = iprot.readSetBegin();
                struct.idSet = new HashSet<Integer>(2*_set0.size);
                for (int _i1 = 0; _i1 < _set0.size; ++_i1)
                {
                  int _elem2;
                  _elem2 = iprot.readI32();
                  struct.idSet.add(_elem2);
                }
                iprot.readSetEnd();
              }
              struct.setIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // TOTAL_START
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalStart = iprot.readDouble();
              struct.setTotalStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // TOTAL_END
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalEnd = iprot.readDouble();
              struct.setTotalEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // BALANCE_START
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.balanceStart = iprot.readDouble();
              struct.setBalanceStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // BALANCE_END
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.balanceEnd = iprot.readDouble();
              struct.setBalanceEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // EXPIRY_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.expiryTimeStart = iprot.readI64();
              struct.setExpiryTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // EXPIRY_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.expiryTimeEnd = iprot.readI64();
              struct.setExpiryTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // USER_ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set3 = iprot.readSetBegin();
                struct.userIdSet = new HashSet<Integer>(2*_set3.size);
                for (int _i4 = 0; _i4 < _set3.size; ++_i4)
                {
                  int _elem5;
                  _elem5 = iprot.readI32();
                  struct.userIdSet.add(_elem5);
                }
                iprot.readSetEnd();
              }
              struct.setUserIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // LAST_MODIFY_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimeStart = iprot.readI64();
              struct.setLastModifyTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // LAST_MODIFY_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimeEnd = iprot.readI64();
              struct.setLastModifyTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // CREATE_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeStart = iprot.readI64();
              struct.setCreateTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // CREATE_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeEnd = iprot.readI64();
              struct.setCreateTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // ORIGIN_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set6 = iprot.readSetBegin();
                struct.originSet = new HashSet<Integer>(2*_set6.size);
                for (int _i7 = 0; _i7 < _set6.size; ++_i7)
                {
                  int _elem8;
                  _elem8 = iprot.readI32();
                  struct.originSet.add(_elem8);
                }
                iprot.readSetEnd();
              }
              struct.setOriginSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CouponBo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      if (struct.code != null) {
        oprot.writeFieldBegin(CODE_FIELD_DESC);
        oprot.writeString(struct.code);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_FIELD_DESC);
      oprot.writeDouble(struct.total);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BALANCE_FIELD_DESC);
      oprot.writeDouble(struct.balance);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORIGIN_FIELD_DESC);
      oprot.writeI32(struct.origin);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXPIRY_TIME_FIELD_DESC);
      oprot.writeI64(struct.expiryTime);
      oprot.writeFieldEnd();
      if (struct.remark != null) {
        oprot.writeFieldBegin(REMARK_FIELD_DESC);
        oprot.writeString(struct.remark);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI32(struct.userId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ENABLED_FIELD_DESC);
      oprot.writeI32(struct.enabled);
      oprot.writeFieldEnd();
      if (struct.idSet != null) {
        oprot.writeFieldBegin(ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.idSet.size()));
          for (int _iter9 : struct.idSet)
          {
            oprot.writeI32(_iter9);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_START_FIELD_DESC);
      oprot.writeDouble(struct.totalStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_END_FIELD_DESC);
      oprot.writeDouble(struct.totalEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BALANCE_START_FIELD_DESC);
      oprot.writeDouble(struct.balanceStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BALANCE_END_FIELD_DESC);
      oprot.writeDouble(struct.balanceEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXPIRY_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.expiryTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXPIRY_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.expiryTimeEnd);
      oprot.writeFieldEnd();
      if (struct.userIdSet != null) {
        oprot.writeFieldBegin(USER_ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.userIdSet.size()));
          for (int _iter10 : struct.userIdSet)
          {
            oprot.writeI32(_iter10);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LAST_MODIFY_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.createTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.createTimeEnd);
      oprot.writeFieldEnd();
      if (struct.originSet != null) {
        oprot.writeFieldBegin(ORIGIN_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.originSet.size()));
          for (int _iter11 : struct.originSet)
          {
            oprot.writeI32(_iter11);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CouponBoTupleSchemeFactory implements SchemeFactory {
    public CouponBoTupleScheme getScheme() {
      return new CouponBoTupleScheme();
    }
  }

  private static class CouponBoTupleScheme extends TupleScheme<CouponBo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CouponBo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetCode()) {
        optionals.set(1);
      }
      if (struct.isSetTotal()) {
        optionals.set(2);
      }
      if (struct.isSetBalance()) {
        optionals.set(3);
      }
      if (struct.isSetOrigin()) {
        optionals.set(4);
      }
      if (struct.isSetExpiryTime()) {
        optionals.set(5);
      }
      if (struct.isSetRemark()) {
        optionals.set(6);
      }
      if (struct.isSetUserId()) {
        optionals.set(7);
      }
      if (struct.isSetLastModifyTime()) {
        optionals.set(8);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(9);
      }
      if (struct.isSetEnabled()) {
        optionals.set(10);
      }
      if (struct.isSetIdSet()) {
        optionals.set(11);
      }
      if (struct.isSetTotalStart()) {
        optionals.set(12);
      }
      if (struct.isSetTotalEnd()) {
        optionals.set(13);
      }
      if (struct.isSetBalanceStart()) {
        optionals.set(14);
      }
      if (struct.isSetBalanceEnd()) {
        optionals.set(15);
      }
      if (struct.isSetExpiryTimeStart()) {
        optionals.set(16);
      }
      if (struct.isSetExpiryTimeEnd()) {
        optionals.set(17);
      }
      if (struct.isSetUserIdSet()) {
        optionals.set(18);
      }
      if (struct.isSetLastModifyTimeStart()) {
        optionals.set(19);
      }
      if (struct.isSetLastModifyTimeEnd()) {
        optionals.set(20);
      }
      if (struct.isSetCreateTimeStart()) {
        optionals.set(21);
      }
      if (struct.isSetCreateTimeEnd()) {
        optionals.set(22);
      }
      if (struct.isSetOriginSet()) {
        optionals.set(23);
      }
      oprot.writeBitSet(optionals, 24);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetCode()) {
        oprot.writeString(struct.code);
      }
      if (struct.isSetTotal()) {
        oprot.writeDouble(struct.total);
      }
      if (struct.isSetBalance()) {
        oprot.writeDouble(struct.balance);
      }
      if (struct.isSetOrigin()) {
        oprot.writeI32(struct.origin);
      }
      if (struct.isSetExpiryTime()) {
        oprot.writeI64(struct.expiryTime);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
      if (struct.isSetLastModifyTime()) {
        oprot.writeI64(struct.lastModifyTime);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetEnabled()) {
        oprot.writeI32(struct.enabled);
      }
      if (struct.isSetIdSet()) {
        {
          oprot.writeI32(struct.idSet.size());
          for (int _iter12 : struct.idSet)
          {
            oprot.writeI32(_iter12);
          }
        }
      }
      if (struct.isSetTotalStart()) {
        oprot.writeDouble(struct.totalStart);
      }
      if (struct.isSetTotalEnd()) {
        oprot.writeDouble(struct.totalEnd);
      }
      if (struct.isSetBalanceStart()) {
        oprot.writeDouble(struct.balanceStart);
      }
      if (struct.isSetBalanceEnd()) {
        oprot.writeDouble(struct.balanceEnd);
      }
      if (struct.isSetExpiryTimeStart()) {
        oprot.writeI64(struct.expiryTimeStart);
      }
      if (struct.isSetExpiryTimeEnd()) {
        oprot.writeI64(struct.expiryTimeEnd);
      }
      if (struct.isSetUserIdSet()) {
        {
          oprot.writeI32(struct.userIdSet.size());
          for (int _iter13 : struct.userIdSet)
          {
            oprot.writeI32(_iter13);
          }
        }
      }
      if (struct.isSetLastModifyTimeStart()) {
        oprot.writeI64(struct.lastModifyTimeStart);
      }
      if (struct.isSetLastModifyTimeEnd()) {
        oprot.writeI64(struct.lastModifyTimeEnd);
      }
      if (struct.isSetCreateTimeStart()) {
        oprot.writeI64(struct.createTimeStart);
      }
      if (struct.isSetCreateTimeEnd()) {
        oprot.writeI64(struct.createTimeEnd);
      }
      if (struct.isSetOriginSet()) {
        {
          oprot.writeI32(struct.originSet.size());
          for (int _iter14 : struct.originSet)
          {
            oprot.writeI32(_iter14);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CouponBo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(24);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.code = iprot.readString();
        struct.setCodeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.total = iprot.readDouble();
        struct.setTotalIsSet(true);
      }
      if (incoming.get(3)) {
        struct.balance = iprot.readDouble();
        struct.setBalanceIsSet(true);
      }
      if (incoming.get(4)) {
        struct.origin = iprot.readI32();
        struct.setOriginIsSet(true);
      }
      if (incoming.get(5)) {
        struct.expiryTime = iprot.readI64();
        struct.setExpiryTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
      if (incoming.get(7)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.lastModifyTime = iprot.readI64();
        struct.setLastModifyTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.enabled = iprot.readI32();
        struct.setEnabledIsSet(true);
      }
      if (incoming.get(11)) {
        {
          org.apache.thrift.protocol.TSet _set15 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.idSet = new HashSet<Integer>(2*_set15.size);
          for (int _i16 = 0; _i16 < _set15.size; ++_i16)
          {
            int _elem17;
            _elem17 = iprot.readI32();
            struct.idSet.add(_elem17);
          }
        }
        struct.setIdSetIsSet(true);
      }
      if (incoming.get(12)) {
        struct.totalStart = iprot.readDouble();
        struct.setTotalStartIsSet(true);
      }
      if (incoming.get(13)) {
        struct.totalEnd = iprot.readDouble();
        struct.setTotalEndIsSet(true);
      }
      if (incoming.get(14)) {
        struct.balanceStart = iprot.readDouble();
        struct.setBalanceStartIsSet(true);
      }
      if (incoming.get(15)) {
        struct.balanceEnd = iprot.readDouble();
        struct.setBalanceEndIsSet(true);
      }
      if (incoming.get(16)) {
        struct.expiryTimeStart = iprot.readI64();
        struct.setExpiryTimeStartIsSet(true);
      }
      if (incoming.get(17)) {
        struct.expiryTimeEnd = iprot.readI64();
        struct.setExpiryTimeEndIsSet(true);
      }
      if (incoming.get(18)) {
        {
          org.apache.thrift.protocol.TSet _set18 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.userIdSet = new HashSet<Integer>(2*_set18.size);
          for (int _i19 = 0; _i19 < _set18.size; ++_i19)
          {
            int _elem20;
            _elem20 = iprot.readI32();
            struct.userIdSet.add(_elem20);
          }
        }
        struct.setUserIdSetIsSet(true);
      }
      if (incoming.get(19)) {
        struct.lastModifyTimeStart = iprot.readI64();
        struct.setLastModifyTimeStartIsSet(true);
      }
      if (incoming.get(20)) {
        struct.lastModifyTimeEnd = iprot.readI64();
        struct.setLastModifyTimeEndIsSet(true);
      }
      if (incoming.get(21)) {
        struct.createTimeStart = iprot.readI64();
        struct.setCreateTimeStartIsSet(true);
      }
      if (incoming.get(22)) {
        struct.createTimeEnd = iprot.readI64();
        struct.setCreateTimeEndIsSet(true);
      }
      if (incoming.get(23)) {
        {
          org.apache.thrift.protocol.TSet _set21 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.originSet = new HashSet<Integer>(2*_set21.size);
          for (int _i22 = 0; _i22 < _set21.size; ++_i22)
          {
            int _elem23;
            _elem23 = iprot.readI32();
            struct.originSet.add(_elem23);
          }
        }
        struct.setOriginSetIsSet(true);
      }
    }
  }

}

