/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ishangke.edunav.commoncontract.model;

import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CourseCommentBo implements org.apache.thrift.TBase<CourseCommentBo, CourseCommentBo._Fields>, java.io.Serializable, Cloneable, Comparable<CourseCommentBo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CourseCommentBo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField COURSE_TEMPLATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("courseTemplateId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("content", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField TOTAL_RATING_FIELD_DESC = new org.apache.thrift.protocol.TField("totalRating", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField CONDITION_RATING_FIELD_DESC = new org.apache.thrift.protocol.TField("conditionRating", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField ATTITUDE_RATING_FIELD_DESC = new org.apache.thrift.protocol.TField("attitudeRating", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField SATISFACTION_RATING_FIELD_DESC = new org.apache.thrift.protocol.TField("satisfactionRating", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTime", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField ENABLED_FIELD_DESC = new org.apache.thrift.protocol.TField("enabled", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("idSet", org.apache.thrift.protocol.TType.SET, (short)13);
  private static final org.apache.thrift.protocol.TField USER_ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("userIdSet", org.apache.thrift.protocol.TType.SET, (short)14);
  private static final org.apache.thrift.protocol.TField COURSE_TEMPLATE_ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("courseTemplateIdSet", org.apache.thrift.protocol.TType.SET, (short)15);
  private static final org.apache.thrift.protocol.TField TOTAL_RATING_START_FIELD_DESC = new org.apache.thrift.protocol.TField("totalRatingStart", org.apache.thrift.protocol.TType.DOUBLE, (short)16);
  private static final org.apache.thrift.protocol.TField TOTAL_RATING_END_FIELD_DESC = new org.apache.thrift.protocol.TField("totalRatingEnd", org.apache.thrift.protocol.TType.DOUBLE, (short)17);
  private static final org.apache.thrift.protocol.TField CONDITION_RATING_START_FIELD_DESC = new org.apache.thrift.protocol.TField("conditionRatingStart", org.apache.thrift.protocol.TType.DOUBLE, (short)18);
  private static final org.apache.thrift.protocol.TField CONDITION_RATING_END_FIELD_DESC = new org.apache.thrift.protocol.TField("conditionRatingEnd", org.apache.thrift.protocol.TType.DOUBLE, (short)19);
  private static final org.apache.thrift.protocol.TField ATTITUDE_RATING_START_FIELD_DESC = new org.apache.thrift.protocol.TField("attitudeRatingStart", org.apache.thrift.protocol.TType.DOUBLE, (short)20);
  private static final org.apache.thrift.protocol.TField ATTITUDE_RATING_END_FIELD_DESC = new org.apache.thrift.protocol.TField("attitudeRatingEnd", org.apache.thrift.protocol.TType.DOUBLE, (short)21);
  private static final org.apache.thrift.protocol.TField SATISFACTION_RATING_START_FIELD_DESC = new org.apache.thrift.protocol.TField("satisfactionRatingStart", org.apache.thrift.protocol.TType.DOUBLE, (short)22);
  private static final org.apache.thrift.protocol.TField SATISFACTION_RATING_END_FIELD_DESC = new org.apache.thrift.protocol.TField("satisfactionRatingEnd", org.apache.thrift.protocol.TType.DOUBLE, (short)23);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimeStart", org.apache.thrift.protocol.TType.I64, (short)24);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimeEnd", org.apache.thrift.protocol.TType.I64, (short)25);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeStart", org.apache.thrift.protocol.TType.I64, (short)26);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeEnd", org.apache.thrift.protocol.TType.I64, (short)27);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CourseCommentBoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CourseCommentBoTupleSchemeFactory());
  }

  public int id; // required
  public int userId; // required
  public int courseTemplateId; // required
  public String title; // required
  public String content; // required
  public double totalRating; // required
  public double conditionRating; // required
  public double attitudeRating; // required
  public double satisfactionRating; // required
  public long lastModifyTime; // required
  public long createTime; // required
  public int enabled; // required
  public Set<Integer> idSet; // required
  public Set<Integer> userIdSet; // required
  public Set<Integer> courseTemplateIdSet; // required
  public double totalRatingStart; // required
  public double totalRatingEnd; // required
  public double conditionRatingStart; // required
  public double conditionRatingEnd; // required
  public double attitudeRatingStart; // required
  public double attitudeRatingEnd; // required
  public double satisfactionRatingStart; // required
  public double satisfactionRatingEnd; // required
  public long lastModifyTimeStart; // required
  public long lastModifyTimeEnd; // required
  public long createTimeStart; // required
  public long createTimeEnd; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    USER_ID((short)2, "userId"),
    COURSE_TEMPLATE_ID((short)3, "courseTemplateId"),
    TITLE((short)4, "title"),
    CONTENT((short)5, "content"),
    TOTAL_RATING((short)6, "totalRating"),
    CONDITION_RATING((short)7, "conditionRating"),
    ATTITUDE_RATING((short)8, "attitudeRating"),
    SATISFACTION_RATING((short)9, "satisfactionRating"),
    LAST_MODIFY_TIME((short)10, "lastModifyTime"),
    CREATE_TIME((short)11, "createTime"),
    ENABLED((short)12, "enabled"),
    ID_SET((short)13, "idSet"),
    USER_ID_SET((short)14, "userIdSet"),
    COURSE_TEMPLATE_ID_SET((short)15, "courseTemplateIdSet"),
    TOTAL_RATING_START((short)16, "totalRatingStart"),
    TOTAL_RATING_END((short)17, "totalRatingEnd"),
    CONDITION_RATING_START((short)18, "conditionRatingStart"),
    CONDITION_RATING_END((short)19, "conditionRatingEnd"),
    ATTITUDE_RATING_START((short)20, "attitudeRatingStart"),
    ATTITUDE_RATING_END((short)21, "attitudeRatingEnd"),
    SATISFACTION_RATING_START((short)22, "satisfactionRatingStart"),
    SATISFACTION_RATING_END((short)23, "satisfactionRatingEnd"),
    LAST_MODIFY_TIME_START((short)24, "lastModifyTimeStart"),
    LAST_MODIFY_TIME_END((short)25, "lastModifyTimeEnd"),
    CREATE_TIME_START((short)26, "createTimeStart"),
    CREATE_TIME_END((short)27, "createTimeEnd");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // USER_ID
          return USER_ID;
        case 3: // COURSE_TEMPLATE_ID
          return COURSE_TEMPLATE_ID;
        case 4: // TITLE
          return TITLE;
        case 5: // CONTENT
          return CONTENT;
        case 6: // TOTAL_RATING
          return TOTAL_RATING;
        case 7: // CONDITION_RATING
          return CONDITION_RATING;
        case 8: // ATTITUDE_RATING
          return ATTITUDE_RATING;
        case 9: // SATISFACTION_RATING
          return SATISFACTION_RATING;
        case 10: // LAST_MODIFY_TIME
          return LAST_MODIFY_TIME;
        case 11: // CREATE_TIME
          return CREATE_TIME;
        case 12: // ENABLED
          return ENABLED;
        case 13: // ID_SET
          return ID_SET;
        case 14: // USER_ID_SET
          return USER_ID_SET;
        case 15: // COURSE_TEMPLATE_ID_SET
          return COURSE_TEMPLATE_ID_SET;
        case 16: // TOTAL_RATING_START
          return TOTAL_RATING_START;
        case 17: // TOTAL_RATING_END
          return TOTAL_RATING_END;
        case 18: // CONDITION_RATING_START
          return CONDITION_RATING_START;
        case 19: // CONDITION_RATING_END
          return CONDITION_RATING_END;
        case 20: // ATTITUDE_RATING_START
          return ATTITUDE_RATING_START;
        case 21: // ATTITUDE_RATING_END
          return ATTITUDE_RATING_END;
        case 22: // SATISFACTION_RATING_START
          return SATISFACTION_RATING_START;
        case 23: // SATISFACTION_RATING_END
          return SATISFACTION_RATING_END;
        case 24: // LAST_MODIFY_TIME_START
          return LAST_MODIFY_TIME_START;
        case 25: // LAST_MODIFY_TIME_END
          return LAST_MODIFY_TIME_END;
        case 26: // CREATE_TIME_START
          return CREATE_TIME_START;
        case 27: // CREATE_TIME_END
          return CREATE_TIME_END;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __USERID_ISSET_ID = 1;
  private static final int __COURSETEMPLATEID_ISSET_ID = 2;
  private static final int __TOTALRATING_ISSET_ID = 3;
  private static final int __CONDITIONRATING_ISSET_ID = 4;
  private static final int __ATTITUDERATING_ISSET_ID = 5;
  private static final int __SATISFACTIONRATING_ISSET_ID = 6;
  private static final int __LASTMODIFYTIME_ISSET_ID = 7;
  private static final int __CREATETIME_ISSET_ID = 8;
  private static final int __ENABLED_ISSET_ID = 9;
  private static final int __TOTALRATINGSTART_ISSET_ID = 10;
  private static final int __TOTALRATINGEND_ISSET_ID = 11;
  private static final int __CONDITIONRATINGSTART_ISSET_ID = 12;
  private static final int __CONDITIONRATINGEND_ISSET_ID = 13;
  private static final int __ATTITUDERATINGSTART_ISSET_ID = 14;
  private static final int __ATTITUDERATINGEND_ISSET_ID = 15;
  private static final int __SATISFACTIONRATINGSTART_ISSET_ID = 16;
  private static final int __SATISFACTIONRATINGEND_ISSET_ID = 17;
  private static final int __LASTMODIFYTIMESTART_ISSET_ID = 18;
  private static final int __LASTMODIFYTIMEEND_ISSET_ID = 19;
  private static final int __CREATETIMESTART_ISSET_ID = 20;
  private static final int __CREATETIMEEND_ISSET_ID = 21;
  private int __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COURSE_TEMPLATE_ID, new org.apache.thrift.meta_data.FieldMetaData("courseTemplateId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTENT, new org.apache.thrift.meta_data.FieldMetaData("content", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL_RATING, new org.apache.thrift.meta_data.FieldMetaData("totalRating", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CONDITION_RATING, new org.apache.thrift.meta_data.FieldMetaData("conditionRating", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ATTITUDE_RATING, new org.apache.thrift.meta_data.FieldMetaData("attitudeRating", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SATISFACTION_RATING, new org.apache.thrift.meta_data.FieldMetaData("satisfactionRating", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ENABLED, new org.apache.thrift.meta_data.FieldMetaData("enabled", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_SET, new org.apache.thrift.meta_data.FieldMetaData("idSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.USER_ID_SET, new org.apache.thrift.meta_data.FieldMetaData("userIdSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.COURSE_TEMPLATE_ID_SET, new org.apache.thrift.meta_data.FieldMetaData("courseTemplateIdSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.TOTAL_RATING_START, new org.apache.thrift.meta_data.FieldMetaData("totalRatingStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TOTAL_RATING_END, new org.apache.thrift.meta_data.FieldMetaData("totalRatingEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CONDITION_RATING_START, new org.apache.thrift.meta_data.FieldMetaData("conditionRatingStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CONDITION_RATING_END, new org.apache.thrift.meta_data.FieldMetaData("conditionRatingEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ATTITUDE_RATING_START, new org.apache.thrift.meta_data.FieldMetaData("attitudeRatingStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ATTITUDE_RATING_END, new org.apache.thrift.meta_data.FieldMetaData("attitudeRatingEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SATISFACTION_RATING_START, new org.apache.thrift.meta_data.FieldMetaData("satisfactionRatingStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SATISFACTION_RATING_END, new org.apache.thrift.meta_data.FieldMetaData("satisfactionRatingEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("createTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("createTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CourseCommentBo.class, metaDataMap);
  }

  public CourseCommentBo() {
  }

  public CourseCommentBo(
    int id,
    int userId,
    int courseTemplateId,
    String title,
    String content,
    double totalRating,
    double conditionRating,
    double attitudeRating,
    double satisfactionRating,
    long lastModifyTime,
    long createTime,
    int enabled,
    Set<Integer> idSet,
    Set<Integer> userIdSet,
    Set<Integer> courseTemplateIdSet,
    double totalRatingStart,
    double totalRatingEnd,
    double conditionRatingStart,
    double conditionRatingEnd,
    double attitudeRatingStart,
    double attitudeRatingEnd,
    double satisfactionRatingStart,
    double satisfactionRatingEnd,
    long lastModifyTimeStart,
    long lastModifyTimeEnd,
    long createTimeStart,
    long createTimeEnd)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.userId = userId;
    setUserIdIsSet(true);
    this.courseTemplateId = courseTemplateId;
    setCourseTemplateIdIsSet(true);
    this.title = title;
    this.content = content;
    this.totalRating = totalRating;
    setTotalRatingIsSet(true);
    this.conditionRating = conditionRating;
    setConditionRatingIsSet(true);
    this.attitudeRating = attitudeRating;
    setAttitudeRatingIsSet(true);
    this.satisfactionRating = satisfactionRating;
    setSatisfactionRatingIsSet(true);
    this.lastModifyTime = lastModifyTime;
    setLastModifyTimeIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.enabled = enabled;
    setEnabledIsSet(true);
    this.idSet = idSet;
    this.userIdSet = userIdSet;
    this.courseTemplateIdSet = courseTemplateIdSet;
    this.totalRatingStart = totalRatingStart;
    setTotalRatingStartIsSet(true);
    this.totalRatingEnd = totalRatingEnd;
    setTotalRatingEndIsSet(true);
    this.conditionRatingStart = conditionRatingStart;
    setConditionRatingStartIsSet(true);
    this.conditionRatingEnd = conditionRatingEnd;
    setConditionRatingEndIsSet(true);
    this.attitudeRatingStart = attitudeRatingStart;
    setAttitudeRatingStartIsSet(true);
    this.attitudeRatingEnd = attitudeRatingEnd;
    setAttitudeRatingEndIsSet(true);
    this.satisfactionRatingStart = satisfactionRatingStart;
    setSatisfactionRatingStartIsSet(true);
    this.satisfactionRatingEnd = satisfactionRatingEnd;
    setSatisfactionRatingEndIsSet(true);
    this.lastModifyTimeStart = lastModifyTimeStart;
    setLastModifyTimeStartIsSet(true);
    this.lastModifyTimeEnd = lastModifyTimeEnd;
    setLastModifyTimeEndIsSet(true);
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CourseCommentBo(CourseCommentBo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.userId = other.userId;
    this.courseTemplateId = other.courseTemplateId;
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetContent()) {
      this.content = other.content;
    }
    this.totalRating = other.totalRating;
    this.conditionRating = other.conditionRating;
    this.attitudeRating = other.attitudeRating;
    this.satisfactionRating = other.satisfactionRating;
    this.lastModifyTime = other.lastModifyTime;
    this.createTime = other.createTime;
    this.enabled = other.enabled;
    if (other.isSetIdSet()) {
      Set<Integer> __this__idSet = new HashSet<Integer>(other.idSet);
      this.idSet = __this__idSet;
    }
    if (other.isSetUserIdSet()) {
      Set<Integer> __this__userIdSet = new HashSet<Integer>(other.userIdSet);
      this.userIdSet = __this__userIdSet;
    }
    if (other.isSetCourseTemplateIdSet()) {
      Set<Integer> __this__courseTemplateIdSet = new HashSet<Integer>(other.courseTemplateIdSet);
      this.courseTemplateIdSet = __this__courseTemplateIdSet;
    }
    this.totalRatingStart = other.totalRatingStart;
    this.totalRatingEnd = other.totalRatingEnd;
    this.conditionRatingStart = other.conditionRatingStart;
    this.conditionRatingEnd = other.conditionRatingEnd;
    this.attitudeRatingStart = other.attitudeRatingStart;
    this.attitudeRatingEnd = other.attitudeRatingEnd;
    this.satisfactionRatingStart = other.satisfactionRatingStart;
    this.satisfactionRatingEnd = other.satisfactionRatingEnd;
    this.lastModifyTimeStart = other.lastModifyTimeStart;
    this.lastModifyTimeEnd = other.lastModifyTimeEnd;
    this.createTimeStart = other.createTimeStart;
    this.createTimeEnd = other.createTimeEnd;
  }

  public CourseCommentBo deepCopy() {
    return new CourseCommentBo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setUserIdIsSet(false);
    this.userId = 0;
    setCourseTemplateIdIsSet(false);
    this.courseTemplateId = 0;
    this.title = null;
    this.content = null;
    setTotalRatingIsSet(false);
    this.totalRating = 0.0;
    setConditionRatingIsSet(false);
    this.conditionRating = 0.0;
    setAttitudeRatingIsSet(false);
    this.attitudeRating = 0.0;
    setSatisfactionRatingIsSet(false);
    this.satisfactionRating = 0.0;
    setLastModifyTimeIsSet(false);
    this.lastModifyTime = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setEnabledIsSet(false);
    this.enabled = 0;
    this.idSet = null;
    this.userIdSet = null;
    this.courseTemplateIdSet = null;
    setTotalRatingStartIsSet(false);
    this.totalRatingStart = 0.0;
    setTotalRatingEndIsSet(false);
    this.totalRatingEnd = 0.0;
    setConditionRatingStartIsSet(false);
    this.conditionRatingStart = 0.0;
    setConditionRatingEndIsSet(false);
    this.conditionRatingEnd = 0.0;
    setAttitudeRatingStartIsSet(false);
    this.attitudeRatingStart = 0.0;
    setAttitudeRatingEndIsSet(false);
    this.attitudeRatingEnd = 0.0;
    setSatisfactionRatingStartIsSet(false);
    this.satisfactionRatingStart = 0.0;
    setSatisfactionRatingEndIsSet(false);
    this.satisfactionRatingEnd = 0.0;
    setLastModifyTimeStartIsSet(false);
    this.lastModifyTimeStart = 0;
    setLastModifyTimeEndIsSet(false);
    this.lastModifyTimeEnd = 0;
    setCreateTimeStartIsSet(false);
    this.createTimeStart = 0;
    setCreateTimeEndIsSet(false);
    this.createTimeEnd = 0;
  }

  public int getId() {
    return this.id;
  }

  public CourseCommentBo setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getUserId() {
    return this.userId;
  }

  public CourseCommentBo setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  public int getCourseTemplateId() {
    return this.courseTemplateId;
  }

  public CourseCommentBo setCourseTemplateId(int courseTemplateId) {
    this.courseTemplateId = courseTemplateId;
    setCourseTemplateIdIsSet(true);
    return this;
  }

  public void unsetCourseTemplateId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COURSETEMPLATEID_ISSET_ID);
  }

  /** Returns true if field courseTemplateId is set (has been assigned a value) and false otherwise */
  public boolean isSetCourseTemplateId() {
    return EncodingUtils.testBit(__isset_bitfield, __COURSETEMPLATEID_ISSET_ID);
  }

  public void setCourseTemplateIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COURSETEMPLATEID_ISSET_ID, value);
  }

  public String getTitle() {
    return this.title;
  }

  public CourseCommentBo setTitle(String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public String getContent() {
    return this.content;
  }

  public CourseCommentBo setContent(String content) {
    this.content = content;
    return this;
  }

  public void unsetContent() {
    this.content = null;
  }

  /** Returns true if field content is set (has been assigned a value) and false otherwise */
  public boolean isSetContent() {
    return this.content != null;
  }

  public void setContentIsSet(boolean value) {
    if (!value) {
      this.content = null;
    }
  }

  public double getTotalRating() {
    return this.totalRating;
  }

  public CourseCommentBo setTotalRating(double totalRating) {
    this.totalRating = totalRating;
    setTotalRatingIsSet(true);
    return this;
  }

  public void unsetTotalRating() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALRATING_ISSET_ID);
  }

  /** Returns true if field totalRating is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalRating() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALRATING_ISSET_ID);
  }

  public void setTotalRatingIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALRATING_ISSET_ID, value);
  }

  public double getConditionRating() {
    return this.conditionRating;
  }

  public CourseCommentBo setConditionRating(double conditionRating) {
    this.conditionRating = conditionRating;
    setConditionRatingIsSet(true);
    return this;
  }

  public void unsetConditionRating() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONDITIONRATING_ISSET_ID);
  }

  /** Returns true if field conditionRating is set (has been assigned a value) and false otherwise */
  public boolean isSetConditionRating() {
    return EncodingUtils.testBit(__isset_bitfield, __CONDITIONRATING_ISSET_ID);
  }

  public void setConditionRatingIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONDITIONRATING_ISSET_ID, value);
  }

  public double getAttitudeRating() {
    return this.attitudeRating;
  }

  public CourseCommentBo setAttitudeRating(double attitudeRating) {
    this.attitudeRating = attitudeRating;
    setAttitudeRatingIsSet(true);
    return this;
  }

  public void unsetAttitudeRating() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATTITUDERATING_ISSET_ID);
  }

  /** Returns true if field attitudeRating is set (has been assigned a value) and false otherwise */
  public boolean isSetAttitudeRating() {
    return EncodingUtils.testBit(__isset_bitfield, __ATTITUDERATING_ISSET_ID);
  }

  public void setAttitudeRatingIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATTITUDERATING_ISSET_ID, value);
  }

  public double getSatisfactionRating() {
    return this.satisfactionRating;
  }

  public CourseCommentBo setSatisfactionRating(double satisfactionRating) {
    this.satisfactionRating = satisfactionRating;
    setSatisfactionRatingIsSet(true);
    return this;
  }

  public void unsetSatisfactionRating() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SATISFACTIONRATING_ISSET_ID);
  }

  /** Returns true if field satisfactionRating is set (has been assigned a value) and false otherwise */
  public boolean isSetSatisfactionRating() {
    return EncodingUtils.testBit(__isset_bitfield, __SATISFACTIONRATING_ISSET_ID);
  }

  public void setSatisfactionRatingIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SATISFACTIONRATING_ISSET_ID, value);
  }

  public long getLastModifyTime() {
    return this.lastModifyTime;
  }

  public CourseCommentBo setLastModifyTime(long lastModifyTime) {
    this.lastModifyTime = lastModifyTime;
    setLastModifyTimeIsSet(true);
    return this;
  }

  public void unsetLastModifyTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID);
  }

  /** Returns true if field lastModifyTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTime() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID);
  }

  public void setLastModifyTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public CourseCommentBo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public int getEnabled() {
    return this.enabled;
  }

  public CourseCommentBo setEnabled(int enabled) {
    this.enabled = enabled;
    setEnabledIsSet(true);
    return this;
  }

  public void unsetEnabled() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENABLED_ISSET_ID);
  }

  /** Returns true if field enabled is set (has been assigned a value) and false otherwise */
  public boolean isSetEnabled() {
    return EncodingUtils.testBit(__isset_bitfield, __ENABLED_ISSET_ID);
  }

  public void setEnabledIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENABLED_ISSET_ID, value);
  }

  public int getIdSetSize() {
    return (this.idSet == null) ? 0 : this.idSet.size();
  }

  public java.util.Iterator<Integer> getIdSetIterator() {
    return (this.idSet == null) ? null : this.idSet.iterator();
  }

  public void addToIdSet(int elem) {
    if (this.idSet == null) {
      this.idSet = new HashSet<Integer>();
    }
    this.idSet.add(elem);
  }

  public Set<Integer> getIdSet() {
    return this.idSet;
  }

  public CourseCommentBo setIdSet(Set<Integer> idSet) {
    this.idSet = idSet;
    return this;
  }

  public void unsetIdSet() {
    this.idSet = null;
  }

  /** Returns true if field idSet is set (has been assigned a value) and false otherwise */
  public boolean isSetIdSet() {
    return this.idSet != null;
  }

  public void setIdSetIsSet(boolean value) {
    if (!value) {
      this.idSet = null;
    }
  }

  public int getUserIdSetSize() {
    return (this.userIdSet == null) ? 0 : this.userIdSet.size();
  }

  public java.util.Iterator<Integer> getUserIdSetIterator() {
    return (this.userIdSet == null) ? null : this.userIdSet.iterator();
  }

  public void addToUserIdSet(int elem) {
    if (this.userIdSet == null) {
      this.userIdSet = new HashSet<Integer>();
    }
    this.userIdSet.add(elem);
  }

  public Set<Integer> getUserIdSet() {
    return this.userIdSet;
  }

  public CourseCommentBo setUserIdSet(Set<Integer> userIdSet) {
    this.userIdSet = userIdSet;
    return this;
  }

  public void unsetUserIdSet() {
    this.userIdSet = null;
  }

  /** Returns true if field userIdSet is set (has been assigned a value) and false otherwise */
  public boolean isSetUserIdSet() {
    return this.userIdSet != null;
  }

  public void setUserIdSetIsSet(boolean value) {
    if (!value) {
      this.userIdSet = null;
    }
  }

  public int getCourseTemplateIdSetSize() {
    return (this.courseTemplateIdSet == null) ? 0 : this.courseTemplateIdSet.size();
  }

  public java.util.Iterator<Integer> getCourseTemplateIdSetIterator() {
    return (this.courseTemplateIdSet == null) ? null : this.courseTemplateIdSet.iterator();
  }

  public void addToCourseTemplateIdSet(int elem) {
    if (this.courseTemplateIdSet == null) {
      this.courseTemplateIdSet = new HashSet<Integer>();
    }
    this.courseTemplateIdSet.add(elem);
  }

  public Set<Integer> getCourseTemplateIdSet() {
    return this.courseTemplateIdSet;
  }

  public CourseCommentBo setCourseTemplateIdSet(Set<Integer> courseTemplateIdSet) {
    this.courseTemplateIdSet = courseTemplateIdSet;
    return this;
  }

  public void unsetCourseTemplateIdSet() {
    this.courseTemplateIdSet = null;
  }

  /** Returns true if field courseTemplateIdSet is set (has been assigned a value) and false otherwise */
  public boolean isSetCourseTemplateIdSet() {
    return this.courseTemplateIdSet != null;
  }

  public void setCourseTemplateIdSetIsSet(boolean value) {
    if (!value) {
      this.courseTemplateIdSet = null;
    }
  }

  public double getTotalRatingStart() {
    return this.totalRatingStart;
  }

  public CourseCommentBo setTotalRatingStart(double totalRatingStart) {
    this.totalRatingStart = totalRatingStart;
    setTotalRatingStartIsSet(true);
    return this;
  }

  public void unsetTotalRatingStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALRATINGSTART_ISSET_ID);
  }

  /** Returns true if field totalRatingStart is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalRatingStart() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALRATINGSTART_ISSET_ID);
  }

  public void setTotalRatingStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALRATINGSTART_ISSET_ID, value);
  }

  public double getTotalRatingEnd() {
    return this.totalRatingEnd;
  }

  public CourseCommentBo setTotalRatingEnd(double totalRatingEnd) {
    this.totalRatingEnd = totalRatingEnd;
    setTotalRatingEndIsSet(true);
    return this;
  }

  public void unsetTotalRatingEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALRATINGEND_ISSET_ID);
  }

  /** Returns true if field totalRatingEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalRatingEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALRATINGEND_ISSET_ID);
  }

  public void setTotalRatingEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALRATINGEND_ISSET_ID, value);
  }

  public double getConditionRatingStart() {
    return this.conditionRatingStart;
  }

  public CourseCommentBo setConditionRatingStart(double conditionRatingStart) {
    this.conditionRatingStart = conditionRatingStart;
    setConditionRatingStartIsSet(true);
    return this;
  }

  public void unsetConditionRatingStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONDITIONRATINGSTART_ISSET_ID);
  }

  /** Returns true if field conditionRatingStart is set (has been assigned a value) and false otherwise */
  public boolean isSetConditionRatingStart() {
    return EncodingUtils.testBit(__isset_bitfield, __CONDITIONRATINGSTART_ISSET_ID);
  }

  public void setConditionRatingStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONDITIONRATINGSTART_ISSET_ID, value);
  }

  public double getConditionRatingEnd() {
    return this.conditionRatingEnd;
  }

  public CourseCommentBo setConditionRatingEnd(double conditionRatingEnd) {
    this.conditionRatingEnd = conditionRatingEnd;
    setConditionRatingEndIsSet(true);
    return this;
  }

  public void unsetConditionRatingEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONDITIONRATINGEND_ISSET_ID);
  }

  /** Returns true if field conditionRatingEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetConditionRatingEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __CONDITIONRATINGEND_ISSET_ID);
  }

  public void setConditionRatingEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONDITIONRATINGEND_ISSET_ID, value);
  }

  public double getAttitudeRatingStart() {
    return this.attitudeRatingStart;
  }

  public CourseCommentBo setAttitudeRatingStart(double attitudeRatingStart) {
    this.attitudeRatingStart = attitudeRatingStart;
    setAttitudeRatingStartIsSet(true);
    return this;
  }

  public void unsetAttitudeRatingStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATTITUDERATINGSTART_ISSET_ID);
  }

  /** Returns true if field attitudeRatingStart is set (has been assigned a value) and false otherwise */
  public boolean isSetAttitudeRatingStart() {
    return EncodingUtils.testBit(__isset_bitfield, __ATTITUDERATINGSTART_ISSET_ID);
  }

  public void setAttitudeRatingStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATTITUDERATINGSTART_ISSET_ID, value);
  }

  public double getAttitudeRatingEnd() {
    return this.attitudeRatingEnd;
  }

  public CourseCommentBo setAttitudeRatingEnd(double attitudeRatingEnd) {
    this.attitudeRatingEnd = attitudeRatingEnd;
    setAttitudeRatingEndIsSet(true);
    return this;
  }

  public void unsetAttitudeRatingEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATTITUDERATINGEND_ISSET_ID);
  }

  /** Returns true if field attitudeRatingEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetAttitudeRatingEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __ATTITUDERATINGEND_ISSET_ID);
  }

  public void setAttitudeRatingEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATTITUDERATINGEND_ISSET_ID, value);
  }

  public double getSatisfactionRatingStart() {
    return this.satisfactionRatingStart;
  }

  public CourseCommentBo setSatisfactionRatingStart(double satisfactionRatingStart) {
    this.satisfactionRatingStart = satisfactionRatingStart;
    setSatisfactionRatingStartIsSet(true);
    return this;
  }

  public void unsetSatisfactionRatingStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SATISFACTIONRATINGSTART_ISSET_ID);
  }

  /** Returns true if field satisfactionRatingStart is set (has been assigned a value) and false otherwise */
  public boolean isSetSatisfactionRatingStart() {
    return EncodingUtils.testBit(__isset_bitfield, __SATISFACTIONRATINGSTART_ISSET_ID);
  }

  public void setSatisfactionRatingStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SATISFACTIONRATINGSTART_ISSET_ID, value);
  }

  public double getSatisfactionRatingEnd() {
    return this.satisfactionRatingEnd;
  }

  public CourseCommentBo setSatisfactionRatingEnd(double satisfactionRatingEnd) {
    this.satisfactionRatingEnd = satisfactionRatingEnd;
    setSatisfactionRatingEndIsSet(true);
    return this;
  }

  public void unsetSatisfactionRatingEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SATISFACTIONRATINGEND_ISSET_ID);
  }

  /** Returns true if field satisfactionRatingEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetSatisfactionRatingEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __SATISFACTIONRATINGEND_ISSET_ID);
  }

  public void setSatisfactionRatingEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SATISFACTIONRATINGEND_ISSET_ID, value);
  }

  public long getLastModifyTimeStart() {
    return this.lastModifyTimeStart;
  }

  public CourseCommentBo setLastModifyTimeStart(long lastModifyTimeStart) {
    this.lastModifyTimeStart = lastModifyTimeStart;
    setLastModifyTimeStartIsSet(true);
    return this;
  }

  public void unsetLastModifyTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID);
  }

  /** Returns true if field lastModifyTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID);
  }

  public void setLastModifyTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID, value);
  }

  public long getLastModifyTimeEnd() {
    return this.lastModifyTimeEnd;
  }

  public CourseCommentBo setLastModifyTimeEnd(long lastModifyTimeEnd) {
    this.lastModifyTimeEnd = lastModifyTimeEnd;
    setLastModifyTimeEndIsSet(true);
    return this;
  }

  public void unsetLastModifyTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID);
  }

  /** Returns true if field lastModifyTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID);
  }

  public void setLastModifyTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID, value);
  }

  public long getCreateTimeStart() {
    return this.createTimeStart;
  }

  public CourseCommentBo setCreateTimeStart(long createTimeStart) {
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    return this;
  }

  public void unsetCreateTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  /** Returns true if field createTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  public void setCreateTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID, value);
  }

  public long getCreateTimeEnd() {
    return this.createTimeEnd;
  }

  public CourseCommentBo setCreateTimeEnd(long createTimeEnd) {
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
    return this;
  }

  public void unsetCreateTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  /** Returns true if field createTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  public void setCreateTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;

    case COURSE_TEMPLATE_ID:
      if (value == null) {
        unsetCourseTemplateId();
      } else {
        setCourseTemplateId((Integer)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((String)value);
      }
      break;

    case CONTENT:
      if (value == null) {
        unsetContent();
      } else {
        setContent((String)value);
      }
      break;

    case TOTAL_RATING:
      if (value == null) {
        unsetTotalRating();
      } else {
        setTotalRating((Double)value);
      }
      break;

    case CONDITION_RATING:
      if (value == null) {
        unsetConditionRating();
      } else {
        setConditionRating((Double)value);
      }
      break;

    case ATTITUDE_RATING:
      if (value == null) {
        unsetAttitudeRating();
      } else {
        setAttitudeRating((Double)value);
      }
      break;

    case SATISFACTION_RATING:
      if (value == null) {
        unsetSatisfactionRating();
      } else {
        setSatisfactionRating((Double)value);
      }
      break;

    case LAST_MODIFY_TIME:
      if (value == null) {
        unsetLastModifyTime();
      } else {
        setLastModifyTime((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case ENABLED:
      if (value == null) {
        unsetEnabled();
      } else {
        setEnabled((Integer)value);
      }
      break;

    case ID_SET:
      if (value == null) {
        unsetIdSet();
      } else {
        setIdSet((Set<Integer>)value);
      }
      break;

    case USER_ID_SET:
      if (value == null) {
        unsetUserIdSet();
      } else {
        setUserIdSet((Set<Integer>)value);
      }
      break;

    case COURSE_TEMPLATE_ID_SET:
      if (value == null) {
        unsetCourseTemplateIdSet();
      } else {
        setCourseTemplateIdSet((Set<Integer>)value);
      }
      break;

    case TOTAL_RATING_START:
      if (value == null) {
        unsetTotalRatingStart();
      } else {
        setTotalRatingStart((Double)value);
      }
      break;

    case TOTAL_RATING_END:
      if (value == null) {
        unsetTotalRatingEnd();
      } else {
        setTotalRatingEnd((Double)value);
      }
      break;

    case CONDITION_RATING_START:
      if (value == null) {
        unsetConditionRatingStart();
      } else {
        setConditionRatingStart((Double)value);
      }
      break;

    case CONDITION_RATING_END:
      if (value == null) {
        unsetConditionRatingEnd();
      } else {
        setConditionRatingEnd((Double)value);
      }
      break;

    case ATTITUDE_RATING_START:
      if (value == null) {
        unsetAttitudeRatingStart();
      } else {
        setAttitudeRatingStart((Double)value);
      }
      break;

    case ATTITUDE_RATING_END:
      if (value == null) {
        unsetAttitudeRatingEnd();
      } else {
        setAttitudeRatingEnd((Double)value);
      }
      break;

    case SATISFACTION_RATING_START:
      if (value == null) {
        unsetSatisfactionRatingStart();
      } else {
        setSatisfactionRatingStart((Double)value);
      }
      break;

    case SATISFACTION_RATING_END:
      if (value == null) {
        unsetSatisfactionRatingEnd();
      } else {
        setSatisfactionRatingEnd((Double)value);
      }
      break;

    case LAST_MODIFY_TIME_START:
      if (value == null) {
        unsetLastModifyTimeStart();
      } else {
        setLastModifyTimeStart((Long)value);
      }
      break;

    case LAST_MODIFY_TIME_END:
      if (value == null) {
        unsetLastModifyTimeEnd();
      } else {
        setLastModifyTimeEnd((Long)value);
      }
      break;

    case CREATE_TIME_START:
      if (value == null) {
        unsetCreateTimeStart();
      } else {
        setCreateTimeStart((Long)value);
      }
      break;

    case CREATE_TIME_END:
      if (value == null) {
        unsetCreateTimeEnd();
      } else {
        setCreateTimeEnd((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Integer.valueOf(getId());

    case USER_ID:
      return Integer.valueOf(getUserId());

    case COURSE_TEMPLATE_ID:
      return Integer.valueOf(getCourseTemplateId());

    case TITLE:
      return getTitle();

    case CONTENT:
      return getContent();

    case TOTAL_RATING:
      return Double.valueOf(getTotalRating());

    case CONDITION_RATING:
      return Double.valueOf(getConditionRating());

    case ATTITUDE_RATING:
      return Double.valueOf(getAttitudeRating());

    case SATISFACTION_RATING:
      return Double.valueOf(getSatisfactionRating());

    case LAST_MODIFY_TIME:
      return Long.valueOf(getLastModifyTime());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case ENABLED:
      return Integer.valueOf(getEnabled());

    case ID_SET:
      return getIdSet();

    case USER_ID_SET:
      return getUserIdSet();

    case COURSE_TEMPLATE_ID_SET:
      return getCourseTemplateIdSet();

    case TOTAL_RATING_START:
      return Double.valueOf(getTotalRatingStart());

    case TOTAL_RATING_END:
      return Double.valueOf(getTotalRatingEnd());

    case CONDITION_RATING_START:
      return Double.valueOf(getConditionRatingStart());

    case CONDITION_RATING_END:
      return Double.valueOf(getConditionRatingEnd());

    case ATTITUDE_RATING_START:
      return Double.valueOf(getAttitudeRatingStart());

    case ATTITUDE_RATING_END:
      return Double.valueOf(getAttitudeRatingEnd());

    case SATISFACTION_RATING_START:
      return Double.valueOf(getSatisfactionRatingStart());

    case SATISFACTION_RATING_END:
      return Double.valueOf(getSatisfactionRatingEnd());

    case LAST_MODIFY_TIME_START:
      return Long.valueOf(getLastModifyTimeStart());

    case LAST_MODIFY_TIME_END:
      return Long.valueOf(getLastModifyTimeEnd());

    case CREATE_TIME_START:
      return Long.valueOf(getCreateTimeStart());

    case CREATE_TIME_END:
      return Long.valueOf(getCreateTimeEnd());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case USER_ID:
      return isSetUserId();
    case COURSE_TEMPLATE_ID:
      return isSetCourseTemplateId();
    case TITLE:
      return isSetTitle();
    case CONTENT:
      return isSetContent();
    case TOTAL_RATING:
      return isSetTotalRating();
    case CONDITION_RATING:
      return isSetConditionRating();
    case ATTITUDE_RATING:
      return isSetAttitudeRating();
    case SATISFACTION_RATING:
      return isSetSatisfactionRating();
    case LAST_MODIFY_TIME:
      return isSetLastModifyTime();
    case CREATE_TIME:
      return isSetCreateTime();
    case ENABLED:
      return isSetEnabled();
    case ID_SET:
      return isSetIdSet();
    case USER_ID_SET:
      return isSetUserIdSet();
    case COURSE_TEMPLATE_ID_SET:
      return isSetCourseTemplateIdSet();
    case TOTAL_RATING_START:
      return isSetTotalRatingStart();
    case TOTAL_RATING_END:
      return isSetTotalRatingEnd();
    case CONDITION_RATING_START:
      return isSetConditionRatingStart();
    case CONDITION_RATING_END:
      return isSetConditionRatingEnd();
    case ATTITUDE_RATING_START:
      return isSetAttitudeRatingStart();
    case ATTITUDE_RATING_END:
      return isSetAttitudeRatingEnd();
    case SATISFACTION_RATING_START:
      return isSetSatisfactionRatingStart();
    case SATISFACTION_RATING_END:
      return isSetSatisfactionRatingEnd();
    case LAST_MODIFY_TIME_START:
      return isSetLastModifyTimeStart();
    case LAST_MODIFY_TIME_END:
      return isSetLastModifyTimeEnd();
    case CREATE_TIME_START:
      return isSetCreateTimeStart();
    case CREATE_TIME_END:
      return isSetCreateTimeEnd();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CourseCommentBo)
      return this.equals((CourseCommentBo)that);
    return false;
  }

  public boolean equals(CourseCommentBo that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_courseTemplateId = true;
    boolean that_present_courseTemplateId = true;
    if (this_present_courseTemplateId || that_present_courseTemplateId) {
      if (!(this_present_courseTemplateId && that_present_courseTemplateId))
        return false;
      if (this.courseTemplateId != that.courseTemplateId)
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_content = true && this.isSetContent();
    boolean that_present_content = true && that.isSetContent();
    if (this_present_content || that_present_content) {
      if (!(this_present_content && that_present_content))
        return false;
      if (!this.content.equals(that.content))
        return false;
    }

    boolean this_present_totalRating = true;
    boolean that_present_totalRating = true;
    if (this_present_totalRating || that_present_totalRating) {
      if (!(this_present_totalRating && that_present_totalRating))
        return false;
      if (this.totalRating != that.totalRating)
        return false;
    }

    boolean this_present_conditionRating = true;
    boolean that_present_conditionRating = true;
    if (this_present_conditionRating || that_present_conditionRating) {
      if (!(this_present_conditionRating && that_present_conditionRating))
        return false;
      if (this.conditionRating != that.conditionRating)
        return false;
    }

    boolean this_present_attitudeRating = true;
    boolean that_present_attitudeRating = true;
    if (this_present_attitudeRating || that_present_attitudeRating) {
      if (!(this_present_attitudeRating && that_present_attitudeRating))
        return false;
      if (this.attitudeRating != that.attitudeRating)
        return false;
    }

    boolean this_present_satisfactionRating = true;
    boolean that_present_satisfactionRating = true;
    if (this_present_satisfactionRating || that_present_satisfactionRating) {
      if (!(this_present_satisfactionRating && that_present_satisfactionRating))
        return false;
      if (this.satisfactionRating != that.satisfactionRating)
        return false;
    }

    boolean this_present_lastModifyTime = true;
    boolean that_present_lastModifyTime = true;
    if (this_present_lastModifyTime || that_present_lastModifyTime) {
      if (!(this_present_lastModifyTime && that_present_lastModifyTime))
        return false;
      if (this.lastModifyTime != that.lastModifyTime)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_enabled = true;
    boolean that_present_enabled = true;
    if (this_present_enabled || that_present_enabled) {
      if (!(this_present_enabled && that_present_enabled))
        return false;
      if (this.enabled != that.enabled)
        return false;
    }

    boolean this_present_idSet = true && this.isSetIdSet();
    boolean that_present_idSet = true && that.isSetIdSet();
    if (this_present_idSet || that_present_idSet) {
      if (!(this_present_idSet && that_present_idSet))
        return false;
      if (!this.idSet.equals(that.idSet))
        return false;
    }

    boolean this_present_userIdSet = true && this.isSetUserIdSet();
    boolean that_present_userIdSet = true && that.isSetUserIdSet();
    if (this_present_userIdSet || that_present_userIdSet) {
      if (!(this_present_userIdSet && that_present_userIdSet))
        return false;
      if (!this.userIdSet.equals(that.userIdSet))
        return false;
    }

    boolean this_present_courseTemplateIdSet = true && this.isSetCourseTemplateIdSet();
    boolean that_present_courseTemplateIdSet = true && that.isSetCourseTemplateIdSet();
    if (this_present_courseTemplateIdSet || that_present_courseTemplateIdSet) {
      if (!(this_present_courseTemplateIdSet && that_present_courseTemplateIdSet))
        return false;
      if (!this.courseTemplateIdSet.equals(that.courseTemplateIdSet))
        return false;
    }

    boolean this_present_totalRatingStart = true;
    boolean that_present_totalRatingStart = true;
    if (this_present_totalRatingStart || that_present_totalRatingStart) {
      if (!(this_present_totalRatingStart && that_present_totalRatingStart))
        return false;
      if (this.totalRatingStart != that.totalRatingStart)
        return false;
    }

    boolean this_present_totalRatingEnd = true;
    boolean that_present_totalRatingEnd = true;
    if (this_present_totalRatingEnd || that_present_totalRatingEnd) {
      if (!(this_present_totalRatingEnd && that_present_totalRatingEnd))
        return false;
      if (this.totalRatingEnd != that.totalRatingEnd)
        return false;
    }

    boolean this_present_conditionRatingStart = true;
    boolean that_present_conditionRatingStart = true;
    if (this_present_conditionRatingStart || that_present_conditionRatingStart) {
      if (!(this_present_conditionRatingStart && that_present_conditionRatingStart))
        return false;
      if (this.conditionRatingStart != that.conditionRatingStart)
        return false;
    }

    boolean this_present_conditionRatingEnd = true;
    boolean that_present_conditionRatingEnd = true;
    if (this_present_conditionRatingEnd || that_present_conditionRatingEnd) {
      if (!(this_present_conditionRatingEnd && that_present_conditionRatingEnd))
        return false;
      if (this.conditionRatingEnd != that.conditionRatingEnd)
        return false;
    }

    boolean this_present_attitudeRatingStart = true;
    boolean that_present_attitudeRatingStart = true;
    if (this_present_attitudeRatingStart || that_present_attitudeRatingStart) {
      if (!(this_present_attitudeRatingStart && that_present_attitudeRatingStart))
        return false;
      if (this.attitudeRatingStart != that.attitudeRatingStart)
        return false;
    }

    boolean this_present_attitudeRatingEnd = true;
    boolean that_present_attitudeRatingEnd = true;
    if (this_present_attitudeRatingEnd || that_present_attitudeRatingEnd) {
      if (!(this_present_attitudeRatingEnd && that_present_attitudeRatingEnd))
        return false;
      if (this.attitudeRatingEnd != that.attitudeRatingEnd)
        return false;
    }

    boolean this_present_satisfactionRatingStart = true;
    boolean that_present_satisfactionRatingStart = true;
    if (this_present_satisfactionRatingStart || that_present_satisfactionRatingStart) {
      if (!(this_present_satisfactionRatingStart && that_present_satisfactionRatingStart))
        return false;
      if (this.satisfactionRatingStart != that.satisfactionRatingStart)
        return false;
    }

    boolean this_present_satisfactionRatingEnd = true;
    boolean that_present_satisfactionRatingEnd = true;
    if (this_present_satisfactionRatingEnd || that_present_satisfactionRatingEnd) {
      if (!(this_present_satisfactionRatingEnd && that_present_satisfactionRatingEnd))
        return false;
      if (this.satisfactionRatingEnd != that.satisfactionRatingEnd)
        return false;
    }

    boolean this_present_lastModifyTimeStart = true;
    boolean that_present_lastModifyTimeStart = true;
    if (this_present_lastModifyTimeStart || that_present_lastModifyTimeStart) {
      if (!(this_present_lastModifyTimeStart && that_present_lastModifyTimeStart))
        return false;
      if (this.lastModifyTimeStart != that.lastModifyTimeStart)
        return false;
    }

    boolean this_present_lastModifyTimeEnd = true;
    boolean that_present_lastModifyTimeEnd = true;
    if (this_present_lastModifyTimeEnd || that_present_lastModifyTimeEnd) {
      if (!(this_present_lastModifyTimeEnd && that_present_lastModifyTimeEnd))
        return false;
      if (this.lastModifyTimeEnd != that.lastModifyTimeEnd)
        return false;
    }

    boolean this_present_createTimeStart = true;
    boolean that_present_createTimeStart = true;
    if (this_present_createTimeStart || that_present_createTimeStart) {
      if (!(this_present_createTimeStart && that_present_createTimeStart))
        return false;
      if (this.createTimeStart != that.createTimeStart)
        return false;
    }

    boolean this_present_createTimeEnd = true;
    boolean that_present_createTimeEnd = true;
    if (this_present_createTimeEnd || that_present_createTimeEnd) {
      if (!(this_present_createTimeEnd && that_present_createTimeEnd))
        return false;
      if (this.createTimeEnd != that.createTimeEnd)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_id = true;
    builder.append(present_id);
    if (present_id)
      builder.append(id);

    boolean present_userId = true;
    builder.append(present_userId);
    if (present_userId)
      builder.append(userId);

    boolean present_courseTemplateId = true;
    builder.append(present_courseTemplateId);
    if (present_courseTemplateId)
      builder.append(courseTemplateId);

    boolean present_title = true && (isSetTitle());
    builder.append(present_title);
    if (present_title)
      builder.append(title);

    boolean present_content = true && (isSetContent());
    builder.append(present_content);
    if (present_content)
      builder.append(content);

    boolean present_totalRating = true;
    builder.append(present_totalRating);
    if (present_totalRating)
      builder.append(totalRating);

    boolean present_conditionRating = true;
    builder.append(present_conditionRating);
    if (present_conditionRating)
      builder.append(conditionRating);

    boolean present_attitudeRating = true;
    builder.append(present_attitudeRating);
    if (present_attitudeRating)
      builder.append(attitudeRating);

    boolean present_satisfactionRating = true;
    builder.append(present_satisfactionRating);
    if (present_satisfactionRating)
      builder.append(satisfactionRating);

    boolean present_lastModifyTime = true;
    builder.append(present_lastModifyTime);
    if (present_lastModifyTime)
      builder.append(lastModifyTime);

    boolean present_createTime = true;
    builder.append(present_createTime);
    if (present_createTime)
      builder.append(createTime);

    boolean present_enabled = true;
    builder.append(present_enabled);
    if (present_enabled)
      builder.append(enabled);

    boolean present_idSet = true && (isSetIdSet());
    builder.append(present_idSet);
    if (present_idSet)
      builder.append(idSet);

    boolean present_userIdSet = true && (isSetUserIdSet());
    builder.append(present_userIdSet);
    if (present_userIdSet)
      builder.append(userIdSet);

    boolean present_courseTemplateIdSet = true && (isSetCourseTemplateIdSet());
    builder.append(present_courseTemplateIdSet);
    if (present_courseTemplateIdSet)
      builder.append(courseTemplateIdSet);

    boolean present_totalRatingStart = true;
    builder.append(present_totalRatingStart);
    if (present_totalRatingStart)
      builder.append(totalRatingStart);

    boolean present_totalRatingEnd = true;
    builder.append(present_totalRatingEnd);
    if (present_totalRatingEnd)
      builder.append(totalRatingEnd);

    boolean present_conditionRatingStart = true;
    builder.append(present_conditionRatingStart);
    if (present_conditionRatingStart)
      builder.append(conditionRatingStart);

    boolean present_conditionRatingEnd = true;
    builder.append(present_conditionRatingEnd);
    if (present_conditionRatingEnd)
      builder.append(conditionRatingEnd);

    boolean present_attitudeRatingStart = true;
    builder.append(present_attitudeRatingStart);
    if (present_attitudeRatingStart)
      builder.append(attitudeRatingStart);

    boolean present_attitudeRatingEnd = true;
    builder.append(present_attitudeRatingEnd);
    if (present_attitudeRatingEnd)
      builder.append(attitudeRatingEnd);

    boolean present_satisfactionRatingStart = true;
    builder.append(present_satisfactionRatingStart);
    if (present_satisfactionRatingStart)
      builder.append(satisfactionRatingStart);

    boolean present_satisfactionRatingEnd = true;
    builder.append(present_satisfactionRatingEnd);
    if (present_satisfactionRatingEnd)
      builder.append(satisfactionRatingEnd);

    boolean present_lastModifyTimeStart = true;
    builder.append(present_lastModifyTimeStart);
    if (present_lastModifyTimeStart)
      builder.append(lastModifyTimeStart);

    boolean present_lastModifyTimeEnd = true;
    builder.append(present_lastModifyTimeEnd);
    if (present_lastModifyTimeEnd)
      builder.append(lastModifyTimeEnd);

    boolean present_createTimeStart = true;
    builder.append(present_createTimeStart);
    if (present_createTimeStart)
      builder.append(createTimeStart);

    boolean present_createTimeEnd = true;
    builder.append(present_createTimeEnd);
    if (present_createTimeEnd)
      builder.append(createTimeEnd);

    return builder.toHashCode();
  }

  @Override
  public int compareTo(CourseCommentBo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCourseTemplateId()).compareTo(other.isSetCourseTemplateId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCourseTemplateId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.courseTemplateId, other.courseTemplateId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContent()).compareTo(other.isSetContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.content, other.content);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalRating()).compareTo(other.isSetTotalRating());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalRating()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalRating, other.totalRating);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConditionRating()).compareTo(other.isSetConditionRating());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConditionRating()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.conditionRating, other.conditionRating);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAttitudeRating()).compareTo(other.isSetAttitudeRating());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAttitudeRating()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attitudeRating, other.attitudeRating);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSatisfactionRating()).compareTo(other.isSetSatisfactionRating());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSatisfactionRating()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.satisfactionRating, other.satisfactionRating);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTime()).compareTo(other.isSetLastModifyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTime, other.lastModifyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEnabled()).compareTo(other.isSetEnabled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnabled()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enabled, other.enabled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdSet()).compareTo(other.isSetIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idSet, other.idSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserIdSet()).compareTo(other.isSetUserIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userIdSet, other.userIdSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCourseTemplateIdSet()).compareTo(other.isSetCourseTemplateIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCourseTemplateIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.courseTemplateIdSet, other.courseTemplateIdSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalRatingStart()).compareTo(other.isSetTotalRatingStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalRatingStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalRatingStart, other.totalRatingStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalRatingEnd()).compareTo(other.isSetTotalRatingEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalRatingEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalRatingEnd, other.totalRatingEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConditionRatingStart()).compareTo(other.isSetConditionRatingStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConditionRatingStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.conditionRatingStart, other.conditionRatingStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConditionRatingEnd()).compareTo(other.isSetConditionRatingEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConditionRatingEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.conditionRatingEnd, other.conditionRatingEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAttitudeRatingStart()).compareTo(other.isSetAttitudeRatingStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAttitudeRatingStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attitudeRatingStart, other.attitudeRatingStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAttitudeRatingEnd()).compareTo(other.isSetAttitudeRatingEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAttitudeRatingEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attitudeRatingEnd, other.attitudeRatingEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSatisfactionRatingStart()).compareTo(other.isSetSatisfactionRatingStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSatisfactionRatingStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.satisfactionRatingStart, other.satisfactionRatingStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSatisfactionRatingEnd()).compareTo(other.isSetSatisfactionRatingEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSatisfactionRatingEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.satisfactionRatingEnd, other.satisfactionRatingEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimeStart()).compareTo(other.isSetLastModifyTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimeStart, other.lastModifyTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimeEnd()).compareTo(other.isSetLastModifyTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimeEnd, other.lastModifyTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeStart()).compareTo(other.isSetCreateTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeStart, other.createTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeEnd()).compareTo(other.isSetCreateTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeEnd, other.createTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CourseCommentBo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("courseTemplateId:");
    sb.append(this.courseTemplateId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("content:");
    if (this.content == null) {
      sb.append("null");
    } else {
      sb.append(this.content);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalRating:");
    sb.append(this.totalRating);
    first = false;
    if (!first) sb.append(", ");
    sb.append("conditionRating:");
    sb.append(this.conditionRating);
    first = false;
    if (!first) sb.append(", ");
    sb.append("attitudeRating:");
    sb.append(this.attitudeRating);
    first = false;
    if (!first) sb.append(", ");
    sb.append("satisfactionRating:");
    sb.append(this.satisfactionRating);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTime:");
    sb.append(this.lastModifyTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("enabled:");
    sb.append(this.enabled);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idSet:");
    if (this.idSet == null) {
      sb.append("null");
    } else {
      sb.append(this.idSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userIdSet:");
    if (this.userIdSet == null) {
      sb.append("null");
    } else {
      sb.append(this.userIdSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("courseTemplateIdSet:");
    if (this.courseTemplateIdSet == null) {
      sb.append("null");
    } else {
      sb.append(this.courseTemplateIdSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalRatingStart:");
    sb.append(this.totalRatingStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalRatingEnd:");
    sb.append(this.totalRatingEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("conditionRatingStart:");
    sb.append(this.conditionRatingStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("conditionRatingEnd:");
    sb.append(this.conditionRatingEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("attitudeRatingStart:");
    sb.append(this.attitudeRatingStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("attitudeRatingEnd:");
    sb.append(this.attitudeRatingEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("satisfactionRatingStart:");
    sb.append(this.satisfactionRatingStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("satisfactionRatingEnd:");
    sb.append(this.satisfactionRatingEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTimeStart:");
    sb.append(this.lastModifyTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTimeEnd:");
    sb.append(this.lastModifyTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeStart:");
    sb.append(this.createTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeEnd:");
    sb.append(this.createTimeEnd);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CourseCommentBoStandardSchemeFactory implements SchemeFactory {
    public CourseCommentBoStandardScheme getScheme() {
      return new CourseCommentBoStandardScheme();
    }
  }

  private static class CourseCommentBoStandardScheme extends StandardScheme<CourseCommentBo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CourseCommentBo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // COURSE_TEMPLATE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.courseTemplateId = iprot.readI32();
              struct.setCourseTemplateIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.content = iprot.readString();
              struct.setContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TOTAL_RATING
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalRating = iprot.readDouble();
              struct.setTotalRatingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CONDITION_RATING
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.conditionRating = iprot.readDouble();
              struct.setConditionRatingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ATTITUDE_RATING
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.attitudeRating = iprot.readDouble();
              struct.setAttitudeRatingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SATISFACTION_RATING
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.satisfactionRating = iprot.readDouble();
              struct.setSatisfactionRatingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // LAST_MODIFY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTime = iprot.readI64();
              struct.setLastModifyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ENABLED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.enabled = iprot.readI32();
              struct.setEnabledIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set0 = iprot.readSetBegin();
                struct.idSet = new HashSet<Integer>(2*_set0.size);
                for (int _i1 = 0; _i1 < _set0.size; ++_i1)
                {
                  int _elem2;
                  _elem2 = iprot.readI32();
                  struct.idSet.add(_elem2);
                }
                iprot.readSetEnd();
              }
              struct.setIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // USER_ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set3 = iprot.readSetBegin();
                struct.userIdSet = new HashSet<Integer>(2*_set3.size);
                for (int _i4 = 0; _i4 < _set3.size; ++_i4)
                {
                  int _elem5;
                  _elem5 = iprot.readI32();
                  struct.userIdSet.add(_elem5);
                }
                iprot.readSetEnd();
              }
              struct.setUserIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // COURSE_TEMPLATE_ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set6 = iprot.readSetBegin();
                struct.courseTemplateIdSet = new HashSet<Integer>(2*_set6.size);
                for (int _i7 = 0; _i7 < _set6.size; ++_i7)
                {
                  int _elem8;
                  _elem8 = iprot.readI32();
                  struct.courseTemplateIdSet.add(_elem8);
                }
                iprot.readSetEnd();
              }
              struct.setCourseTemplateIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // TOTAL_RATING_START
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalRatingStart = iprot.readDouble();
              struct.setTotalRatingStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // TOTAL_RATING_END
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalRatingEnd = iprot.readDouble();
              struct.setTotalRatingEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // CONDITION_RATING_START
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.conditionRatingStart = iprot.readDouble();
              struct.setConditionRatingStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // CONDITION_RATING_END
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.conditionRatingEnd = iprot.readDouble();
              struct.setConditionRatingEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // ATTITUDE_RATING_START
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.attitudeRatingStart = iprot.readDouble();
              struct.setAttitudeRatingStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // ATTITUDE_RATING_END
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.attitudeRatingEnd = iprot.readDouble();
              struct.setAttitudeRatingEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // SATISFACTION_RATING_START
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.satisfactionRatingStart = iprot.readDouble();
              struct.setSatisfactionRatingStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // SATISFACTION_RATING_END
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.satisfactionRatingEnd = iprot.readDouble();
              struct.setSatisfactionRatingEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // LAST_MODIFY_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimeStart = iprot.readI64();
              struct.setLastModifyTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // LAST_MODIFY_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimeEnd = iprot.readI64();
              struct.setLastModifyTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // CREATE_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeStart = iprot.readI64();
              struct.setCreateTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // CREATE_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeEnd = iprot.readI64();
              struct.setCreateTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CourseCommentBo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI32(struct.userId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COURSE_TEMPLATE_ID_FIELD_DESC);
      oprot.writeI32(struct.courseTemplateId);
      oprot.writeFieldEnd();
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.content != null) {
        oprot.writeFieldBegin(CONTENT_FIELD_DESC);
        oprot.writeString(struct.content);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_RATING_FIELD_DESC);
      oprot.writeDouble(struct.totalRating);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CONDITION_RATING_FIELD_DESC);
      oprot.writeDouble(struct.conditionRating);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ATTITUDE_RATING_FIELD_DESC);
      oprot.writeDouble(struct.attitudeRating);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SATISFACTION_RATING_FIELD_DESC);
      oprot.writeDouble(struct.satisfactionRating);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ENABLED_FIELD_DESC);
      oprot.writeI32(struct.enabled);
      oprot.writeFieldEnd();
      if (struct.idSet != null) {
        oprot.writeFieldBegin(ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.idSet.size()));
          for (int _iter9 : struct.idSet)
          {
            oprot.writeI32(_iter9);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.userIdSet != null) {
        oprot.writeFieldBegin(USER_ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.userIdSet.size()));
          for (int _iter10 : struct.userIdSet)
          {
            oprot.writeI32(_iter10);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.courseTemplateIdSet != null) {
        oprot.writeFieldBegin(COURSE_TEMPLATE_ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.courseTemplateIdSet.size()));
          for (int _iter11 : struct.courseTemplateIdSet)
          {
            oprot.writeI32(_iter11);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_RATING_START_FIELD_DESC);
      oprot.writeDouble(struct.totalRatingStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_RATING_END_FIELD_DESC);
      oprot.writeDouble(struct.totalRatingEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CONDITION_RATING_START_FIELD_DESC);
      oprot.writeDouble(struct.conditionRatingStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CONDITION_RATING_END_FIELD_DESC);
      oprot.writeDouble(struct.conditionRatingEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ATTITUDE_RATING_START_FIELD_DESC);
      oprot.writeDouble(struct.attitudeRatingStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ATTITUDE_RATING_END_FIELD_DESC);
      oprot.writeDouble(struct.attitudeRatingEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SATISFACTION_RATING_START_FIELD_DESC);
      oprot.writeDouble(struct.satisfactionRatingStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SATISFACTION_RATING_END_FIELD_DESC);
      oprot.writeDouble(struct.satisfactionRatingEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.createTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.createTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CourseCommentBoTupleSchemeFactory implements SchemeFactory {
    public CourseCommentBoTupleScheme getScheme() {
      return new CourseCommentBoTupleScheme();
    }
  }

  private static class CourseCommentBoTupleScheme extends TupleScheme<CourseCommentBo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CourseCommentBo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetUserId()) {
        optionals.set(1);
      }
      if (struct.isSetCourseTemplateId()) {
        optionals.set(2);
      }
      if (struct.isSetTitle()) {
        optionals.set(3);
      }
      if (struct.isSetContent()) {
        optionals.set(4);
      }
      if (struct.isSetTotalRating()) {
        optionals.set(5);
      }
      if (struct.isSetConditionRating()) {
        optionals.set(6);
      }
      if (struct.isSetAttitudeRating()) {
        optionals.set(7);
      }
      if (struct.isSetSatisfactionRating()) {
        optionals.set(8);
      }
      if (struct.isSetLastModifyTime()) {
        optionals.set(9);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(10);
      }
      if (struct.isSetEnabled()) {
        optionals.set(11);
      }
      if (struct.isSetIdSet()) {
        optionals.set(12);
      }
      if (struct.isSetUserIdSet()) {
        optionals.set(13);
      }
      if (struct.isSetCourseTemplateIdSet()) {
        optionals.set(14);
      }
      if (struct.isSetTotalRatingStart()) {
        optionals.set(15);
      }
      if (struct.isSetTotalRatingEnd()) {
        optionals.set(16);
      }
      if (struct.isSetConditionRatingStart()) {
        optionals.set(17);
      }
      if (struct.isSetConditionRatingEnd()) {
        optionals.set(18);
      }
      if (struct.isSetAttitudeRatingStart()) {
        optionals.set(19);
      }
      if (struct.isSetAttitudeRatingEnd()) {
        optionals.set(20);
      }
      if (struct.isSetSatisfactionRatingStart()) {
        optionals.set(21);
      }
      if (struct.isSetSatisfactionRatingEnd()) {
        optionals.set(22);
      }
      if (struct.isSetLastModifyTimeStart()) {
        optionals.set(23);
      }
      if (struct.isSetLastModifyTimeEnd()) {
        optionals.set(24);
      }
      if (struct.isSetCreateTimeStart()) {
        optionals.set(25);
      }
      if (struct.isSetCreateTimeEnd()) {
        optionals.set(26);
      }
      oprot.writeBitSet(optionals, 27);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
      if (struct.isSetCourseTemplateId()) {
        oprot.writeI32(struct.courseTemplateId);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetContent()) {
        oprot.writeString(struct.content);
      }
      if (struct.isSetTotalRating()) {
        oprot.writeDouble(struct.totalRating);
      }
      if (struct.isSetConditionRating()) {
        oprot.writeDouble(struct.conditionRating);
      }
      if (struct.isSetAttitudeRating()) {
        oprot.writeDouble(struct.attitudeRating);
      }
      if (struct.isSetSatisfactionRating()) {
        oprot.writeDouble(struct.satisfactionRating);
      }
      if (struct.isSetLastModifyTime()) {
        oprot.writeI64(struct.lastModifyTime);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetEnabled()) {
        oprot.writeI32(struct.enabled);
      }
      if (struct.isSetIdSet()) {
        {
          oprot.writeI32(struct.idSet.size());
          for (int _iter12 : struct.idSet)
          {
            oprot.writeI32(_iter12);
          }
        }
      }
      if (struct.isSetUserIdSet()) {
        {
          oprot.writeI32(struct.userIdSet.size());
          for (int _iter13 : struct.userIdSet)
          {
            oprot.writeI32(_iter13);
          }
        }
      }
      if (struct.isSetCourseTemplateIdSet()) {
        {
          oprot.writeI32(struct.courseTemplateIdSet.size());
          for (int _iter14 : struct.courseTemplateIdSet)
          {
            oprot.writeI32(_iter14);
          }
        }
      }
      if (struct.isSetTotalRatingStart()) {
        oprot.writeDouble(struct.totalRatingStart);
      }
      if (struct.isSetTotalRatingEnd()) {
        oprot.writeDouble(struct.totalRatingEnd);
      }
      if (struct.isSetConditionRatingStart()) {
        oprot.writeDouble(struct.conditionRatingStart);
      }
      if (struct.isSetConditionRatingEnd()) {
        oprot.writeDouble(struct.conditionRatingEnd);
      }
      if (struct.isSetAttitudeRatingStart()) {
        oprot.writeDouble(struct.attitudeRatingStart);
      }
      if (struct.isSetAttitudeRatingEnd()) {
        oprot.writeDouble(struct.attitudeRatingEnd);
      }
      if (struct.isSetSatisfactionRatingStart()) {
        oprot.writeDouble(struct.satisfactionRatingStart);
      }
      if (struct.isSetSatisfactionRatingEnd()) {
        oprot.writeDouble(struct.satisfactionRatingEnd);
      }
      if (struct.isSetLastModifyTimeStart()) {
        oprot.writeI64(struct.lastModifyTimeStart);
      }
      if (struct.isSetLastModifyTimeEnd()) {
        oprot.writeI64(struct.lastModifyTimeEnd);
      }
      if (struct.isSetCreateTimeStart()) {
        oprot.writeI64(struct.createTimeStart);
      }
      if (struct.isSetCreateTimeEnd()) {
        oprot.writeI64(struct.createTimeEnd);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CourseCommentBo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(27);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.courseTemplateId = iprot.readI32();
        struct.setCourseTemplateIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(4)) {
        struct.content = iprot.readString();
        struct.setContentIsSet(true);
      }
      if (incoming.get(5)) {
        struct.totalRating = iprot.readDouble();
        struct.setTotalRatingIsSet(true);
      }
      if (incoming.get(6)) {
        struct.conditionRating = iprot.readDouble();
        struct.setConditionRatingIsSet(true);
      }
      if (incoming.get(7)) {
        struct.attitudeRating = iprot.readDouble();
        struct.setAttitudeRatingIsSet(true);
      }
      if (incoming.get(8)) {
        struct.satisfactionRating = iprot.readDouble();
        struct.setSatisfactionRatingIsSet(true);
      }
      if (incoming.get(9)) {
        struct.lastModifyTime = iprot.readI64();
        struct.setLastModifyTimeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.enabled = iprot.readI32();
        struct.setEnabledIsSet(true);
      }
      if (incoming.get(12)) {
        {
          org.apache.thrift.protocol.TSet _set15 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.idSet = new HashSet<Integer>(2*_set15.size);
          for (int _i16 = 0; _i16 < _set15.size; ++_i16)
          {
            int _elem17;
            _elem17 = iprot.readI32();
            struct.idSet.add(_elem17);
          }
        }
        struct.setIdSetIsSet(true);
      }
      if (incoming.get(13)) {
        {
          org.apache.thrift.protocol.TSet _set18 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.userIdSet = new HashSet<Integer>(2*_set18.size);
          for (int _i19 = 0; _i19 < _set18.size; ++_i19)
          {
            int _elem20;
            _elem20 = iprot.readI32();
            struct.userIdSet.add(_elem20);
          }
        }
        struct.setUserIdSetIsSet(true);
      }
      if (incoming.get(14)) {
        {
          org.apache.thrift.protocol.TSet _set21 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.courseTemplateIdSet = new HashSet<Integer>(2*_set21.size);
          for (int _i22 = 0; _i22 < _set21.size; ++_i22)
          {
            int _elem23;
            _elem23 = iprot.readI32();
            struct.courseTemplateIdSet.add(_elem23);
          }
        }
        struct.setCourseTemplateIdSetIsSet(true);
      }
      if (incoming.get(15)) {
        struct.totalRatingStart = iprot.readDouble();
        struct.setTotalRatingStartIsSet(true);
      }
      if (incoming.get(16)) {
        struct.totalRatingEnd = iprot.readDouble();
        struct.setTotalRatingEndIsSet(true);
      }
      if (incoming.get(17)) {
        struct.conditionRatingStart = iprot.readDouble();
        struct.setConditionRatingStartIsSet(true);
      }
      if (incoming.get(18)) {
        struct.conditionRatingEnd = iprot.readDouble();
        struct.setConditionRatingEndIsSet(true);
      }
      if (incoming.get(19)) {
        struct.attitudeRatingStart = iprot.readDouble();
        struct.setAttitudeRatingStartIsSet(true);
      }
      if (incoming.get(20)) {
        struct.attitudeRatingEnd = iprot.readDouble();
        struct.setAttitudeRatingEndIsSet(true);
      }
      if (incoming.get(21)) {
        struct.satisfactionRatingStart = iprot.readDouble();
        struct.setSatisfactionRatingStartIsSet(true);
      }
      if (incoming.get(22)) {
        struct.satisfactionRatingEnd = iprot.readDouble();
        struct.setSatisfactionRatingEndIsSet(true);
      }
      if (incoming.get(23)) {
        struct.lastModifyTimeStart = iprot.readI64();
        struct.setLastModifyTimeStartIsSet(true);
      }
      if (incoming.get(24)) {
        struct.lastModifyTimeEnd = iprot.readI64();
        struct.setLastModifyTimeEndIsSet(true);
      }
      if (incoming.get(25)) {
        struct.createTimeStart = iprot.readI64();
        struct.setCreateTimeStartIsSet(true);
      }
      if (incoming.get(26)) {
        struct.createTimeEnd = iprot.readI64();
        struct.setCreateTimeEndIsSet(true);
      }
    }
  }

}

