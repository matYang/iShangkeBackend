/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ishangke.edunav.commoncontract.model;

import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * PartnerBo
 */
public class PartnerBo implements org.apache.thrift.TBase<PartnerBo, PartnerBo._Fields>, java.io.Serializable, Cloneable, Comparable<PartnerBo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PartnerBo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField INST_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("instName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField LOGO_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("logoUrl", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CONTRACT_FIELD_DESC = new org.apache.thrift.protocol.TField("contract", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField RATING_FIELD_DESC = new org.apache.thrift.protocol.TField("rating", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastLoginTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTime", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField ENABLED_FIELD_DESC = new org.apache.thrift.protocol.TField("enabled", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField WHOLE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("wholeName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField LICENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("licence", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField ORGANIZATION_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("organizationNum", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField REFERENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("reference", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PASSWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("password", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField PARTNER_INTRO_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerIntro", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField PARTNER_DISTINCTION_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerDistinction", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField LICENCE_IMG_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("licenceImgUrl", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField TAX_REG_IMG_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("taxRegImgUrl", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField EDU_QUALIFICATION_IMG_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("eduQualificationImgUrl", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField HQ_LOCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("hqLocation", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField UNI_REG_LOCATION_FIELD_DESC = new org.apache.thrift.protocol.TField("uniRegLocation", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField HQ_CONTACT_FIELD_DESC = new org.apache.thrift.protocol.TField("hqContact", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField HQ_CONTACT_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("hqContactPhone", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField HQ_CONTACT_SECOPT_FIELD_DESC = new org.apache.thrift.protocol.TField("hqContactSecopt", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField COURSE_CONTACT_FIELD_DESC = new org.apache.thrift.protocol.TField("courseContact", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField COURSE_CONTACT_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("courseContactPhone", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField STUDENT_INQUERY_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("studentInqueryPhone", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField REG_CONTACT_FIELD_DESC = new org.apache.thrift.protocol.TField("regContact", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField REG_CONTACT_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("regContactPhone", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField REG_CONTACT_FAX_FIELD_DESC = new org.apache.thrift.protocol.TField("regContactFax", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField CUTOFF_DAY_FIELD_DESC = new org.apache.thrift.protocol.TField("cutoffDay", org.apache.thrift.protocol.TType.I32, (short)31);
  private static final org.apache.thrift.protocol.TField CUTOFF_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("cutoffTime", org.apache.thrift.protocol.TType.I32, (short)32);
  private static final org.apache.thrift.protocol.TField PARTNER_QUALIFICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerQualification", org.apache.thrift.protocol.TType.I32, (short)33);
  private static final org.apache.thrift.protocol.TField ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("idSet", org.apache.thrift.protocol.TType.SET, (short)34);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimeStart", org.apache.thrift.protocol.TType.I64, (short)35);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimeEnd", org.apache.thrift.protocol.TType.I64, (short)36);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeStart", org.apache.thrift.protocol.TType.I64, (short)37);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimeEnd", org.apache.thrift.protocol.TType.I64, (short)38);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("lastLoginTimeStart", org.apache.thrift.protocol.TType.I64, (short)39);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("lastLoginTimeEnd", org.apache.thrift.protocol.TType.I64, (short)40);
  private static final org.apache.thrift.protocol.TField CUTOFF_DAY_START_FIELD_DESC = new org.apache.thrift.protocol.TField("cutoffDayStart", org.apache.thrift.protocol.TType.I32, (short)41);
  private static final org.apache.thrift.protocol.TField CUTOFF_DAY_END_FIELD_DESC = new org.apache.thrift.protocol.TField("cutoffDayEnd", org.apache.thrift.protocol.TType.I32, (short)42);
  private static final org.apache.thrift.protocol.TField CUTOFF_DAY_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("cutoffDaySet", org.apache.thrift.protocol.TType.SET, (short)43);
  private static final org.apache.thrift.protocol.TField CUTOFF_TIME_START_FIELD_DESC = new org.apache.thrift.protocol.TField("cutoffTimeStart", org.apache.thrift.protocol.TType.I32, (short)44);
  private static final org.apache.thrift.protocol.TField CUTOFF_TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("cutoffTimeEnd", org.apache.thrift.protocol.TType.I32, (short)45);
  private static final org.apache.thrift.protocol.TField CUTOFF_TIME_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("cutoffTimeSet", org.apache.thrift.protocol.TType.SET, (short)46);
  private static final org.apache.thrift.protocol.TField PARTNER_QUALIFICATION_START_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerQualificationStart", org.apache.thrift.protocol.TType.I32, (short)47);
  private static final org.apache.thrift.protocol.TField PARTNER_QUALIFICATION_END_FIELD_DESC = new org.apache.thrift.protocol.TField("partnerQualificationEnd", org.apache.thrift.protocol.TType.I32, (short)48);
  private static final org.apache.thrift.protocol.TField RATING_START_FIELD_DESC = new org.apache.thrift.protocol.TField("ratingStart", org.apache.thrift.protocol.TType.DOUBLE, (short)49);
  private static final org.apache.thrift.protocol.TField RATING_END_FIELD_DESC = new org.apache.thrift.protocol.TField("ratingEnd", org.apache.thrift.protocol.TType.DOUBLE, (short)50);
  private static final org.apache.thrift.protocol.TField TEACHER_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("teacherList", org.apache.thrift.protocol.TType.LIST, (short)51);
  private static final org.apache.thrift.protocol.TField CLASS_PHOTO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("classPhotoList", org.apache.thrift.protocol.TType.LIST, (short)52);
  private static final org.apache.thrift.protocol.TField ADDRESS_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("addressList", org.apache.thrift.protocol.TType.LIST, (short)53);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PartnerBoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PartnerBoTupleSchemeFactory());
  }

  public int id; // required
  public String instName; // required
  public String logoUrl; // required
  public String contract; // required
  public double rating; // required
  public long lastLoginTime; // required
  public long lastModifyTime; // required
  public long createTime; // required
  public int enabled; // required
  public String wholeName; // required
  public String licence; // required
  public String organizationNum; // required
  public String reference; // required
  public String password; // required
  public String partnerIntro; // required
  public String partnerDistinction; // required
  public String licenceImgUrl; // required
  public String taxRegImgUrl; // required
  public String eduQualificationImgUrl; // required
  public String hqLocation; // required
  public int uniRegLocation; // required
  public String hqContact; // required
  public String hqContactPhone; // required
  public String hqContactSecopt; // required
  public String courseContact; // required
  public String courseContactPhone; // required
  public String studentInqueryPhone; // required
  public String regContact; // required
  public String regContactPhone; // required
  public String regContactFax; // required
  public int cutoffDay; // required
  public int cutoffTime; // required
  public int partnerQualification; // required
  public Set<Integer> idSet; // required
  public long lastModifyTimeStart; // required
  public long lastModifyTimeEnd; // required
  public long createTimeStart; // required
  public long createTimeEnd; // required
  public long lastLoginTimeStart; // required
  public long lastLoginTimeEnd; // required
  public int cutoffDayStart; // required
  public int cutoffDayEnd; // required
  public Set<Integer> cutoffDaySet; // required
  public int cutoffTimeStart; // required
  public int cutoffTimeEnd; // required
  public Set<Integer> cutoffTimeSet; // required
  public int partnerQualificationStart; // required
  public int partnerQualificationEnd; // required
  public double ratingStart; // required
  public double ratingEnd; // required
  public List<com.ishangke.edunav.commoncontract.model.TeacherBo> teacherList; // required
  public List<com.ishangke.edunav.commoncontract.model.ClassPhotoBo> classPhotoList; // required
  public List<com.ishangke.edunav.commoncontract.model.AddressBo> addressList; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    INST_NAME((short)2, "instName"),
    LOGO_URL((short)3, "logoUrl"),
    CONTRACT((short)4, "contract"),
    RATING((short)5, "rating"),
    LAST_LOGIN_TIME((short)6, "lastLoginTime"),
    LAST_MODIFY_TIME((short)7, "lastModifyTime"),
    CREATE_TIME((short)8, "createTime"),
    ENABLED((short)9, "enabled"),
    WHOLE_NAME((short)10, "wholeName"),
    LICENCE((short)11, "licence"),
    ORGANIZATION_NUM((short)12, "organizationNum"),
    REFERENCE((short)13, "reference"),
    PASSWORD((short)14, "password"),
    PARTNER_INTRO((short)15, "partnerIntro"),
    PARTNER_DISTINCTION((short)16, "partnerDistinction"),
    LICENCE_IMG_URL((short)17, "licenceImgUrl"),
    TAX_REG_IMG_URL((short)18, "taxRegImgUrl"),
    EDU_QUALIFICATION_IMG_URL((short)19, "eduQualificationImgUrl"),
    HQ_LOCATION((short)20, "hqLocation"),
    UNI_REG_LOCATION((short)21, "uniRegLocation"),
    HQ_CONTACT((short)22, "hqContact"),
    HQ_CONTACT_PHONE((short)23, "hqContactPhone"),
    HQ_CONTACT_SECOPT((short)24, "hqContactSecopt"),
    COURSE_CONTACT((short)25, "courseContact"),
    COURSE_CONTACT_PHONE((short)26, "courseContactPhone"),
    STUDENT_INQUERY_PHONE((short)27, "studentInqueryPhone"),
    REG_CONTACT((short)28, "regContact"),
    REG_CONTACT_PHONE((short)29, "regContactPhone"),
    REG_CONTACT_FAX((short)30, "regContactFax"),
    CUTOFF_DAY((short)31, "cutoffDay"),
    CUTOFF_TIME((short)32, "cutoffTime"),
    PARTNER_QUALIFICATION((short)33, "partnerQualification"),
    ID_SET((short)34, "idSet"),
    LAST_MODIFY_TIME_START((short)35, "lastModifyTimeStart"),
    LAST_MODIFY_TIME_END((short)36, "lastModifyTimeEnd"),
    CREATE_TIME_START((short)37, "createTimeStart"),
    CREATE_TIME_END((short)38, "createTimeEnd"),
    LAST_LOGIN_TIME_START((short)39, "lastLoginTimeStart"),
    LAST_LOGIN_TIME_END((short)40, "lastLoginTimeEnd"),
    CUTOFF_DAY_START((short)41, "cutoffDayStart"),
    CUTOFF_DAY_END((short)42, "cutoffDayEnd"),
    CUTOFF_DAY_SET((short)43, "cutoffDaySet"),
    CUTOFF_TIME_START((short)44, "cutoffTimeStart"),
    CUTOFF_TIME_END((short)45, "cutoffTimeEnd"),
    CUTOFF_TIME_SET((short)46, "cutoffTimeSet"),
    PARTNER_QUALIFICATION_START((short)47, "partnerQualificationStart"),
    PARTNER_QUALIFICATION_END((short)48, "partnerQualificationEnd"),
    RATING_START((short)49, "ratingStart"),
    RATING_END((short)50, "ratingEnd"),
    TEACHER_LIST((short)51, "teacherList"),
    CLASS_PHOTO_LIST((short)52, "classPhotoList"),
    ADDRESS_LIST((short)53, "addressList");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // INST_NAME
          return INST_NAME;
        case 3: // LOGO_URL
          return LOGO_URL;
        case 4: // CONTRACT
          return CONTRACT;
        case 5: // RATING
          return RATING;
        case 6: // LAST_LOGIN_TIME
          return LAST_LOGIN_TIME;
        case 7: // LAST_MODIFY_TIME
          return LAST_MODIFY_TIME;
        case 8: // CREATE_TIME
          return CREATE_TIME;
        case 9: // ENABLED
          return ENABLED;
        case 10: // WHOLE_NAME
          return WHOLE_NAME;
        case 11: // LICENCE
          return LICENCE;
        case 12: // ORGANIZATION_NUM
          return ORGANIZATION_NUM;
        case 13: // REFERENCE
          return REFERENCE;
        case 14: // PASSWORD
          return PASSWORD;
        case 15: // PARTNER_INTRO
          return PARTNER_INTRO;
        case 16: // PARTNER_DISTINCTION
          return PARTNER_DISTINCTION;
        case 17: // LICENCE_IMG_URL
          return LICENCE_IMG_URL;
        case 18: // TAX_REG_IMG_URL
          return TAX_REG_IMG_URL;
        case 19: // EDU_QUALIFICATION_IMG_URL
          return EDU_QUALIFICATION_IMG_URL;
        case 20: // HQ_LOCATION
          return HQ_LOCATION;
        case 21: // UNI_REG_LOCATION
          return UNI_REG_LOCATION;
        case 22: // HQ_CONTACT
          return HQ_CONTACT;
        case 23: // HQ_CONTACT_PHONE
          return HQ_CONTACT_PHONE;
        case 24: // HQ_CONTACT_SECOPT
          return HQ_CONTACT_SECOPT;
        case 25: // COURSE_CONTACT
          return COURSE_CONTACT;
        case 26: // COURSE_CONTACT_PHONE
          return COURSE_CONTACT_PHONE;
        case 27: // STUDENT_INQUERY_PHONE
          return STUDENT_INQUERY_PHONE;
        case 28: // REG_CONTACT
          return REG_CONTACT;
        case 29: // REG_CONTACT_PHONE
          return REG_CONTACT_PHONE;
        case 30: // REG_CONTACT_FAX
          return REG_CONTACT_FAX;
        case 31: // CUTOFF_DAY
          return CUTOFF_DAY;
        case 32: // CUTOFF_TIME
          return CUTOFF_TIME;
        case 33: // PARTNER_QUALIFICATION
          return PARTNER_QUALIFICATION;
        case 34: // ID_SET
          return ID_SET;
        case 35: // LAST_MODIFY_TIME_START
          return LAST_MODIFY_TIME_START;
        case 36: // LAST_MODIFY_TIME_END
          return LAST_MODIFY_TIME_END;
        case 37: // CREATE_TIME_START
          return CREATE_TIME_START;
        case 38: // CREATE_TIME_END
          return CREATE_TIME_END;
        case 39: // LAST_LOGIN_TIME_START
          return LAST_LOGIN_TIME_START;
        case 40: // LAST_LOGIN_TIME_END
          return LAST_LOGIN_TIME_END;
        case 41: // CUTOFF_DAY_START
          return CUTOFF_DAY_START;
        case 42: // CUTOFF_DAY_END
          return CUTOFF_DAY_END;
        case 43: // CUTOFF_DAY_SET
          return CUTOFF_DAY_SET;
        case 44: // CUTOFF_TIME_START
          return CUTOFF_TIME_START;
        case 45: // CUTOFF_TIME_END
          return CUTOFF_TIME_END;
        case 46: // CUTOFF_TIME_SET
          return CUTOFF_TIME_SET;
        case 47: // PARTNER_QUALIFICATION_START
          return PARTNER_QUALIFICATION_START;
        case 48: // PARTNER_QUALIFICATION_END
          return PARTNER_QUALIFICATION_END;
        case 49: // RATING_START
          return RATING_START;
        case 50: // RATING_END
          return RATING_END;
        case 51: // TEACHER_LIST
          return TEACHER_LIST;
        case 52: // CLASS_PHOTO_LIST
          return CLASS_PHOTO_LIST;
        case 53: // ADDRESS_LIST
          return ADDRESS_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __RATING_ISSET_ID = 1;
  private static final int __LASTLOGINTIME_ISSET_ID = 2;
  private static final int __LASTMODIFYTIME_ISSET_ID = 3;
  private static final int __CREATETIME_ISSET_ID = 4;
  private static final int __ENABLED_ISSET_ID = 5;
  private static final int __UNIREGLOCATION_ISSET_ID = 6;
  private static final int __CUTOFFDAY_ISSET_ID = 7;
  private static final int __CUTOFFTIME_ISSET_ID = 8;
  private static final int __PARTNERQUALIFICATION_ISSET_ID = 9;
  private static final int __LASTMODIFYTIMESTART_ISSET_ID = 10;
  private static final int __LASTMODIFYTIMEEND_ISSET_ID = 11;
  private static final int __CREATETIMESTART_ISSET_ID = 12;
  private static final int __CREATETIMEEND_ISSET_ID = 13;
  private static final int __LASTLOGINTIMESTART_ISSET_ID = 14;
  private static final int __LASTLOGINTIMEEND_ISSET_ID = 15;
  private static final int __CUTOFFDAYSTART_ISSET_ID = 16;
  private static final int __CUTOFFDAYEND_ISSET_ID = 17;
  private static final int __CUTOFFTIMESTART_ISSET_ID = 18;
  private static final int __CUTOFFTIMEEND_ISSET_ID = 19;
  private static final int __PARTNERQUALIFICATIONSTART_ISSET_ID = 20;
  private static final int __PARTNERQUALIFICATIONEND_ISSET_ID = 21;
  private static final int __RATINGSTART_ISSET_ID = 22;
  private static final int __RATINGEND_ISSET_ID = 23;
  private int __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INST_NAME, new org.apache.thrift.meta_data.FieldMetaData("instName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOGO_URL, new org.apache.thrift.meta_data.FieldMetaData("logoUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTRACT, new org.apache.thrift.meta_data.FieldMetaData("contract", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RATING, new org.apache.thrift.meta_data.FieldMetaData("rating", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LAST_LOGIN_TIME, new org.apache.thrift.meta_data.FieldMetaData("lastLoginTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ENABLED, new org.apache.thrift.meta_data.FieldMetaData("enabled", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WHOLE_NAME, new org.apache.thrift.meta_data.FieldMetaData("wholeName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LICENCE, new org.apache.thrift.meta_data.FieldMetaData("licence", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORGANIZATION_NUM, new org.apache.thrift.meta_data.FieldMetaData("organizationNum", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REFERENCE, new org.apache.thrift.meta_data.FieldMetaData("reference", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PASSWORD, new org.apache.thrift.meta_data.FieldMetaData("password", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTNER_INTRO, new org.apache.thrift.meta_data.FieldMetaData("partnerIntro", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTNER_DISTINCTION, new org.apache.thrift.meta_data.FieldMetaData("partnerDistinction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LICENCE_IMG_URL, new org.apache.thrift.meta_data.FieldMetaData("licenceImgUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TAX_REG_IMG_URL, new org.apache.thrift.meta_data.FieldMetaData("taxRegImgUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EDU_QUALIFICATION_IMG_URL, new org.apache.thrift.meta_data.FieldMetaData("eduQualificationImgUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HQ_LOCATION, new org.apache.thrift.meta_data.FieldMetaData("hqLocation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UNI_REG_LOCATION, new org.apache.thrift.meta_data.FieldMetaData("uniRegLocation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HQ_CONTACT, new org.apache.thrift.meta_data.FieldMetaData("hqContact", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HQ_CONTACT_PHONE, new org.apache.thrift.meta_data.FieldMetaData("hqContactPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HQ_CONTACT_SECOPT, new org.apache.thrift.meta_data.FieldMetaData("hqContactSecopt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COURSE_CONTACT, new org.apache.thrift.meta_data.FieldMetaData("courseContact", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COURSE_CONTACT_PHONE, new org.apache.thrift.meta_data.FieldMetaData("courseContactPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STUDENT_INQUERY_PHONE, new org.apache.thrift.meta_data.FieldMetaData("studentInqueryPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REG_CONTACT, new org.apache.thrift.meta_data.FieldMetaData("regContact", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REG_CONTACT_PHONE, new org.apache.thrift.meta_data.FieldMetaData("regContactPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REG_CONTACT_FAX, new org.apache.thrift.meta_data.FieldMetaData("regContactFax", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUTOFF_DAY, new org.apache.thrift.meta_data.FieldMetaData("cutoffDay", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUTOFF_TIME, new org.apache.thrift.meta_data.FieldMetaData("cutoffTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PARTNER_QUALIFICATION, new org.apache.thrift.meta_data.FieldMetaData("partnerQualification", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_SET, new org.apache.thrift.meta_data.FieldMetaData("idSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.LAST_MODIFY_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("createTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("createTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_LOGIN_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("lastLoginTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_LOGIN_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("lastLoginTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CUTOFF_DAY_START, new org.apache.thrift.meta_data.FieldMetaData("cutoffDayStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUTOFF_DAY_END, new org.apache.thrift.meta_data.FieldMetaData("cutoffDayEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUTOFF_DAY_SET, new org.apache.thrift.meta_data.FieldMetaData("cutoffDaySet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.CUTOFF_TIME_START, new org.apache.thrift.meta_data.FieldMetaData("cutoffTimeStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUTOFF_TIME_END, new org.apache.thrift.meta_data.FieldMetaData("cutoffTimeEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CUTOFF_TIME_SET, new org.apache.thrift.meta_data.FieldMetaData("cutoffTimeSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.PARTNER_QUALIFICATION_START, new org.apache.thrift.meta_data.FieldMetaData("partnerQualificationStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PARTNER_QUALIFICATION_END, new org.apache.thrift.meta_data.FieldMetaData("partnerQualificationEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RATING_START, new org.apache.thrift.meta_data.FieldMetaData("ratingStart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.RATING_END, new org.apache.thrift.meta_data.FieldMetaData("ratingEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TEACHER_LIST, new org.apache.thrift.meta_data.FieldMetaData("teacherList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ishangke.edunav.commoncontract.model.TeacherBo.class))));
    tmpMap.put(_Fields.CLASS_PHOTO_LIST, new org.apache.thrift.meta_data.FieldMetaData("classPhotoList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ishangke.edunav.commoncontract.model.ClassPhotoBo.class))));
    tmpMap.put(_Fields.ADDRESS_LIST, new org.apache.thrift.meta_data.FieldMetaData("addressList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.ishangke.edunav.commoncontract.model.AddressBo.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PartnerBo.class, metaDataMap);
  }

  public PartnerBo() {
  }

  public PartnerBo(
    int id,
    String instName,
    String logoUrl,
    String contract,
    double rating,
    long lastLoginTime,
    long lastModifyTime,
    long createTime,
    int enabled,
    String wholeName,
    String licence,
    String organizationNum,
    String reference,
    String password,
    String partnerIntro,
    String partnerDistinction,
    String licenceImgUrl,
    String taxRegImgUrl,
    String eduQualificationImgUrl,
    String hqLocation,
    int uniRegLocation,
    String hqContact,
    String hqContactPhone,
    String hqContactSecopt,
    String courseContact,
    String courseContactPhone,
    String studentInqueryPhone,
    String regContact,
    String regContactPhone,
    String regContactFax,
    int cutoffDay,
    int cutoffTime,
    int partnerQualification,
    Set<Integer> idSet,
    long lastModifyTimeStart,
    long lastModifyTimeEnd,
    long createTimeStart,
    long createTimeEnd,
    long lastLoginTimeStart,
    long lastLoginTimeEnd,
    int cutoffDayStart,
    int cutoffDayEnd,
    Set<Integer> cutoffDaySet,
    int cutoffTimeStart,
    int cutoffTimeEnd,
    Set<Integer> cutoffTimeSet,
    int partnerQualificationStart,
    int partnerQualificationEnd,
    double ratingStart,
    double ratingEnd,
    List<com.ishangke.edunav.commoncontract.model.TeacherBo> teacherList,
    List<com.ishangke.edunav.commoncontract.model.ClassPhotoBo> classPhotoList,
    List<com.ishangke.edunav.commoncontract.model.AddressBo> addressList)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.instName = instName;
    this.logoUrl = logoUrl;
    this.contract = contract;
    this.rating = rating;
    setRatingIsSet(true);
    this.lastLoginTime = lastLoginTime;
    setLastLoginTimeIsSet(true);
    this.lastModifyTime = lastModifyTime;
    setLastModifyTimeIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.enabled = enabled;
    setEnabledIsSet(true);
    this.wholeName = wholeName;
    this.licence = licence;
    this.organizationNum = organizationNum;
    this.reference = reference;
    this.password = password;
    this.partnerIntro = partnerIntro;
    this.partnerDistinction = partnerDistinction;
    this.licenceImgUrl = licenceImgUrl;
    this.taxRegImgUrl = taxRegImgUrl;
    this.eduQualificationImgUrl = eduQualificationImgUrl;
    this.hqLocation = hqLocation;
    this.uniRegLocation = uniRegLocation;
    setUniRegLocationIsSet(true);
    this.hqContact = hqContact;
    this.hqContactPhone = hqContactPhone;
    this.hqContactSecopt = hqContactSecopt;
    this.courseContact = courseContact;
    this.courseContactPhone = courseContactPhone;
    this.studentInqueryPhone = studentInqueryPhone;
    this.regContact = regContact;
    this.regContactPhone = regContactPhone;
    this.regContactFax = regContactFax;
    this.cutoffDay = cutoffDay;
    setCutoffDayIsSet(true);
    this.cutoffTime = cutoffTime;
    setCutoffTimeIsSet(true);
    this.partnerQualification = partnerQualification;
    setPartnerQualificationIsSet(true);
    this.idSet = idSet;
    this.lastModifyTimeStart = lastModifyTimeStart;
    setLastModifyTimeStartIsSet(true);
    this.lastModifyTimeEnd = lastModifyTimeEnd;
    setLastModifyTimeEndIsSet(true);
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
    this.lastLoginTimeStart = lastLoginTimeStart;
    setLastLoginTimeStartIsSet(true);
    this.lastLoginTimeEnd = lastLoginTimeEnd;
    setLastLoginTimeEndIsSet(true);
    this.cutoffDayStart = cutoffDayStart;
    setCutoffDayStartIsSet(true);
    this.cutoffDayEnd = cutoffDayEnd;
    setCutoffDayEndIsSet(true);
    this.cutoffDaySet = cutoffDaySet;
    this.cutoffTimeStart = cutoffTimeStart;
    setCutoffTimeStartIsSet(true);
    this.cutoffTimeEnd = cutoffTimeEnd;
    setCutoffTimeEndIsSet(true);
    this.cutoffTimeSet = cutoffTimeSet;
    this.partnerQualificationStart = partnerQualificationStart;
    setPartnerQualificationStartIsSet(true);
    this.partnerQualificationEnd = partnerQualificationEnd;
    setPartnerQualificationEndIsSet(true);
    this.ratingStart = ratingStart;
    setRatingStartIsSet(true);
    this.ratingEnd = ratingEnd;
    setRatingEndIsSet(true);
    this.teacherList = teacherList;
    this.classPhotoList = classPhotoList;
    this.addressList = addressList;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PartnerBo(PartnerBo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetInstName()) {
      this.instName = other.instName;
    }
    if (other.isSetLogoUrl()) {
      this.logoUrl = other.logoUrl;
    }
    if (other.isSetContract()) {
      this.contract = other.contract;
    }
    this.rating = other.rating;
    this.lastLoginTime = other.lastLoginTime;
    this.lastModifyTime = other.lastModifyTime;
    this.createTime = other.createTime;
    this.enabled = other.enabled;
    if (other.isSetWholeName()) {
      this.wholeName = other.wholeName;
    }
    if (other.isSetLicence()) {
      this.licence = other.licence;
    }
    if (other.isSetOrganizationNum()) {
      this.organizationNum = other.organizationNum;
    }
    if (other.isSetReference()) {
      this.reference = other.reference;
    }
    if (other.isSetPassword()) {
      this.password = other.password;
    }
    if (other.isSetPartnerIntro()) {
      this.partnerIntro = other.partnerIntro;
    }
    if (other.isSetPartnerDistinction()) {
      this.partnerDistinction = other.partnerDistinction;
    }
    if (other.isSetLicenceImgUrl()) {
      this.licenceImgUrl = other.licenceImgUrl;
    }
    if (other.isSetTaxRegImgUrl()) {
      this.taxRegImgUrl = other.taxRegImgUrl;
    }
    if (other.isSetEduQualificationImgUrl()) {
      this.eduQualificationImgUrl = other.eduQualificationImgUrl;
    }
    if (other.isSetHqLocation()) {
      this.hqLocation = other.hqLocation;
    }
    this.uniRegLocation = other.uniRegLocation;
    if (other.isSetHqContact()) {
      this.hqContact = other.hqContact;
    }
    if (other.isSetHqContactPhone()) {
      this.hqContactPhone = other.hqContactPhone;
    }
    if (other.isSetHqContactSecopt()) {
      this.hqContactSecopt = other.hqContactSecopt;
    }
    if (other.isSetCourseContact()) {
      this.courseContact = other.courseContact;
    }
    if (other.isSetCourseContactPhone()) {
      this.courseContactPhone = other.courseContactPhone;
    }
    if (other.isSetStudentInqueryPhone()) {
      this.studentInqueryPhone = other.studentInqueryPhone;
    }
    if (other.isSetRegContact()) {
      this.regContact = other.regContact;
    }
    if (other.isSetRegContactPhone()) {
      this.regContactPhone = other.regContactPhone;
    }
    if (other.isSetRegContactFax()) {
      this.regContactFax = other.regContactFax;
    }
    this.cutoffDay = other.cutoffDay;
    this.cutoffTime = other.cutoffTime;
    this.partnerQualification = other.partnerQualification;
    if (other.isSetIdSet()) {
      Set<Integer> __this__idSet = new HashSet<Integer>(other.idSet);
      this.idSet = __this__idSet;
    }
    this.lastModifyTimeStart = other.lastModifyTimeStart;
    this.lastModifyTimeEnd = other.lastModifyTimeEnd;
    this.createTimeStart = other.createTimeStart;
    this.createTimeEnd = other.createTimeEnd;
    this.lastLoginTimeStart = other.lastLoginTimeStart;
    this.lastLoginTimeEnd = other.lastLoginTimeEnd;
    this.cutoffDayStart = other.cutoffDayStart;
    this.cutoffDayEnd = other.cutoffDayEnd;
    if (other.isSetCutoffDaySet()) {
      Set<Integer> __this__cutoffDaySet = new HashSet<Integer>(other.cutoffDaySet);
      this.cutoffDaySet = __this__cutoffDaySet;
    }
    this.cutoffTimeStart = other.cutoffTimeStart;
    this.cutoffTimeEnd = other.cutoffTimeEnd;
    if (other.isSetCutoffTimeSet()) {
      Set<Integer> __this__cutoffTimeSet = new HashSet<Integer>(other.cutoffTimeSet);
      this.cutoffTimeSet = __this__cutoffTimeSet;
    }
    this.partnerQualificationStart = other.partnerQualificationStart;
    this.partnerQualificationEnd = other.partnerQualificationEnd;
    this.ratingStart = other.ratingStart;
    this.ratingEnd = other.ratingEnd;
    if (other.isSetTeacherList()) {
      List<com.ishangke.edunav.commoncontract.model.TeacherBo> __this__teacherList = new ArrayList<com.ishangke.edunav.commoncontract.model.TeacherBo>(other.teacherList.size());
      for (com.ishangke.edunav.commoncontract.model.TeacherBo other_element : other.teacherList) {
        __this__teacherList.add(new com.ishangke.edunav.commoncontract.model.TeacherBo(other_element));
      }
      this.teacherList = __this__teacherList;
    }
    if (other.isSetClassPhotoList()) {
      List<com.ishangke.edunav.commoncontract.model.ClassPhotoBo> __this__classPhotoList = new ArrayList<com.ishangke.edunav.commoncontract.model.ClassPhotoBo>(other.classPhotoList.size());
      for (com.ishangke.edunav.commoncontract.model.ClassPhotoBo other_element : other.classPhotoList) {
        __this__classPhotoList.add(new com.ishangke.edunav.commoncontract.model.ClassPhotoBo(other_element));
      }
      this.classPhotoList = __this__classPhotoList;
    }
    if (other.isSetAddressList()) {
      List<com.ishangke.edunav.commoncontract.model.AddressBo> __this__addressList = new ArrayList<com.ishangke.edunav.commoncontract.model.AddressBo>(other.addressList.size());
      for (com.ishangke.edunav.commoncontract.model.AddressBo other_element : other.addressList) {
        __this__addressList.add(new com.ishangke.edunav.commoncontract.model.AddressBo(other_element));
      }
      this.addressList = __this__addressList;
    }
  }

  public PartnerBo deepCopy() {
    return new PartnerBo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.instName = null;
    this.logoUrl = null;
    this.contract = null;
    setRatingIsSet(false);
    this.rating = 0.0;
    setLastLoginTimeIsSet(false);
    this.lastLoginTime = 0;
    setLastModifyTimeIsSet(false);
    this.lastModifyTime = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    setEnabledIsSet(false);
    this.enabled = 0;
    this.wholeName = null;
    this.licence = null;
    this.organizationNum = null;
    this.reference = null;
    this.password = null;
    this.partnerIntro = null;
    this.partnerDistinction = null;
    this.licenceImgUrl = null;
    this.taxRegImgUrl = null;
    this.eduQualificationImgUrl = null;
    this.hqLocation = null;
    setUniRegLocationIsSet(false);
    this.uniRegLocation = 0;
    this.hqContact = null;
    this.hqContactPhone = null;
    this.hqContactSecopt = null;
    this.courseContact = null;
    this.courseContactPhone = null;
    this.studentInqueryPhone = null;
    this.regContact = null;
    this.regContactPhone = null;
    this.regContactFax = null;
    setCutoffDayIsSet(false);
    this.cutoffDay = 0;
    setCutoffTimeIsSet(false);
    this.cutoffTime = 0;
    setPartnerQualificationIsSet(false);
    this.partnerQualification = 0;
    this.idSet = null;
    setLastModifyTimeStartIsSet(false);
    this.lastModifyTimeStart = 0;
    setLastModifyTimeEndIsSet(false);
    this.lastModifyTimeEnd = 0;
    setCreateTimeStartIsSet(false);
    this.createTimeStart = 0;
    setCreateTimeEndIsSet(false);
    this.createTimeEnd = 0;
    setLastLoginTimeStartIsSet(false);
    this.lastLoginTimeStart = 0;
    setLastLoginTimeEndIsSet(false);
    this.lastLoginTimeEnd = 0;
    setCutoffDayStartIsSet(false);
    this.cutoffDayStart = 0;
    setCutoffDayEndIsSet(false);
    this.cutoffDayEnd = 0;
    this.cutoffDaySet = null;
    setCutoffTimeStartIsSet(false);
    this.cutoffTimeStart = 0;
    setCutoffTimeEndIsSet(false);
    this.cutoffTimeEnd = 0;
    this.cutoffTimeSet = null;
    setPartnerQualificationStartIsSet(false);
    this.partnerQualificationStart = 0;
    setPartnerQualificationEndIsSet(false);
    this.partnerQualificationEnd = 0;
    setRatingStartIsSet(false);
    this.ratingStart = 0.0;
    setRatingEndIsSet(false);
    this.ratingEnd = 0.0;
    this.teacherList = null;
    this.classPhotoList = null;
    this.addressList = null;
  }

  public int getId() {
    return this.id;
  }

  public PartnerBo setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getInstName() {
    return this.instName;
  }

  public PartnerBo setInstName(String instName) {
    this.instName = instName;
    return this;
  }

  public void unsetInstName() {
    this.instName = null;
  }

  /** Returns true if field instName is set (has been assigned a value) and false otherwise */
  public boolean isSetInstName() {
    return this.instName != null;
  }

  public void setInstNameIsSet(boolean value) {
    if (!value) {
      this.instName = null;
    }
  }

  public String getLogoUrl() {
    return this.logoUrl;
  }

  public PartnerBo setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

  public void unsetLogoUrl() {
    this.logoUrl = null;
  }

  /** Returns true if field logoUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetLogoUrl() {
    return this.logoUrl != null;
  }

  public void setLogoUrlIsSet(boolean value) {
    if (!value) {
      this.logoUrl = null;
    }
  }

  public String getContract() {
    return this.contract;
  }

  public PartnerBo setContract(String contract) {
    this.contract = contract;
    return this;
  }

  public void unsetContract() {
    this.contract = null;
  }

  /** Returns true if field contract is set (has been assigned a value) and false otherwise */
  public boolean isSetContract() {
    return this.contract != null;
  }

  public void setContractIsSet(boolean value) {
    if (!value) {
      this.contract = null;
    }
  }

  public double getRating() {
    return this.rating;
  }

  public PartnerBo setRating(double rating) {
    this.rating = rating;
    setRatingIsSet(true);
    return this;
  }

  public void unsetRating() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RATING_ISSET_ID);
  }

  /** Returns true if field rating is set (has been assigned a value) and false otherwise */
  public boolean isSetRating() {
    return EncodingUtils.testBit(__isset_bitfield, __RATING_ISSET_ID);
  }

  public void setRatingIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RATING_ISSET_ID, value);
  }

  public long getLastLoginTime() {
    return this.lastLoginTime;
  }

  public PartnerBo setLastLoginTime(long lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
    setLastLoginTimeIsSet(true);
    return this;
  }

  public void unsetLastLoginTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTLOGINTIME_ISSET_ID);
  }

  /** Returns true if field lastLoginTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLastLoginTime() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTLOGINTIME_ISSET_ID);
  }

  public void setLastLoginTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTLOGINTIME_ISSET_ID, value);
  }

  public long getLastModifyTime() {
    return this.lastModifyTime;
  }

  public PartnerBo setLastModifyTime(long lastModifyTime) {
    this.lastModifyTime = lastModifyTime;
    setLastModifyTimeIsSet(true);
    return this;
  }

  public void unsetLastModifyTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID);
  }

  /** Returns true if field lastModifyTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTime() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID);
  }

  public void setLastModifyTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIME_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public PartnerBo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public int getEnabled() {
    return this.enabled;
  }

  public PartnerBo setEnabled(int enabled) {
    this.enabled = enabled;
    setEnabledIsSet(true);
    return this;
  }

  public void unsetEnabled() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENABLED_ISSET_ID);
  }

  /** Returns true if field enabled is set (has been assigned a value) and false otherwise */
  public boolean isSetEnabled() {
    return EncodingUtils.testBit(__isset_bitfield, __ENABLED_ISSET_ID);
  }

  public void setEnabledIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENABLED_ISSET_ID, value);
  }

  public String getWholeName() {
    return this.wholeName;
  }

  public PartnerBo setWholeName(String wholeName) {
    this.wholeName = wholeName;
    return this;
  }

  public void unsetWholeName() {
    this.wholeName = null;
  }

  /** Returns true if field wholeName is set (has been assigned a value) and false otherwise */
  public boolean isSetWholeName() {
    return this.wholeName != null;
  }

  public void setWholeNameIsSet(boolean value) {
    if (!value) {
      this.wholeName = null;
    }
  }

  public String getLicence() {
    return this.licence;
  }

  public PartnerBo setLicence(String licence) {
    this.licence = licence;
    return this;
  }

  public void unsetLicence() {
    this.licence = null;
  }

  /** Returns true if field licence is set (has been assigned a value) and false otherwise */
  public boolean isSetLicence() {
    return this.licence != null;
  }

  public void setLicenceIsSet(boolean value) {
    if (!value) {
      this.licence = null;
    }
  }

  public String getOrganizationNum() {
    return this.organizationNum;
  }

  public PartnerBo setOrganizationNum(String organizationNum) {
    this.organizationNum = organizationNum;
    return this;
  }

  public void unsetOrganizationNum() {
    this.organizationNum = null;
  }

  /** Returns true if field organizationNum is set (has been assigned a value) and false otherwise */
  public boolean isSetOrganizationNum() {
    return this.organizationNum != null;
  }

  public void setOrganizationNumIsSet(boolean value) {
    if (!value) {
      this.organizationNum = null;
    }
  }

  public String getReference() {
    return this.reference;
  }

  public PartnerBo setReference(String reference) {
    this.reference = reference;
    return this;
  }

  public void unsetReference() {
    this.reference = null;
  }

  /** Returns true if field reference is set (has been assigned a value) and false otherwise */
  public boolean isSetReference() {
    return this.reference != null;
  }

  public void setReferenceIsSet(boolean value) {
    if (!value) {
      this.reference = null;
    }
  }

  public String getPassword() {
    return this.password;
  }

  public PartnerBo setPassword(String password) {
    this.password = password;
    return this;
  }

  public void unsetPassword() {
    this.password = null;
  }

  /** Returns true if field password is set (has been assigned a value) and false otherwise */
  public boolean isSetPassword() {
    return this.password != null;
  }

  public void setPasswordIsSet(boolean value) {
    if (!value) {
      this.password = null;
    }
  }

  public String getPartnerIntro() {
    return this.partnerIntro;
  }

  public PartnerBo setPartnerIntro(String partnerIntro) {
    this.partnerIntro = partnerIntro;
    return this;
  }

  public void unsetPartnerIntro() {
    this.partnerIntro = null;
  }

  /** Returns true if field partnerIntro is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerIntro() {
    return this.partnerIntro != null;
  }

  public void setPartnerIntroIsSet(boolean value) {
    if (!value) {
      this.partnerIntro = null;
    }
  }

  public String getPartnerDistinction() {
    return this.partnerDistinction;
  }

  public PartnerBo setPartnerDistinction(String partnerDistinction) {
    this.partnerDistinction = partnerDistinction;
    return this;
  }

  public void unsetPartnerDistinction() {
    this.partnerDistinction = null;
  }

  /** Returns true if field partnerDistinction is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerDistinction() {
    return this.partnerDistinction != null;
  }

  public void setPartnerDistinctionIsSet(boolean value) {
    if (!value) {
      this.partnerDistinction = null;
    }
  }

  public String getLicenceImgUrl() {
    return this.licenceImgUrl;
  }

  public PartnerBo setLicenceImgUrl(String licenceImgUrl) {
    this.licenceImgUrl = licenceImgUrl;
    return this;
  }

  public void unsetLicenceImgUrl() {
    this.licenceImgUrl = null;
  }

  /** Returns true if field licenceImgUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetLicenceImgUrl() {
    return this.licenceImgUrl != null;
  }

  public void setLicenceImgUrlIsSet(boolean value) {
    if (!value) {
      this.licenceImgUrl = null;
    }
  }

  public String getTaxRegImgUrl() {
    return this.taxRegImgUrl;
  }

  public PartnerBo setTaxRegImgUrl(String taxRegImgUrl) {
    this.taxRegImgUrl = taxRegImgUrl;
    return this;
  }

  public void unsetTaxRegImgUrl() {
    this.taxRegImgUrl = null;
  }

  /** Returns true if field taxRegImgUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetTaxRegImgUrl() {
    return this.taxRegImgUrl != null;
  }

  public void setTaxRegImgUrlIsSet(boolean value) {
    if (!value) {
      this.taxRegImgUrl = null;
    }
  }

  public String getEduQualificationImgUrl() {
    return this.eduQualificationImgUrl;
  }

  public PartnerBo setEduQualificationImgUrl(String eduQualificationImgUrl) {
    this.eduQualificationImgUrl = eduQualificationImgUrl;
    return this;
  }

  public void unsetEduQualificationImgUrl() {
    this.eduQualificationImgUrl = null;
  }

  /** Returns true if field eduQualificationImgUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetEduQualificationImgUrl() {
    return this.eduQualificationImgUrl != null;
  }

  public void setEduQualificationImgUrlIsSet(boolean value) {
    if (!value) {
      this.eduQualificationImgUrl = null;
    }
  }

  public String getHqLocation() {
    return this.hqLocation;
  }

  public PartnerBo setHqLocation(String hqLocation) {
    this.hqLocation = hqLocation;
    return this;
  }

  public void unsetHqLocation() {
    this.hqLocation = null;
  }

  /** Returns true if field hqLocation is set (has been assigned a value) and false otherwise */
  public boolean isSetHqLocation() {
    return this.hqLocation != null;
  }

  public void setHqLocationIsSet(boolean value) {
    if (!value) {
      this.hqLocation = null;
    }
  }

  public int getUniRegLocation() {
    return this.uniRegLocation;
  }

  public PartnerBo setUniRegLocation(int uniRegLocation) {
    this.uniRegLocation = uniRegLocation;
    setUniRegLocationIsSet(true);
    return this;
  }

  public void unsetUniRegLocation() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UNIREGLOCATION_ISSET_ID);
  }

  /** Returns true if field uniRegLocation is set (has been assigned a value) and false otherwise */
  public boolean isSetUniRegLocation() {
    return EncodingUtils.testBit(__isset_bitfield, __UNIREGLOCATION_ISSET_ID);
  }

  public void setUniRegLocationIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UNIREGLOCATION_ISSET_ID, value);
  }

  public String getHqContact() {
    return this.hqContact;
  }

  public PartnerBo setHqContact(String hqContact) {
    this.hqContact = hqContact;
    return this;
  }

  public void unsetHqContact() {
    this.hqContact = null;
  }

  /** Returns true if field hqContact is set (has been assigned a value) and false otherwise */
  public boolean isSetHqContact() {
    return this.hqContact != null;
  }

  public void setHqContactIsSet(boolean value) {
    if (!value) {
      this.hqContact = null;
    }
  }

  public String getHqContactPhone() {
    return this.hqContactPhone;
  }

  public PartnerBo setHqContactPhone(String hqContactPhone) {
    this.hqContactPhone = hqContactPhone;
    return this;
  }

  public void unsetHqContactPhone() {
    this.hqContactPhone = null;
  }

  /** Returns true if field hqContactPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetHqContactPhone() {
    return this.hqContactPhone != null;
  }

  public void setHqContactPhoneIsSet(boolean value) {
    if (!value) {
      this.hqContactPhone = null;
    }
  }

  public String getHqContactSecopt() {
    return this.hqContactSecopt;
  }

  public PartnerBo setHqContactSecopt(String hqContactSecopt) {
    this.hqContactSecopt = hqContactSecopt;
    return this;
  }

  public void unsetHqContactSecopt() {
    this.hqContactSecopt = null;
  }

  /** Returns true if field hqContactSecopt is set (has been assigned a value) and false otherwise */
  public boolean isSetHqContactSecopt() {
    return this.hqContactSecopt != null;
  }

  public void setHqContactSecoptIsSet(boolean value) {
    if (!value) {
      this.hqContactSecopt = null;
    }
  }

  public String getCourseContact() {
    return this.courseContact;
  }

  public PartnerBo setCourseContact(String courseContact) {
    this.courseContact = courseContact;
    return this;
  }

  public void unsetCourseContact() {
    this.courseContact = null;
  }

  /** Returns true if field courseContact is set (has been assigned a value) and false otherwise */
  public boolean isSetCourseContact() {
    return this.courseContact != null;
  }

  public void setCourseContactIsSet(boolean value) {
    if (!value) {
      this.courseContact = null;
    }
  }

  public String getCourseContactPhone() {
    return this.courseContactPhone;
  }

  public PartnerBo setCourseContactPhone(String courseContactPhone) {
    this.courseContactPhone = courseContactPhone;
    return this;
  }

  public void unsetCourseContactPhone() {
    this.courseContactPhone = null;
  }

  /** Returns true if field courseContactPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetCourseContactPhone() {
    return this.courseContactPhone != null;
  }

  public void setCourseContactPhoneIsSet(boolean value) {
    if (!value) {
      this.courseContactPhone = null;
    }
  }

  public String getStudentInqueryPhone() {
    return this.studentInqueryPhone;
  }

  public PartnerBo setStudentInqueryPhone(String studentInqueryPhone) {
    this.studentInqueryPhone = studentInqueryPhone;
    return this;
  }

  public void unsetStudentInqueryPhone() {
    this.studentInqueryPhone = null;
  }

  /** Returns true if field studentInqueryPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetStudentInqueryPhone() {
    return this.studentInqueryPhone != null;
  }

  public void setStudentInqueryPhoneIsSet(boolean value) {
    if (!value) {
      this.studentInqueryPhone = null;
    }
  }

  public String getRegContact() {
    return this.regContact;
  }

  public PartnerBo setRegContact(String regContact) {
    this.regContact = regContact;
    return this;
  }

  public void unsetRegContact() {
    this.regContact = null;
  }

  /** Returns true if field regContact is set (has been assigned a value) and false otherwise */
  public boolean isSetRegContact() {
    return this.regContact != null;
  }

  public void setRegContactIsSet(boolean value) {
    if (!value) {
      this.regContact = null;
    }
  }

  public String getRegContactPhone() {
    return this.regContactPhone;
  }

  public PartnerBo setRegContactPhone(String regContactPhone) {
    this.regContactPhone = regContactPhone;
    return this;
  }

  public void unsetRegContactPhone() {
    this.regContactPhone = null;
  }

  /** Returns true if field regContactPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetRegContactPhone() {
    return this.regContactPhone != null;
  }

  public void setRegContactPhoneIsSet(boolean value) {
    if (!value) {
      this.regContactPhone = null;
    }
  }

  public String getRegContactFax() {
    return this.regContactFax;
  }

  public PartnerBo setRegContactFax(String regContactFax) {
    this.regContactFax = regContactFax;
    return this;
  }

  public void unsetRegContactFax() {
    this.regContactFax = null;
  }

  /** Returns true if field regContactFax is set (has been assigned a value) and false otherwise */
  public boolean isSetRegContactFax() {
    return this.regContactFax != null;
  }

  public void setRegContactFaxIsSet(boolean value) {
    if (!value) {
      this.regContactFax = null;
    }
  }

  public int getCutoffDay() {
    return this.cutoffDay;
  }

  public PartnerBo setCutoffDay(int cutoffDay) {
    this.cutoffDay = cutoffDay;
    setCutoffDayIsSet(true);
    return this;
  }

  public void unsetCutoffDay() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUTOFFDAY_ISSET_ID);
  }

  /** Returns true if field cutoffDay is set (has been assigned a value) and false otherwise */
  public boolean isSetCutoffDay() {
    return EncodingUtils.testBit(__isset_bitfield, __CUTOFFDAY_ISSET_ID);
  }

  public void setCutoffDayIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUTOFFDAY_ISSET_ID, value);
  }

  public int getCutoffTime() {
    return this.cutoffTime;
  }

  public PartnerBo setCutoffTime(int cutoffTime) {
    this.cutoffTime = cutoffTime;
    setCutoffTimeIsSet(true);
    return this;
  }

  public void unsetCutoffTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUTOFFTIME_ISSET_ID);
  }

  /** Returns true if field cutoffTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCutoffTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CUTOFFTIME_ISSET_ID);
  }

  public void setCutoffTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUTOFFTIME_ISSET_ID, value);
  }

  public int getPartnerQualification() {
    return this.partnerQualification;
  }

  public PartnerBo setPartnerQualification(int partnerQualification) {
    this.partnerQualification = partnerQualification;
    setPartnerQualificationIsSet(true);
    return this;
  }

  public void unsetPartnerQualification() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PARTNERQUALIFICATION_ISSET_ID);
  }

  /** Returns true if field partnerQualification is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerQualification() {
    return EncodingUtils.testBit(__isset_bitfield, __PARTNERQUALIFICATION_ISSET_ID);
  }

  public void setPartnerQualificationIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PARTNERQUALIFICATION_ISSET_ID, value);
  }

  public int getIdSetSize() {
    return (this.idSet == null) ? 0 : this.idSet.size();
  }

  public java.util.Iterator<Integer> getIdSetIterator() {
    return (this.idSet == null) ? null : this.idSet.iterator();
  }

  public void addToIdSet(int elem) {
    if (this.idSet == null) {
      this.idSet = new HashSet<Integer>();
    }
    this.idSet.add(elem);
  }

  public Set<Integer> getIdSet() {
    return this.idSet;
  }

  public PartnerBo setIdSet(Set<Integer> idSet) {
    this.idSet = idSet;
    return this;
  }

  public void unsetIdSet() {
    this.idSet = null;
  }

  /** Returns true if field idSet is set (has been assigned a value) and false otherwise */
  public boolean isSetIdSet() {
    return this.idSet != null;
  }

  public void setIdSetIsSet(boolean value) {
    if (!value) {
      this.idSet = null;
    }
  }

  public long getLastModifyTimeStart() {
    return this.lastModifyTimeStart;
  }

  public PartnerBo setLastModifyTimeStart(long lastModifyTimeStart) {
    this.lastModifyTimeStart = lastModifyTimeStart;
    setLastModifyTimeStartIsSet(true);
    return this;
  }

  public void unsetLastModifyTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID);
  }

  /** Returns true if field lastModifyTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID);
  }

  public void setLastModifyTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMESTART_ISSET_ID, value);
  }

  public long getLastModifyTimeEnd() {
    return this.lastModifyTimeEnd;
  }

  public PartnerBo setLastModifyTimeEnd(long lastModifyTimeEnd) {
    this.lastModifyTimeEnd = lastModifyTimeEnd;
    setLastModifyTimeEndIsSet(true);
    return this;
  }

  public void unsetLastModifyTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID);
  }

  /** Returns true if field lastModifyTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID);
  }

  public void setLastModifyTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMEEND_ISSET_ID, value);
  }

  public long getCreateTimeStart() {
    return this.createTimeStart;
  }

  public PartnerBo setCreateTimeStart(long createTimeStart) {
    this.createTimeStart = createTimeStart;
    setCreateTimeStartIsSet(true);
    return this;
  }

  public void unsetCreateTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  /** Returns true if field createTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID);
  }

  public void setCreateTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTART_ISSET_ID, value);
  }

  public long getCreateTimeEnd() {
    return this.createTimeEnd;
  }

  public PartnerBo setCreateTimeEnd(long createTimeEnd) {
    this.createTimeEnd = createTimeEnd;
    setCreateTimeEndIsSet(true);
    return this;
  }

  public void unsetCreateTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  /** Returns true if field createTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID);
  }

  public void setCreateTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMEEND_ISSET_ID, value);
  }

  public long getLastLoginTimeStart() {
    return this.lastLoginTimeStart;
  }

  public PartnerBo setLastLoginTimeStart(long lastLoginTimeStart) {
    this.lastLoginTimeStart = lastLoginTimeStart;
    setLastLoginTimeStartIsSet(true);
    return this;
  }

  public void unsetLastLoginTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTLOGINTIMESTART_ISSET_ID);
  }

  /** Returns true if field lastLoginTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetLastLoginTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTLOGINTIMESTART_ISSET_ID);
  }

  public void setLastLoginTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTLOGINTIMESTART_ISSET_ID, value);
  }

  public long getLastLoginTimeEnd() {
    return this.lastLoginTimeEnd;
  }

  public PartnerBo setLastLoginTimeEnd(long lastLoginTimeEnd) {
    this.lastLoginTimeEnd = lastLoginTimeEnd;
    setLastLoginTimeEndIsSet(true);
    return this;
  }

  public void unsetLastLoginTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTLOGINTIMEEND_ISSET_ID);
  }

  /** Returns true if field lastLoginTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetLastLoginTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTLOGINTIMEEND_ISSET_ID);
  }

  public void setLastLoginTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTLOGINTIMEEND_ISSET_ID, value);
  }

  public int getCutoffDayStart() {
    return this.cutoffDayStart;
  }

  public PartnerBo setCutoffDayStart(int cutoffDayStart) {
    this.cutoffDayStart = cutoffDayStart;
    setCutoffDayStartIsSet(true);
    return this;
  }

  public void unsetCutoffDayStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUTOFFDAYSTART_ISSET_ID);
  }

  /** Returns true if field cutoffDayStart is set (has been assigned a value) and false otherwise */
  public boolean isSetCutoffDayStart() {
    return EncodingUtils.testBit(__isset_bitfield, __CUTOFFDAYSTART_ISSET_ID);
  }

  public void setCutoffDayStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUTOFFDAYSTART_ISSET_ID, value);
  }

  public int getCutoffDayEnd() {
    return this.cutoffDayEnd;
  }

  public PartnerBo setCutoffDayEnd(int cutoffDayEnd) {
    this.cutoffDayEnd = cutoffDayEnd;
    setCutoffDayEndIsSet(true);
    return this;
  }

  public void unsetCutoffDayEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUTOFFDAYEND_ISSET_ID);
  }

  /** Returns true if field cutoffDayEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetCutoffDayEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __CUTOFFDAYEND_ISSET_ID);
  }

  public void setCutoffDayEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUTOFFDAYEND_ISSET_ID, value);
  }

  public int getCutoffDaySetSize() {
    return (this.cutoffDaySet == null) ? 0 : this.cutoffDaySet.size();
  }

  public java.util.Iterator<Integer> getCutoffDaySetIterator() {
    return (this.cutoffDaySet == null) ? null : this.cutoffDaySet.iterator();
  }

  public void addToCutoffDaySet(int elem) {
    if (this.cutoffDaySet == null) {
      this.cutoffDaySet = new HashSet<Integer>();
    }
    this.cutoffDaySet.add(elem);
  }

  public Set<Integer> getCutoffDaySet() {
    return this.cutoffDaySet;
  }

  public PartnerBo setCutoffDaySet(Set<Integer> cutoffDaySet) {
    this.cutoffDaySet = cutoffDaySet;
    return this;
  }

  public void unsetCutoffDaySet() {
    this.cutoffDaySet = null;
  }

  /** Returns true if field cutoffDaySet is set (has been assigned a value) and false otherwise */
  public boolean isSetCutoffDaySet() {
    return this.cutoffDaySet != null;
  }

  public void setCutoffDaySetIsSet(boolean value) {
    if (!value) {
      this.cutoffDaySet = null;
    }
  }

  public int getCutoffTimeStart() {
    return this.cutoffTimeStart;
  }

  public PartnerBo setCutoffTimeStart(int cutoffTimeStart) {
    this.cutoffTimeStart = cutoffTimeStart;
    setCutoffTimeStartIsSet(true);
    return this;
  }

  public void unsetCutoffTimeStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUTOFFTIMESTART_ISSET_ID);
  }

  /** Returns true if field cutoffTimeStart is set (has been assigned a value) and false otherwise */
  public boolean isSetCutoffTimeStart() {
    return EncodingUtils.testBit(__isset_bitfield, __CUTOFFTIMESTART_ISSET_ID);
  }

  public void setCutoffTimeStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUTOFFTIMESTART_ISSET_ID, value);
  }

  public int getCutoffTimeEnd() {
    return this.cutoffTimeEnd;
  }

  public PartnerBo setCutoffTimeEnd(int cutoffTimeEnd) {
    this.cutoffTimeEnd = cutoffTimeEnd;
    setCutoffTimeEndIsSet(true);
    return this;
  }

  public void unsetCutoffTimeEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUTOFFTIMEEND_ISSET_ID);
  }

  /** Returns true if field cutoffTimeEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetCutoffTimeEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __CUTOFFTIMEEND_ISSET_ID);
  }

  public void setCutoffTimeEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUTOFFTIMEEND_ISSET_ID, value);
  }

  public int getCutoffTimeSetSize() {
    return (this.cutoffTimeSet == null) ? 0 : this.cutoffTimeSet.size();
  }

  public java.util.Iterator<Integer> getCutoffTimeSetIterator() {
    return (this.cutoffTimeSet == null) ? null : this.cutoffTimeSet.iterator();
  }

  public void addToCutoffTimeSet(int elem) {
    if (this.cutoffTimeSet == null) {
      this.cutoffTimeSet = new HashSet<Integer>();
    }
    this.cutoffTimeSet.add(elem);
  }

  public Set<Integer> getCutoffTimeSet() {
    return this.cutoffTimeSet;
  }

  public PartnerBo setCutoffTimeSet(Set<Integer> cutoffTimeSet) {
    this.cutoffTimeSet = cutoffTimeSet;
    return this;
  }

  public void unsetCutoffTimeSet() {
    this.cutoffTimeSet = null;
  }

  /** Returns true if field cutoffTimeSet is set (has been assigned a value) and false otherwise */
  public boolean isSetCutoffTimeSet() {
    return this.cutoffTimeSet != null;
  }

  public void setCutoffTimeSetIsSet(boolean value) {
    if (!value) {
      this.cutoffTimeSet = null;
    }
  }

  public int getPartnerQualificationStart() {
    return this.partnerQualificationStart;
  }

  public PartnerBo setPartnerQualificationStart(int partnerQualificationStart) {
    this.partnerQualificationStart = partnerQualificationStart;
    setPartnerQualificationStartIsSet(true);
    return this;
  }

  public void unsetPartnerQualificationStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PARTNERQUALIFICATIONSTART_ISSET_ID);
  }

  /** Returns true if field partnerQualificationStart is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerQualificationStart() {
    return EncodingUtils.testBit(__isset_bitfield, __PARTNERQUALIFICATIONSTART_ISSET_ID);
  }

  public void setPartnerQualificationStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PARTNERQUALIFICATIONSTART_ISSET_ID, value);
  }

  public int getPartnerQualificationEnd() {
    return this.partnerQualificationEnd;
  }

  public PartnerBo setPartnerQualificationEnd(int partnerQualificationEnd) {
    this.partnerQualificationEnd = partnerQualificationEnd;
    setPartnerQualificationEndIsSet(true);
    return this;
  }

  public void unsetPartnerQualificationEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PARTNERQUALIFICATIONEND_ISSET_ID);
  }

  /** Returns true if field partnerQualificationEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetPartnerQualificationEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __PARTNERQUALIFICATIONEND_ISSET_ID);
  }

  public void setPartnerQualificationEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PARTNERQUALIFICATIONEND_ISSET_ID, value);
  }

  public double getRatingStart() {
    return this.ratingStart;
  }

  public PartnerBo setRatingStart(double ratingStart) {
    this.ratingStart = ratingStart;
    setRatingStartIsSet(true);
    return this;
  }

  public void unsetRatingStart() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RATINGSTART_ISSET_ID);
  }

  /** Returns true if field ratingStart is set (has been assigned a value) and false otherwise */
  public boolean isSetRatingStart() {
    return EncodingUtils.testBit(__isset_bitfield, __RATINGSTART_ISSET_ID);
  }

  public void setRatingStartIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RATINGSTART_ISSET_ID, value);
  }

  public double getRatingEnd() {
    return this.ratingEnd;
  }

  public PartnerBo setRatingEnd(double ratingEnd) {
    this.ratingEnd = ratingEnd;
    setRatingEndIsSet(true);
    return this;
  }

  public void unsetRatingEnd() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RATINGEND_ISSET_ID);
  }

  /** Returns true if field ratingEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetRatingEnd() {
    return EncodingUtils.testBit(__isset_bitfield, __RATINGEND_ISSET_ID);
  }

  public void setRatingEndIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RATINGEND_ISSET_ID, value);
  }

  public int getTeacherListSize() {
    return (this.teacherList == null) ? 0 : this.teacherList.size();
  }

  public java.util.Iterator<com.ishangke.edunav.commoncontract.model.TeacherBo> getTeacherListIterator() {
    return (this.teacherList == null) ? null : this.teacherList.iterator();
  }

  public void addToTeacherList(com.ishangke.edunav.commoncontract.model.TeacherBo elem) {
    if (this.teacherList == null) {
      this.teacherList = new ArrayList<com.ishangke.edunav.commoncontract.model.TeacherBo>();
    }
    this.teacherList.add(elem);
  }

  public List<com.ishangke.edunav.commoncontract.model.TeacherBo> getTeacherList() {
    return this.teacherList;
  }

  public PartnerBo setTeacherList(List<com.ishangke.edunav.commoncontract.model.TeacherBo> teacherList) {
    this.teacherList = teacherList;
    return this;
  }

  public void unsetTeacherList() {
    this.teacherList = null;
  }

  /** Returns true if field teacherList is set (has been assigned a value) and false otherwise */
  public boolean isSetTeacherList() {
    return this.teacherList != null;
  }

  public void setTeacherListIsSet(boolean value) {
    if (!value) {
      this.teacherList = null;
    }
  }

  public int getClassPhotoListSize() {
    return (this.classPhotoList == null) ? 0 : this.classPhotoList.size();
  }

  public java.util.Iterator<com.ishangke.edunav.commoncontract.model.ClassPhotoBo> getClassPhotoListIterator() {
    return (this.classPhotoList == null) ? null : this.classPhotoList.iterator();
  }

  public void addToClassPhotoList(com.ishangke.edunav.commoncontract.model.ClassPhotoBo elem) {
    if (this.classPhotoList == null) {
      this.classPhotoList = new ArrayList<com.ishangke.edunav.commoncontract.model.ClassPhotoBo>();
    }
    this.classPhotoList.add(elem);
  }

  public List<com.ishangke.edunav.commoncontract.model.ClassPhotoBo> getClassPhotoList() {
    return this.classPhotoList;
  }

  public PartnerBo setClassPhotoList(List<com.ishangke.edunav.commoncontract.model.ClassPhotoBo> classPhotoList) {
    this.classPhotoList = classPhotoList;
    return this;
  }

  public void unsetClassPhotoList() {
    this.classPhotoList = null;
  }

  /** Returns true if field classPhotoList is set (has been assigned a value) and false otherwise */
  public boolean isSetClassPhotoList() {
    return this.classPhotoList != null;
  }

  public void setClassPhotoListIsSet(boolean value) {
    if (!value) {
      this.classPhotoList = null;
    }
  }

  public int getAddressListSize() {
    return (this.addressList == null) ? 0 : this.addressList.size();
  }

  public java.util.Iterator<com.ishangke.edunav.commoncontract.model.AddressBo> getAddressListIterator() {
    return (this.addressList == null) ? null : this.addressList.iterator();
  }

  public void addToAddressList(com.ishangke.edunav.commoncontract.model.AddressBo elem) {
    if (this.addressList == null) {
      this.addressList = new ArrayList<com.ishangke.edunav.commoncontract.model.AddressBo>();
    }
    this.addressList.add(elem);
  }

  public List<com.ishangke.edunav.commoncontract.model.AddressBo> getAddressList() {
    return this.addressList;
  }

  public PartnerBo setAddressList(List<com.ishangke.edunav.commoncontract.model.AddressBo> addressList) {
    this.addressList = addressList;
    return this;
  }

  public void unsetAddressList() {
    this.addressList = null;
  }

  /** Returns true if field addressList is set (has been assigned a value) and false otherwise */
  public boolean isSetAddressList() {
    return this.addressList != null;
  }

  public void setAddressListIsSet(boolean value) {
    if (!value) {
      this.addressList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case INST_NAME:
      if (value == null) {
        unsetInstName();
      } else {
        setInstName((String)value);
      }
      break;

    case LOGO_URL:
      if (value == null) {
        unsetLogoUrl();
      } else {
        setLogoUrl((String)value);
      }
      break;

    case CONTRACT:
      if (value == null) {
        unsetContract();
      } else {
        setContract((String)value);
      }
      break;

    case RATING:
      if (value == null) {
        unsetRating();
      } else {
        setRating((Double)value);
      }
      break;

    case LAST_LOGIN_TIME:
      if (value == null) {
        unsetLastLoginTime();
      } else {
        setLastLoginTime((Long)value);
      }
      break;

    case LAST_MODIFY_TIME:
      if (value == null) {
        unsetLastModifyTime();
      } else {
        setLastModifyTime((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case ENABLED:
      if (value == null) {
        unsetEnabled();
      } else {
        setEnabled((Integer)value);
      }
      break;

    case WHOLE_NAME:
      if (value == null) {
        unsetWholeName();
      } else {
        setWholeName((String)value);
      }
      break;

    case LICENCE:
      if (value == null) {
        unsetLicence();
      } else {
        setLicence((String)value);
      }
      break;

    case ORGANIZATION_NUM:
      if (value == null) {
        unsetOrganizationNum();
      } else {
        setOrganizationNum((String)value);
      }
      break;

    case REFERENCE:
      if (value == null) {
        unsetReference();
      } else {
        setReference((String)value);
      }
      break;

    case PASSWORD:
      if (value == null) {
        unsetPassword();
      } else {
        setPassword((String)value);
      }
      break;

    case PARTNER_INTRO:
      if (value == null) {
        unsetPartnerIntro();
      } else {
        setPartnerIntro((String)value);
      }
      break;

    case PARTNER_DISTINCTION:
      if (value == null) {
        unsetPartnerDistinction();
      } else {
        setPartnerDistinction((String)value);
      }
      break;

    case LICENCE_IMG_URL:
      if (value == null) {
        unsetLicenceImgUrl();
      } else {
        setLicenceImgUrl((String)value);
      }
      break;

    case TAX_REG_IMG_URL:
      if (value == null) {
        unsetTaxRegImgUrl();
      } else {
        setTaxRegImgUrl((String)value);
      }
      break;

    case EDU_QUALIFICATION_IMG_URL:
      if (value == null) {
        unsetEduQualificationImgUrl();
      } else {
        setEduQualificationImgUrl((String)value);
      }
      break;

    case HQ_LOCATION:
      if (value == null) {
        unsetHqLocation();
      } else {
        setHqLocation((String)value);
      }
      break;

    case UNI_REG_LOCATION:
      if (value == null) {
        unsetUniRegLocation();
      } else {
        setUniRegLocation((Integer)value);
      }
      break;

    case HQ_CONTACT:
      if (value == null) {
        unsetHqContact();
      } else {
        setHqContact((String)value);
      }
      break;

    case HQ_CONTACT_PHONE:
      if (value == null) {
        unsetHqContactPhone();
      } else {
        setHqContactPhone((String)value);
      }
      break;

    case HQ_CONTACT_SECOPT:
      if (value == null) {
        unsetHqContactSecopt();
      } else {
        setHqContactSecopt((String)value);
      }
      break;

    case COURSE_CONTACT:
      if (value == null) {
        unsetCourseContact();
      } else {
        setCourseContact((String)value);
      }
      break;

    case COURSE_CONTACT_PHONE:
      if (value == null) {
        unsetCourseContactPhone();
      } else {
        setCourseContactPhone((String)value);
      }
      break;

    case STUDENT_INQUERY_PHONE:
      if (value == null) {
        unsetStudentInqueryPhone();
      } else {
        setStudentInqueryPhone((String)value);
      }
      break;

    case REG_CONTACT:
      if (value == null) {
        unsetRegContact();
      } else {
        setRegContact((String)value);
      }
      break;

    case REG_CONTACT_PHONE:
      if (value == null) {
        unsetRegContactPhone();
      } else {
        setRegContactPhone((String)value);
      }
      break;

    case REG_CONTACT_FAX:
      if (value == null) {
        unsetRegContactFax();
      } else {
        setRegContactFax((String)value);
      }
      break;

    case CUTOFF_DAY:
      if (value == null) {
        unsetCutoffDay();
      } else {
        setCutoffDay((Integer)value);
      }
      break;

    case CUTOFF_TIME:
      if (value == null) {
        unsetCutoffTime();
      } else {
        setCutoffTime((Integer)value);
      }
      break;

    case PARTNER_QUALIFICATION:
      if (value == null) {
        unsetPartnerQualification();
      } else {
        setPartnerQualification((Integer)value);
      }
      break;

    case ID_SET:
      if (value == null) {
        unsetIdSet();
      } else {
        setIdSet((Set<Integer>)value);
      }
      break;

    case LAST_MODIFY_TIME_START:
      if (value == null) {
        unsetLastModifyTimeStart();
      } else {
        setLastModifyTimeStart((Long)value);
      }
      break;

    case LAST_MODIFY_TIME_END:
      if (value == null) {
        unsetLastModifyTimeEnd();
      } else {
        setLastModifyTimeEnd((Long)value);
      }
      break;

    case CREATE_TIME_START:
      if (value == null) {
        unsetCreateTimeStart();
      } else {
        setCreateTimeStart((Long)value);
      }
      break;

    case CREATE_TIME_END:
      if (value == null) {
        unsetCreateTimeEnd();
      } else {
        setCreateTimeEnd((Long)value);
      }
      break;

    case LAST_LOGIN_TIME_START:
      if (value == null) {
        unsetLastLoginTimeStart();
      } else {
        setLastLoginTimeStart((Long)value);
      }
      break;

    case LAST_LOGIN_TIME_END:
      if (value == null) {
        unsetLastLoginTimeEnd();
      } else {
        setLastLoginTimeEnd((Long)value);
      }
      break;

    case CUTOFF_DAY_START:
      if (value == null) {
        unsetCutoffDayStart();
      } else {
        setCutoffDayStart((Integer)value);
      }
      break;

    case CUTOFF_DAY_END:
      if (value == null) {
        unsetCutoffDayEnd();
      } else {
        setCutoffDayEnd((Integer)value);
      }
      break;

    case CUTOFF_DAY_SET:
      if (value == null) {
        unsetCutoffDaySet();
      } else {
        setCutoffDaySet((Set<Integer>)value);
      }
      break;

    case CUTOFF_TIME_START:
      if (value == null) {
        unsetCutoffTimeStart();
      } else {
        setCutoffTimeStart((Integer)value);
      }
      break;

    case CUTOFF_TIME_END:
      if (value == null) {
        unsetCutoffTimeEnd();
      } else {
        setCutoffTimeEnd((Integer)value);
      }
      break;

    case CUTOFF_TIME_SET:
      if (value == null) {
        unsetCutoffTimeSet();
      } else {
        setCutoffTimeSet((Set<Integer>)value);
      }
      break;

    case PARTNER_QUALIFICATION_START:
      if (value == null) {
        unsetPartnerQualificationStart();
      } else {
        setPartnerQualificationStart((Integer)value);
      }
      break;

    case PARTNER_QUALIFICATION_END:
      if (value == null) {
        unsetPartnerQualificationEnd();
      } else {
        setPartnerQualificationEnd((Integer)value);
      }
      break;

    case RATING_START:
      if (value == null) {
        unsetRatingStart();
      } else {
        setRatingStart((Double)value);
      }
      break;

    case RATING_END:
      if (value == null) {
        unsetRatingEnd();
      } else {
        setRatingEnd((Double)value);
      }
      break;

    case TEACHER_LIST:
      if (value == null) {
        unsetTeacherList();
      } else {
        setTeacherList((List<com.ishangke.edunav.commoncontract.model.TeacherBo>)value);
      }
      break;

    case CLASS_PHOTO_LIST:
      if (value == null) {
        unsetClassPhotoList();
      } else {
        setClassPhotoList((List<com.ishangke.edunav.commoncontract.model.ClassPhotoBo>)value);
      }
      break;

    case ADDRESS_LIST:
      if (value == null) {
        unsetAddressList();
      } else {
        setAddressList((List<com.ishangke.edunav.commoncontract.model.AddressBo>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Integer.valueOf(getId());

    case INST_NAME:
      return getInstName();

    case LOGO_URL:
      return getLogoUrl();

    case CONTRACT:
      return getContract();

    case RATING:
      return Double.valueOf(getRating());

    case LAST_LOGIN_TIME:
      return Long.valueOf(getLastLoginTime());

    case LAST_MODIFY_TIME:
      return Long.valueOf(getLastModifyTime());

    case CREATE_TIME:
      return Long.valueOf(getCreateTime());

    case ENABLED:
      return Integer.valueOf(getEnabled());

    case WHOLE_NAME:
      return getWholeName();

    case LICENCE:
      return getLicence();

    case ORGANIZATION_NUM:
      return getOrganizationNum();

    case REFERENCE:
      return getReference();

    case PASSWORD:
      return getPassword();

    case PARTNER_INTRO:
      return getPartnerIntro();

    case PARTNER_DISTINCTION:
      return getPartnerDistinction();

    case LICENCE_IMG_URL:
      return getLicenceImgUrl();

    case TAX_REG_IMG_URL:
      return getTaxRegImgUrl();

    case EDU_QUALIFICATION_IMG_URL:
      return getEduQualificationImgUrl();

    case HQ_LOCATION:
      return getHqLocation();

    case UNI_REG_LOCATION:
      return Integer.valueOf(getUniRegLocation());

    case HQ_CONTACT:
      return getHqContact();

    case HQ_CONTACT_PHONE:
      return getHqContactPhone();

    case HQ_CONTACT_SECOPT:
      return getHqContactSecopt();

    case COURSE_CONTACT:
      return getCourseContact();

    case COURSE_CONTACT_PHONE:
      return getCourseContactPhone();

    case STUDENT_INQUERY_PHONE:
      return getStudentInqueryPhone();

    case REG_CONTACT:
      return getRegContact();

    case REG_CONTACT_PHONE:
      return getRegContactPhone();

    case REG_CONTACT_FAX:
      return getRegContactFax();

    case CUTOFF_DAY:
      return Integer.valueOf(getCutoffDay());

    case CUTOFF_TIME:
      return Integer.valueOf(getCutoffTime());

    case PARTNER_QUALIFICATION:
      return Integer.valueOf(getPartnerQualification());

    case ID_SET:
      return getIdSet();

    case LAST_MODIFY_TIME_START:
      return Long.valueOf(getLastModifyTimeStart());

    case LAST_MODIFY_TIME_END:
      return Long.valueOf(getLastModifyTimeEnd());

    case CREATE_TIME_START:
      return Long.valueOf(getCreateTimeStart());

    case CREATE_TIME_END:
      return Long.valueOf(getCreateTimeEnd());

    case LAST_LOGIN_TIME_START:
      return Long.valueOf(getLastLoginTimeStart());

    case LAST_LOGIN_TIME_END:
      return Long.valueOf(getLastLoginTimeEnd());

    case CUTOFF_DAY_START:
      return Integer.valueOf(getCutoffDayStart());

    case CUTOFF_DAY_END:
      return Integer.valueOf(getCutoffDayEnd());

    case CUTOFF_DAY_SET:
      return getCutoffDaySet();

    case CUTOFF_TIME_START:
      return Integer.valueOf(getCutoffTimeStart());

    case CUTOFF_TIME_END:
      return Integer.valueOf(getCutoffTimeEnd());

    case CUTOFF_TIME_SET:
      return getCutoffTimeSet();

    case PARTNER_QUALIFICATION_START:
      return Integer.valueOf(getPartnerQualificationStart());

    case PARTNER_QUALIFICATION_END:
      return Integer.valueOf(getPartnerQualificationEnd());

    case RATING_START:
      return Double.valueOf(getRatingStart());

    case RATING_END:
      return Double.valueOf(getRatingEnd());

    case TEACHER_LIST:
      return getTeacherList();

    case CLASS_PHOTO_LIST:
      return getClassPhotoList();

    case ADDRESS_LIST:
      return getAddressList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case INST_NAME:
      return isSetInstName();
    case LOGO_URL:
      return isSetLogoUrl();
    case CONTRACT:
      return isSetContract();
    case RATING:
      return isSetRating();
    case LAST_LOGIN_TIME:
      return isSetLastLoginTime();
    case LAST_MODIFY_TIME:
      return isSetLastModifyTime();
    case CREATE_TIME:
      return isSetCreateTime();
    case ENABLED:
      return isSetEnabled();
    case WHOLE_NAME:
      return isSetWholeName();
    case LICENCE:
      return isSetLicence();
    case ORGANIZATION_NUM:
      return isSetOrganizationNum();
    case REFERENCE:
      return isSetReference();
    case PASSWORD:
      return isSetPassword();
    case PARTNER_INTRO:
      return isSetPartnerIntro();
    case PARTNER_DISTINCTION:
      return isSetPartnerDistinction();
    case LICENCE_IMG_URL:
      return isSetLicenceImgUrl();
    case TAX_REG_IMG_URL:
      return isSetTaxRegImgUrl();
    case EDU_QUALIFICATION_IMG_URL:
      return isSetEduQualificationImgUrl();
    case HQ_LOCATION:
      return isSetHqLocation();
    case UNI_REG_LOCATION:
      return isSetUniRegLocation();
    case HQ_CONTACT:
      return isSetHqContact();
    case HQ_CONTACT_PHONE:
      return isSetHqContactPhone();
    case HQ_CONTACT_SECOPT:
      return isSetHqContactSecopt();
    case COURSE_CONTACT:
      return isSetCourseContact();
    case COURSE_CONTACT_PHONE:
      return isSetCourseContactPhone();
    case STUDENT_INQUERY_PHONE:
      return isSetStudentInqueryPhone();
    case REG_CONTACT:
      return isSetRegContact();
    case REG_CONTACT_PHONE:
      return isSetRegContactPhone();
    case REG_CONTACT_FAX:
      return isSetRegContactFax();
    case CUTOFF_DAY:
      return isSetCutoffDay();
    case CUTOFF_TIME:
      return isSetCutoffTime();
    case PARTNER_QUALIFICATION:
      return isSetPartnerQualification();
    case ID_SET:
      return isSetIdSet();
    case LAST_MODIFY_TIME_START:
      return isSetLastModifyTimeStart();
    case LAST_MODIFY_TIME_END:
      return isSetLastModifyTimeEnd();
    case CREATE_TIME_START:
      return isSetCreateTimeStart();
    case CREATE_TIME_END:
      return isSetCreateTimeEnd();
    case LAST_LOGIN_TIME_START:
      return isSetLastLoginTimeStart();
    case LAST_LOGIN_TIME_END:
      return isSetLastLoginTimeEnd();
    case CUTOFF_DAY_START:
      return isSetCutoffDayStart();
    case CUTOFF_DAY_END:
      return isSetCutoffDayEnd();
    case CUTOFF_DAY_SET:
      return isSetCutoffDaySet();
    case CUTOFF_TIME_START:
      return isSetCutoffTimeStart();
    case CUTOFF_TIME_END:
      return isSetCutoffTimeEnd();
    case CUTOFF_TIME_SET:
      return isSetCutoffTimeSet();
    case PARTNER_QUALIFICATION_START:
      return isSetPartnerQualificationStart();
    case PARTNER_QUALIFICATION_END:
      return isSetPartnerQualificationEnd();
    case RATING_START:
      return isSetRatingStart();
    case RATING_END:
      return isSetRatingEnd();
    case TEACHER_LIST:
      return isSetTeacherList();
    case CLASS_PHOTO_LIST:
      return isSetClassPhotoList();
    case ADDRESS_LIST:
      return isSetAddressList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PartnerBo)
      return this.equals((PartnerBo)that);
    return false;
  }

  public boolean equals(PartnerBo that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_instName = true && this.isSetInstName();
    boolean that_present_instName = true && that.isSetInstName();
    if (this_present_instName || that_present_instName) {
      if (!(this_present_instName && that_present_instName))
        return false;
      if (!this.instName.equals(that.instName))
        return false;
    }

    boolean this_present_logoUrl = true && this.isSetLogoUrl();
    boolean that_present_logoUrl = true && that.isSetLogoUrl();
    if (this_present_logoUrl || that_present_logoUrl) {
      if (!(this_present_logoUrl && that_present_logoUrl))
        return false;
      if (!this.logoUrl.equals(that.logoUrl))
        return false;
    }

    boolean this_present_contract = true && this.isSetContract();
    boolean that_present_contract = true && that.isSetContract();
    if (this_present_contract || that_present_contract) {
      if (!(this_present_contract && that_present_contract))
        return false;
      if (!this.contract.equals(that.contract))
        return false;
    }

    boolean this_present_rating = true;
    boolean that_present_rating = true;
    if (this_present_rating || that_present_rating) {
      if (!(this_present_rating && that_present_rating))
        return false;
      if (this.rating != that.rating)
        return false;
    }

    boolean this_present_lastLoginTime = true;
    boolean that_present_lastLoginTime = true;
    if (this_present_lastLoginTime || that_present_lastLoginTime) {
      if (!(this_present_lastLoginTime && that_present_lastLoginTime))
        return false;
      if (this.lastLoginTime != that.lastLoginTime)
        return false;
    }

    boolean this_present_lastModifyTime = true;
    boolean that_present_lastModifyTime = true;
    if (this_present_lastModifyTime || that_present_lastModifyTime) {
      if (!(this_present_lastModifyTime && that_present_lastModifyTime))
        return false;
      if (this.lastModifyTime != that.lastModifyTime)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_enabled = true;
    boolean that_present_enabled = true;
    if (this_present_enabled || that_present_enabled) {
      if (!(this_present_enabled && that_present_enabled))
        return false;
      if (this.enabled != that.enabled)
        return false;
    }

    boolean this_present_wholeName = true && this.isSetWholeName();
    boolean that_present_wholeName = true && that.isSetWholeName();
    if (this_present_wholeName || that_present_wholeName) {
      if (!(this_present_wholeName && that_present_wholeName))
        return false;
      if (!this.wholeName.equals(that.wholeName))
        return false;
    }

    boolean this_present_licence = true && this.isSetLicence();
    boolean that_present_licence = true && that.isSetLicence();
    if (this_present_licence || that_present_licence) {
      if (!(this_present_licence && that_present_licence))
        return false;
      if (!this.licence.equals(that.licence))
        return false;
    }

    boolean this_present_organizationNum = true && this.isSetOrganizationNum();
    boolean that_present_organizationNum = true && that.isSetOrganizationNum();
    if (this_present_organizationNum || that_present_organizationNum) {
      if (!(this_present_organizationNum && that_present_organizationNum))
        return false;
      if (!this.organizationNum.equals(that.organizationNum))
        return false;
    }

    boolean this_present_reference = true && this.isSetReference();
    boolean that_present_reference = true && that.isSetReference();
    if (this_present_reference || that_present_reference) {
      if (!(this_present_reference && that_present_reference))
        return false;
      if (!this.reference.equals(that.reference))
        return false;
    }

    boolean this_present_password = true && this.isSetPassword();
    boolean that_present_password = true && that.isSetPassword();
    if (this_present_password || that_present_password) {
      if (!(this_present_password && that_present_password))
        return false;
      if (!this.password.equals(that.password))
        return false;
    }

    boolean this_present_partnerIntro = true && this.isSetPartnerIntro();
    boolean that_present_partnerIntro = true && that.isSetPartnerIntro();
    if (this_present_partnerIntro || that_present_partnerIntro) {
      if (!(this_present_partnerIntro && that_present_partnerIntro))
        return false;
      if (!this.partnerIntro.equals(that.partnerIntro))
        return false;
    }

    boolean this_present_partnerDistinction = true && this.isSetPartnerDistinction();
    boolean that_present_partnerDistinction = true && that.isSetPartnerDistinction();
    if (this_present_partnerDistinction || that_present_partnerDistinction) {
      if (!(this_present_partnerDistinction && that_present_partnerDistinction))
        return false;
      if (!this.partnerDistinction.equals(that.partnerDistinction))
        return false;
    }

    boolean this_present_licenceImgUrl = true && this.isSetLicenceImgUrl();
    boolean that_present_licenceImgUrl = true && that.isSetLicenceImgUrl();
    if (this_present_licenceImgUrl || that_present_licenceImgUrl) {
      if (!(this_present_licenceImgUrl && that_present_licenceImgUrl))
        return false;
      if (!this.licenceImgUrl.equals(that.licenceImgUrl))
        return false;
    }

    boolean this_present_taxRegImgUrl = true && this.isSetTaxRegImgUrl();
    boolean that_present_taxRegImgUrl = true && that.isSetTaxRegImgUrl();
    if (this_present_taxRegImgUrl || that_present_taxRegImgUrl) {
      if (!(this_present_taxRegImgUrl && that_present_taxRegImgUrl))
        return false;
      if (!this.taxRegImgUrl.equals(that.taxRegImgUrl))
        return false;
    }

    boolean this_present_eduQualificationImgUrl = true && this.isSetEduQualificationImgUrl();
    boolean that_present_eduQualificationImgUrl = true && that.isSetEduQualificationImgUrl();
    if (this_present_eduQualificationImgUrl || that_present_eduQualificationImgUrl) {
      if (!(this_present_eduQualificationImgUrl && that_present_eduQualificationImgUrl))
        return false;
      if (!this.eduQualificationImgUrl.equals(that.eduQualificationImgUrl))
        return false;
    }

    boolean this_present_hqLocation = true && this.isSetHqLocation();
    boolean that_present_hqLocation = true && that.isSetHqLocation();
    if (this_present_hqLocation || that_present_hqLocation) {
      if (!(this_present_hqLocation && that_present_hqLocation))
        return false;
      if (!this.hqLocation.equals(that.hqLocation))
        return false;
    }

    boolean this_present_uniRegLocation = true;
    boolean that_present_uniRegLocation = true;
    if (this_present_uniRegLocation || that_present_uniRegLocation) {
      if (!(this_present_uniRegLocation && that_present_uniRegLocation))
        return false;
      if (this.uniRegLocation != that.uniRegLocation)
        return false;
    }

    boolean this_present_hqContact = true && this.isSetHqContact();
    boolean that_present_hqContact = true && that.isSetHqContact();
    if (this_present_hqContact || that_present_hqContact) {
      if (!(this_present_hqContact && that_present_hqContact))
        return false;
      if (!this.hqContact.equals(that.hqContact))
        return false;
    }

    boolean this_present_hqContactPhone = true && this.isSetHqContactPhone();
    boolean that_present_hqContactPhone = true && that.isSetHqContactPhone();
    if (this_present_hqContactPhone || that_present_hqContactPhone) {
      if (!(this_present_hqContactPhone && that_present_hqContactPhone))
        return false;
      if (!this.hqContactPhone.equals(that.hqContactPhone))
        return false;
    }

    boolean this_present_hqContactSecopt = true && this.isSetHqContactSecopt();
    boolean that_present_hqContactSecopt = true && that.isSetHqContactSecopt();
    if (this_present_hqContactSecopt || that_present_hqContactSecopt) {
      if (!(this_present_hqContactSecopt && that_present_hqContactSecopt))
        return false;
      if (!this.hqContactSecopt.equals(that.hqContactSecopt))
        return false;
    }

    boolean this_present_courseContact = true && this.isSetCourseContact();
    boolean that_present_courseContact = true && that.isSetCourseContact();
    if (this_present_courseContact || that_present_courseContact) {
      if (!(this_present_courseContact && that_present_courseContact))
        return false;
      if (!this.courseContact.equals(that.courseContact))
        return false;
    }

    boolean this_present_courseContactPhone = true && this.isSetCourseContactPhone();
    boolean that_present_courseContactPhone = true && that.isSetCourseContactPhone();
    if (this_present_courseContactPhone || that_present_courseContactPhone) {
      if (!(this_present_courseContactPhone && that_present_courseContactPhone))
        return false;
      if (!this.courseContactPhone.equals(that.courseContactPhone))
        return false;
    }

    boolean this_present_studentInqueryPhone = true && this.isSetStudentInqueryPhone();
    boolean that_present_studentInqueryPhone = true && that.isSetStudentInqueryPhone();
    if (this_present_studentInqueryPhone || that_present_studentInqueryPhone) {
      if (!(this_present_studentInqueryPhone && that_present_studentInqueryPhone))
        return false;
      if (!this.studentInqueryPhone.equals(that.studentInqueryPhone))
        return false;
    }

    boolean this_present_regContact = true && this.isSetRegContact();
    boolean that_present_regContact = true && that.isSetRegContact();
    if (this_present_regContact || that_present_regContact) {
      if (!(this_present_regContact && that_present_regContact))
        return false;
      if (!this.regContact.equals(that.regContact))
        return false;
    }

    boolean this_present_regContactPhone = true && this.isSetRegContactPhone();
    boolean that_present_regContactPhone = true && that.isSetRegContactPhone();
    if (this_present_regContactPhone || that_present_regContactPhone) {
      if (!(this_present_regContactPhone && that_present_regContactPhone))
        return false;
      if (!this.regContactPhone.equals(that.regContactPhone))
        return false;
    }

    boolean this_present_regContactFax = true && this.isSetRegContactFax();
    boolean that_present_regContactFax = true && that.isSetRegContactFax();
    if (this_present_regContactFax || that_present_regContactFax) {
      if (!(this_present_regContactFax && that_present_regContactFax))
        return false;
      if (!this.regContactFax.equals(that.regContactFax))
        return false;
    }

    boolean this_present_cutoffDay = true;
    boolean that_present_cutoffDay = true;
    if (this_present_cutoffDay || that_present_cutoffDay) {
      if (!(this_present_cutoffDay && that_present_cutoffDay))
        return false;
      if (this.cutoffDay != that.cutoffDay)
        return false;
    }

    boolean this_present_cutoffTime = true;
    boolean that_present_cutoffTime = true;
    if (this_present_cutoffTime || that_present_cutoffTime) {
      if (!(this_present_cutoffTime && that_present_cutoffTime))
        return false;
      if (this.cutoffTime != that.cutoffTime)
        return false;
    }

    boolean this_present_partnerQualification = true;
    boolean that_present_partnerQualification = true;
    if (this_present_partnerQualification || that_present_partnerQualification) {
      if (!(this_present_partnerQualification && that_present_partnerQualification))
        return false;
      if (this.partnerQualification != that.partnerQualification)
        return false;
    }

    boolean this_present_idSet = true && this.isSetIdSet();
    boolean that_present_idSet = true && that.isSetIdSet();
    if (this_present_idSet || that_present_idSet) {
      if (!(this_present_idSet && that_present_idSet))
        return false;
      if (!this.idSet.equals(that.idSet))
        return false;
    }

    boolean this_present_lastModifyTimeStart = true;
    boolean that_present_lastModifyTimeStart = true;
    if (this_present_lastModifyTimeStart || that_present_lastModifyTimeStart) {
      if (!(this_present_lastModifyTimeStart && that_present_lastModifyTimeStart))
        return false;
      if (this.lastModifyTimeStart != that.lastModifyTimeStart)
        return false;
    }

    boolean this_present_lastModifyTimeEnd = true;
    boolean that_present_lastModifyTimeEnd = true;
    if (this_present_lastModifyTimeEnd || that_present_lastModifyTimeEnd) {
      if (!(this_present_lastModifyTimeEnd && that_present_lastModifyTimeEnd))
        return false;
      if (this.lastModifyTimeEnd != that.lastModifyTimeEnd)
        return false;
    }

    boolean this_present_createTimeStart = true;
    boolean that_present_createTimeStart = true;
    if (this_present_createTimeStart || that_present_createTimeStart) {
      if (!(this_present_createTimeStart && that_present_createTimeStart))
        return false;
      if (this.createTimeStart != that.createTimeStart)
        return false;
    }

    boolean this_present_createTimeEnd = true;
    boolean that_present_createTimeEnd = true;
    if (this_present_createTimeEnd || that_present_createTimeEnd) {
      if (!(this_present_createTimeEnd && that_present_createTimeEnd))
        return false;
      if (this.createTimeEnd != that.createTimeEnd)
        return false;
    }

    boolean this_present_lastLoginTimeStart = true;
    boolean that_present_lastLoginTimeStart = true;
    if (this_present_lastLoginTimeStart || that_present_lastLoginTimeStart) {
      if (!(this_present_lastLoginTimeStart && that_present_lastLoginTimeStart))
        return false;
      if (this.lastLoginTimeStart != that.lastLoginTimeStart)
        return false;
    }

    boolean this_present_lastLoginTimeEnd = true;
    boolean that_present_lastLoginTimeEnd = true;
    if (this_present_lastLoginTimeEnd || that_present_lastLoginTimeEnd) {
      if (!(this_present_lastLoginTimeEnd && that_present_lastLoginTimeEnd))
        return false;
      if (this.lastLoginTimeEnd != that.lastLoginTimeEnd)
        return false;
    }

    boolean this_present_cutoffDayStart = true;
    boolean that_present_cutoffDayStart = true;
    if (this_present_cutoffDayStart || that_present_cutoffDayStart) {
      if (!(this_present_cutoffDayStart && that_present_cutoffDayStart))
        return false;
      if (this.cutoffDayStart != that.cutoffDayStart)
        return false;
    }

    boolean this_present_cutoffDayEnd = true;
    boolean that_present_cutoffDayEnd = true;
    if (this_present_cutoffDayEnd || that_present_cutoffDayEnd) {
      if (!(this_present_cutoffDayEnd && that_present_cutoffDayEnd))
        return false;
      if (this.cutoffDayEnd != that.cutoffDayEnd)
        return false;
    }

    boolean this_present_cutoffDaySet = true && this.isSetCutoffDaySet();
    boolean that_present_cutoffDaySet = true && that.isSetCutoffDaySet();
    if (this_present_cutoffDaySet || that_present_cutoffDaySet) {
      if (!(this_present_cutoffDaySet && that_present_cutoffDaySet))
        return false;
      if (!this.cutoffDaySet.equals(that.cutoffDaySet))
        return false;
    }

    boolean this_present_cutoffTimeStart = true;
    boolean that_present_cutoffTimeStart = true;
    if (this_present_cutoffTimeStart || that_present_cutoffTimeStart) {
      if (!(this_present_cutoffTimeStart && that_present_cutoffTimeStart))
        return false;
      if (this.cutoffTimeStart != that.cutoffTimeStart)
        return false;
    }

    boolean this_present_cutoffTimeEnd = true;
    boolean that_present_cutoffTimeEnd = true;
    if (this_present_cutoffTimeEnd || that_present_cutoffTimeEnd) {
      if (!(this_present_cutoffTimeEnd && that_present_cutoffTimeEnd))
        return false;
      if (this.cutoffTimeEnd != that.cutoffTimeEnd)
        return false;
    }

    boolean this_present_cutoffTimeSet = true && this.isSetCutoffTimeSet();
    boolean that_present_cutoffTimeSet = true && that.isSetCutoffTimeSet();
    if (this_present_cutoffTimeSet || that_present_cutoffTimeSet) {
      if (!(this_present_cutoffTimeSet && that_present_cutoffTimeSet))
        return false;
      if (!this.cutoffTimeSet.equals(that.cutoffTimeSet))
        return false;
    }

    boolean this_present_partnerQualificationStart = true;
    boolean that_present_partnerQualificationStart = true;
    if (this_present_partnerQualificationStart || that_present_partnerQualificationStart) {
      if (!(this_present_partnerQualificationStart && that_present_partnerQualificationStart))
        return false;
      if (this.partnerQualificationStart != that.partnerQualificationStart)
        return false;
    }

    boolean this_present_partnerQualificationEnd = true;
    boolean that_present_partnerQualificationEnd = true;
    if (this_present_partnerQualificationEnd || that_present_partnerQualificationEnd) {
      if (!(this_present_partnerQualificationEnd && that_present_partnerQualificationEnd))
        return false;
      if (this.partnerQualificationEnd != that.partnerQualificationEnd)
        return false;
    }

    boolean this_present_ratingStart = true;
    boolean that_present_ratingStart = true;
    if (this_present_ratingStart || that_present_ratingStart) {
      if (!(this_present_ratingStart && that_present_ratingStart))
        return false;
      if (this.ratingStart != that.ratingStart)
        return false;
    }

    boolean this_present_ratingEnd = true;
    boolean that_present_ratingEnd = true;
    if (this_present_ratingEnd || that_present_ratingEnd) {
      if (!(this_present_ratingEnd && that_present_ratingEnd))
        return false;
      if (this.ratingEnd != that.ratingEnd)
        return false;
    }

    boolean this_present_teacherList = true && this.isSetTeacherList();
    boolean that_present_teacherList = true && that.isSetTeacherList();
    if (this_present_teacherList || that_present_teacherList) {
      if (!(this_present_teacherList && that_present_teacherList))
        return false;
      if (!this.teacherList.equals(that.teacherList))
        return false;
    }

    boolean this_present_classPhotoList = true && this.isSetClassPhotoList();
    boolean that_present_classPhotoList = true && that.isSetClassPhotoList();
    if (this_present_classPhotoList || that_present_classPhotoList) {
      if (!(this_present_classPhotoList && that_present_classPhotoList))
        return false;
      if (!this.classPhotoList.equals(that.classPhotoList))
        return false;
    }

    boolean this_present_addressList = true && this.isSetAddressList();
    boolean that_present_addressList = true && that.isSetAddressList();
    if (this_present_addressList || that_present_addressList) {
      if (!(this_present_addressList && that_present_addressList))
        return false;
      if (!this.addressList.equals(that.addressList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_id = true;
    builder.append(present_id);
    if (present_id)
      builder.append(id);

    boolean present_instName = true && (isSetInstName());
    builder.append(present_instName);
    if (present_instName)
      builder.append(instName);

    boolean present_logoUrl = true && (isSetLogoUrl());
    builder.append(present_logoUrl);
    if (present_logoUrl)
      builder.append(logoUrl);

    boolean present_contract = true && (isSetContract());
    builder.append(present_contract);
    if (present_contract)
      builder.append(contract);

    boolean present_rating = true;
    builder.append(present_rating);
    if (present_rating)
      builder.append(rating);

    boolean present_lastLoginTime = true;
    builder.append(present_lastLoginTime);
    if (present_lastLoginTime)
      builder.append(lastLoginTime);

    boolean present_lastModifyTime = true;
    builder.append(present_lastModifyTime);
    if (present_lastModifyTime)
      builder.append(lastModifyTime);

    boolean present_createTime = true;
    builder.append(present_createTime);
    if (present_createTime)
      builder.append(createTime);

    boolean present_enabled = true;
    builder.append(present_enabled);
    if (present_enabled)
      builder.append(enabled);

    boolean present_wholeName = true && (isSetWholeName());
    builder.append(present_wholeName);
    if (present_wholeName)
      builder.append(wholeName);

    boolean present_licence = true && (isSetLicence());
    builder.append(present_licence);
    if (present_licence)
      builder.append(licence);

    boolean present_organizationNum = true && (isSetOrganizationNum());
    builder.append(present_organizationNum);
    if (present_organizationNum)
      builder.append(organizationNum);

    boolean present_reference = true && (isSetReference());
    builder.append(present_reference);
    if (present_reference)
      builder.append(reference);

    boolean present_password = true && (isSetPassword());
    builder.append(present_password);
    if (present_password)
      builder.append(password);

    boolean present_partnerIntro = true && (isSetPartnerIntro());
    builder.append(present_partnerIntro);
    if (present_partnerIntro)
      builder.append(partnerIntro);

    boolean present_partnerDistinction = true && (isSetPartnerDistinction());
    builder.append(present_partnerDistinction);
    if (present_partnerDistinction)
      builder.append(partnerDistinction);

    boolean present_licenceImgUrl = true && (isSetLicenceImgUrl());
    builder.append(present_licenceImgUrl);
    if (present_licenceImgUrl)
      builder.append(licenceImgUrl);

    boolean present_taxRegImgUrl = true && (isSetTaxRegImgUrl());
    builder.append(present_taxRegImgUrl);
    if (present_taxRegImgUrl)
      builder.append(taxRegImgUrl);

    boolean present_eduQualificationImgUrl = true && (isSetEduQualificationImgUrl());
    builder.append(present_eduQualificationImgUrl);
    if (present_eduQualificationImgUrl)
      builder.append(eduQualificationImgUrl);

    boolean present_hqLocation = true && (isSetHqLocation());
    builder.append(present_hqLocation);
    if (present_hqLocation)
      builder.append(hqLocation);

    boolean present_uniRegLocation = true;
    builder.append(present_uniRegLocation);
    if (present_uniRegLocation)
      builder.append(uniRegLocation);

    boolean present_hqContact = true && (isSetHqContact());
    builder.append(present_hqContact);
    if (present_hqContact)
      builder.append(hqContact);

    boolean present_hqContactPhone = true && (isSetHqContactPhone());
    builder.append(present_hqContactPhone);
    if (present_hqContactPhone)
      builder.append(hqContactPhone);

    boolean present_hqContactSecopt = true && (isSetHqContactSecopt());
    builder.append(present_hqContactSecopt);
    if (present_hqContactSecopt)
      builder.append(hqContactSecopt);

    boolean present_courseContact = true && (isSetCourseContact());
    builder.append(present_courseContact);
    if (present_courseContact)
      builder.append(courseContact);

    boolean present_courseContactPhone = true && (isSetCourseContactPhone());
    builder.append(present_courseContactPhone);
    if (present_courseContactPhone)
      builder.append(courseContactPhone);

    boolean present_studentInqueryPhone = true && (isSetStudentInqueryPhone());
    builder.append(present_studentInqueryPhone);
    if (present_studentInqueryPhone)
      builder.append(studentInqueryPhone);

    boolean present_regContact = true && (isSetRegContact());
    builder.append(present_regContact);
    if (present_regContact)
      builder.append(regContact);

    boolean present_regContactPhone = true && (isSetRegContactPhone());
    builder.append(present_regContactPhone);
    if (present_regContactPhone)
      builder.append(regContactPhone);

    boolean present_regContactFax = true && (isSetRegContactFax());
    builder.append(present_regContactFax);
    if (present_regContactFax)
      builder.append(regContactFax);

    boolean present_cutoffDay = true;
    builder.append(present_cutoffDay);
    if (present_cutoffDay)
      builder.append(cutoffDay);

    boolean present_cutoffTime = true;
    builder.append(present_cutoffTime);
    if (present_cutoffTime)
      builder.append(cutoffTime);

    boolean present_partnerQualification = true;
    builder.append(present_partnerQualification);
    if (present_partnerQualification)
      builder.append(partnerQualification);

    boolean present_idSet = true && (isSetIdSet());
    builder.append(present_idSet);
    if (present_idSet)
      builder.append(idSet);

    boolean present_lastModifyTimeStart = true;
    builder.append(present_lastModifyTimeStart);
    if (present_lastModifyTimeStart)
      builder.append(lastModifyTimeStart);

    boolean present_lastModifyTimeEnd = true;
    builder.append(present_lastModifyTimeEnd);
    if (present_lastModifyTimeEnd)
      builder.append(lastModifyTimeEnd);

    boolean present_createTimeStart = true;
    builder.append(present_createTimeStart);
    if (present_createTimeStart)
      builder.append(createTimeStart);

    boolean present_createTimeEnd = true;
    builder.append(present_createTimeEnd);
    if (present_createTimeEnd)
      builder.append(createTimeEnd);

    boolean present_lastLoginTimeStart = true;
    builder.append(present_lastLoginTimeStart);
    if (present_lastLoginTimeStart)
      builder.append(lastLoginTimeStart);

    boolean present_lastLoginTimeEnd = true;
    builder.append(present_lastLoginTimeEnd);
    if (present_lastLoginTimeEnd)
      builder.append(lastLoginTimeEnd);

    boolean present_cutoffDayStart = true;
    builder.append(present_cutoffDayStart);
    if (present_cutoffDayStart)
      builder.append(cutoffDayStart);

    boolean present_cutoffDayEnd = true;
    builder.append(present_cutoffDayEnd);
    if (present_cutoffDayEnd)
      builder.append(cutoffDayEnd);

    boolean present_cutoffDaySet = true && (isSetCutoffDaySet());
    builder.append(present_cutoffDaySet);
    if (present_cutoffDaySet)
      builder.append(cutoffDaySet);

    boolean present_cutoffTimeStart = true;
    builder.append(present_cutoffTimeStart);
    if (present_cutoffTimeStart)
      builder.append(cutoffTimeStart);

    boolean present_cutoffTimeEnd = true;
    builder.append(present_cutoffTimeEnd);
    if (present_cutoffTimeEnd)
      builder.append(cutoffTimeEnd);

    boolean present_cutoffTimeSet = true && (isSetCutoffTimeSet());
    builder.append(present_cutoffTimeSet);
    if (present_cutoffTimeSet)
      builder.append(cutoffTimeSet);

    boolean present_partnerQualificationStart = true;
    builder.append(present_partnerQualificationStart);
    if (present_partnerQualificationStart)
      builder.append(partnerQualificationStart);

    boolean present_partnerQualificationEnd = true;
    builder.append(present_partnerQualificationEnd);
    if (present_partnerQualificationEnd)
      builder.append(partnerQualificationEnd);

    boolean present_ratingStart = true;
    builder.append(present_ratingStart);
    if (present_ratingStart)
      builder.append(ratingStart);

    boolean present_ratingEnd = true;
    builder.append(present_ratingEnd);
    if (present_ratingEnd)
      builder.append(ratingEnd);

    boolean present_teacherList = true && (isSetTeacherList());
    builder.append(present_teacherList);
    if (present_teacherList)
      builder.append(teacherList);

    boolean present_classPhotoList = true && (isSetClassPhotoList());
    builder.append(present_classPhotoList);
    if (present_classPhotoList)
      builder.append(classPhotoList);

    boolean present_addressList = true && (isSetAddressList());
    builder.append(present_addressList);
    if (present_addressList)
      builder.append(addressList);

    return builder.toHashCode();
  }

  @Override
  public int compareTo(PartnerBo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInstName()).compareTo(other.isSetInstName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInstName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.instName, other.instName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLogoUrl()).compareTo(other.isSetLogoUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLogoUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.logoUrl, other.logoUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContract()).compareTo(other.isSetContract());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContract()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contract, other.contract);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRating()).compareTo(other.isSetRating());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRating()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rating, other.rating);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastLoginTime()).compareTo(other.isSetLastLoginTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastLoginTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastLoginTime, other.lastLoginTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTime()).compareTo(other.isSetLastModifyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTime, other.lastModifyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEnabled()).compareTo(other.isSetEnabled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnabled()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enabled, other.enabled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWholeName()).compareTo(other.isSetWholeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWholeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wholeName, other.wholeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLicence()).compareTo(other.isSetLicence());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLicence()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.licence, other.licence);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrganizationNum()).compareTo(other.isSetOrganizationNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrganizationNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.organizationNum, other.organizationNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReference()).compareTo(other.isSetReference());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReference()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reference, other.reference);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPassword()).compareTo(other.isSetPassword());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPassword()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.password, other.password);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerIntro()).compareTo(other.isSetPartnerIntro());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerIntro()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerIntro, other.partnerIntro);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerDistinction()).compareTo(other.isSetPartnerDistinction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerDistinction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerDistinction, other.partnerDistinction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLicenceImgUrl()).compareTo(other.isSetLicenceImgUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLicenceImgUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.licenceImgUrl, other.licenceImgUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTaxRegImgUrl()).compareTo(other.isSetTaxRegImgUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTaxRegImgUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.taxRegImgUrl, other.taxRegImgUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEduQualificationImgUrl()).compareTo(other.isSetEduQualificationImgUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEduQualificationImgUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.eduQualificationImgUrl, other.eduQualificationImgUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHqLocation()).compareTo(other.isSetHqLocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHqLocation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hqLocation, other.hqLocation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUniRegLocation()).compareTo(other.isSetUniRegLocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUniRegLocation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uniRegLocation, other.uniRegLocation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHqContact()).compareTo(other.isSetHqContact());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHqContact()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hqContact, other.hqContact);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHqContactPhone()).compareTo(other.isSetHqContactPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHqContactPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hqContactPhone, other.hqContactPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHqContactSecopt()).compareTo(other.isSetHqContactSecopt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHqContactSecopt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hqContactSecopt, other.hqContactSecopt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCourseContact()).compareTo(other.isSetCourseContact());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCourseContact()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.courseContact, other.courseContact);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCourseContactPhone()).compareTo(other.isSetCourseContactPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCourseContactPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.courseContactPhone, other.courseContactPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStudentInqueryPhone()).compareTo(other.isSetStudentInqueryPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStudentInqueryPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.studentInqueryPhone, other.studentInqueryPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegContact()).compareTo(other.isSetRegContact());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegContact()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regContact, other.regContact);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegContactPhone()).compareTo(other.isSetRegContactPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegContactPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regContactPhone, other.regContactPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegContactFax()).compareTo(other.isSetRegContactFax());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegContactFax()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regContactFax, other.regContactFax);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCutoffDay()).compareTo(other.isSetCutoffDay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCutoffDay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cutoffDay, other.cutoffDay);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCutoffTime()).compareTo(other.isSetCutoffTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCutoffTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cutoffTime, other.cutoffTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerQualification()).compareTo(other.isSetPartnerQualification());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerQualification()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerQualification, other.partnerQualification);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdSet()).compareTo(other.isSetIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idSet, other.idSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimeStart()).compareTo(other.isSetLastModifyTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimeStart, other.lastModifyTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimeEnd()).compareTo(other.isSetLastModifyTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimeEnd, other.lastModifyTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeStart()).compareTo(other.isSetCreateTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeStart, other.createTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimeEnd()).compareTo(other.isSetCreateTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimeEnd, other.createTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastLoginTimeStart()).compareTo(other.isSetLastLoginTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastLoginTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastLoginTimeStart, other.lastLoginTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastLoginTimeEnd()).compareTo(other.isSetLastLoginTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastLoginTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastLoginTimeEnd, other.lastLoginTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCutoffDayStart()).compareTo(other.isSetCutoffDayStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCutoffDayStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cutoffDayStart, other.cutoffDayStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCutoffDayEnd()).compareTo(other.isSetCutoffDayEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCutoffDayEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cutoffDayEnd, other.cutoffDayEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCutoffDaySet()).compareTo(other.isSetCutoffDaySet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCutoffDaySet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cutoffDaySet, other.cutoffDaySet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCutoffTimeStart()).compareTo(other.isSetCutoffTimeStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCutoffTimeStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cutoffTimeStart, other.cutoffTimeStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCutoffTimeEnd()).compareTo(other.isSetCutoffTimeEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCutoffTimeEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cutoffTimeEnd, other.cutoffTimeEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCutoffTimeSet()).compareTo(other.isSetCutoffTimeSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCutoffTimeSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cutoffTimeSet, other.cutoffTimeSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerQualificationStart()).compareTo(other.isSetPartnerQualificationStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerQualificationStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerQualificationStart, other.partnerQualificationStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPartnerQualificationEnd()).compareTo(other.isSetPartnerQualificationEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartnerQualificationEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partnerQualificationEnd, other.partnerQualificationEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRatingStart()).compareTo(other.isSetRatingStart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRatingStart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ratingStart, other.ratingStart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRatingEnd()).compareTo(other.isSetRatingEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRatingEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ratingEnd, other.ratingEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTeacherList()).compareTo(other.isSetTeacherList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTeacherList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.teacherList, other.teacherList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClassPhotoList()).compareTo(other.isSetClassPhotoList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClassPhotoList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.classPhotoList, other.classPhotoList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAddressList()).compareTo(other.isSetAddressList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddressList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.addressList, other.addressList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PartnerBo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("instName:");
    if (this.instName == null) {
      sb.append("null");
    } else {
      sb.append(this.instName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("logoUrl:");
    if (this.logoUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.logoUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contract:");
    if (this.contract == null) {
      sb.append("null");
    } else {
      sb.append(this.contract);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("rating:");
    sb.append(this.rating);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastLoginTime:");
    sb.append(this.lastLoginTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTime:");
    sb.append(this.lastModifyTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("enabled:");
    sb.append(this.enabled);
    first = false;
    if (!first) sb.append(", ");
    sb.append("wholeName:");
    if (this.wholeName == null) {
      sb.append("null");
    } else {
      sb.append(this.wholeName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("licence:");
    if (this.licence == null) {
      sb.append("null");
    } else {
      sb.append(this.licence);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("organizationNum:");
    if (this.organizationNum == null) {
      sb.append("null");
    } else {
      sb.append(this.organizationNum);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reference:");
    if (this.reference == null) {
      sb.append("null");
    } else {
      sb.append(this.reference);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("password:");
    if (this.password == null) {
      sb.append("null");
    } else {
      sb.append(this.password);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerIntro:");
    if (this.partnerIntro == null) {
      sb.append("null");
    } else {
      sb.append(this.partnerIntro);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerDistinction:");
    if (this.partnerDistinction == null) {
      sb.append("null");
    } else {
      sb.append(this.partnerDistinction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("licenceImgUrl:");
    if (this.licenceImgUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.licenceImgUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("taxRegImgUrl:");
    if (this.taxRegImgUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.taxRegImgUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("eduQualificationImgUrl:");
    if (this.eduQualificationImgUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.eduQualificationImgUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("hqLocation:");
    if (this.hqLocation == null) {
      sb.append("null");
    } else {
      sb.append(this.hqLocation);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("uniRegLocation:");
    sb.append(this.uniRegLocation);
    first = false;
    if (!first) sb.append(", ");
    sb.append("hqContact:");
    if (this.hqContact == null) {
      sb.append("null");
    } else {
      sb.append(this.hqContact);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("hqContactPhone:");
    if (this.hqContactPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.hqContactPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("hqContactSecopt:");
    if (this.hqContactSecopt == null) {
      sb.append("null");
    } else {
      sb.append(this.hqContactSecopt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("courseContact:");
    if (this.courseContact == null) {
      sb.append("null");
    } else {
      sb.append(this.courseContact);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("courseContactPhone:");
    if (this.courseContactPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.courseContactPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("studentInqueryPhone:");
    if (this.studentInqueryPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.studentInqueryPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("regContact:");
    if (this.regContact == null) {
      sb.append("null");
    } else {
      sb.append(this.regContact);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("regContactPhone:");
    if (this.regContactPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.regContactPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("regContactFax:");
    if (this.regContactFax == null) {
      sb.append("null");
    } else {
      sb.append(this.regContactFax);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cutoffDay:");
    sb.append(this.cutoffDay);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cutoffTime:");
    sb.append(this.cutoffTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerQualification:");
    sb.append(this.partnerQualification);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idSet:");
    if (this.idSet == null) {
      sb.append("null");
    } else {
      sb.append(this.idSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTimeStart:");
    sb.append(this.lastModifyTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastModifyTimeEnd:");
    sb.append(this.lastModifyTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeStart:");
    sb.append(this.createTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTimeEnd:");
    sb.append(this.createTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastLoginTimeStart:");
    sb.append(this.lastLoginTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastLoginTimeEnd:");
    sb.append(this.lastLoginTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cutoffDayStart:");
    sb.append(this.cutoffDayStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cutoffDayEnd:");
    sb.append(this.cutoffDayEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cutoffDaySet:");
    if (this.cutoffDaySet == null) {
      sb.append("null");
    } else {
      sb.append(this.cutoffDaySet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cutoffTimeStart:");
    sb.append(this.cutoffTimeStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cutoffTimeEnd:");
    sb.append(this.cutoffTimeEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cutoffTimeSet:");
    if (this.cutoffTimeSet == null) {
      sb.append("null");
    } else {
      sb.append(this.cutoffTimeSet);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerQualificationStart:");
    sb.append(this.partnerQualificationStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("partnerQualificationEnd:");
    sb.append(this.partnerQualificationEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ratingStart:");
    sb.append(this.ratingStart);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ratingEnd:");
    sb.append(this.ratingEnd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("teacherList:");
    if (this.teacherList == null) {
      sb.append("null");
    } else {
      sb.append(this.teacherList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("classPhotoList:");
    if (this.classPhotoList == null) {
      sb.append("null");
    } else {
      sb.append(this.classPhotoList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("addressList:");
    if (this.addressList == null) {
      sb.append("null");
    } else {
      sb.append(this.addressList);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PartnerBoStandardSchemeFactory implements SchemeFactory {
    public PartnerBoStandardScheme getScheme() {
      return new PartnerBoStandardScheme();
    }
  }

  private static class PartnerBoStandardScheme extends StandardScheme<PartnerBo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PartnerBo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // INST_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.instName = iprot.readString();
              struct.setInstNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LOGO_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.logoUrl = iprot.readString();
              struct.setLogoUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CONTRACT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contract = iprot.readString();
              struct.setContractIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // RATING
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.rating = iprot.readDouble();
              struct.setRatingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // LAST_LOGIN_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastLoginTime = iprot.readI64();
              struct.setLastLoginTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LAST_MODIFY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTime = iprot.readI64();
              struct.setLastModifyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ENABLED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.enabled = iprot.readI32();
              struct.setEnabledIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // WHOLE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.wholeName = iprot.readString();
              struct.setWholeNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // LICENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.licence = iprot.readString();
              struct.setLicenceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ORGANIZATION_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.organizationNum = iprot.readString();
              struct.setOrganizationNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // REFERENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reference = iprot.readString();
              struct.setReferenceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PASSWORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.password = iprot.readString();
              struct.setPasswordIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PARTNER_INTRO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.partnerIntro = iprot.readString();
              struct.setPartnerIntroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PARTNER_DISTINCTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.partnerDistinction = iprot.readString();
              struct.setPartnerDistinctionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // LICENCE_IMG_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.licenceImgUrl = iprot.readString();
              struct.setLicenceImgUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // TAX_REG_IMG_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.taxRegImgUrl = iprot.readString();
              struct.setTaxRegImgUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // EDU_QUALIFICATION_IMG_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.eduQualificationImgUrl = iprot.readString();
              struct.setEduQualificationImgUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // HQ_LOCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hqLocation = iprot.readString();
              struct.setHqLocationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // UNI_REG_LOCATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.uniRegLocation = iprot.readI32();
              struct.setUniRegLocationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // HQ_CONTACT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hqContact = iprot.readString();
              struct.setHqContactIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // HQ_CONTACT_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hqContactPhone = iprot.readString();
              struct.setHqContactPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // HQ_CONTACT_SECOPT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hqContactSecopt = iprot.readString();
              struct.setHqContactSecoptIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // COURSE_CONTACT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.courseContact = iprot.readString();
              struct.setCourseContactIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // COURSE_CONTACT_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.courseContactPhone = iprot.readString();
              struct.setCourseContactPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // STUDENT_INQUERY_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.studentInqueryPhone = iprot.readString();
              struct.setStudentInqueryPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // REG_CONTACT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.regContact = iprot.readString();
              struct.setRegContactIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // REG_CONTACT_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.regContactPhone = iprot.readString();
              struct.setRegContactPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // REG_CONTACT_FAX
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.regContactFax = iprot.readString();
              struct.setRegContactFaxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // CUTOFF_DAY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cutoffDay = iprot.readI32();
              struct.setCutoffDayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // CUTOFF_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cutoffTime = iprot.readI32();
              struct.setCutoffTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // PARTNER_QUALIFICATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.partnerQualification = iprot.readI32();
              struct.setPartnerQualificationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set0 = iprot.readSetBegin();
                struct.idSet = new HashSet<Integer>(2*_set0.size);
                for (int _i1 = 0; _i1 < _set0.size; ++_i1)
                {
                  int _elem2;
                  _elem2 = iprot.readI32();
                  struct.idSet.add(_elem2);
                }
                iprot.readSetEnd();
              }
              struct.setIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // LAST_MODIFY_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimeStart = iprot.readI64();
              struct.setLastModifyTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // LAST_MODIFY_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimeEnd = iprot.readI64();
              struct.setLastModifyTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // CREATE_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeStart = iprot.readI64();
              struct.setCreateTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // CREATE_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimeEnd = iprot.readI64();
              struct.setCreateTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // LAST_LOGIN_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastLoginTimeStart = iprot.readI64();
              struct.setLastLoginTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // LAST_LOGIN_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastLoginTimeEnd = iprot.readI64();
              struct.setLastLoginTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // CUTOFF_DAY_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cutoffDayStart = iprot.readI32();
              struct.setCutoffDayStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 42: // CUTOFF_DAY_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cutoffDayEnd = iprot.readI32();
              struct.setCutoffDayEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 43: // CUTOFF_DAY_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set3 = iprot.readSetBegin();
                struct.cutoffDaySet = new HashSet<Integer>(2*_set3.size);
                for (int _i4 = 0; _i4 < _set3.size; ++_i4)
                {
                  int _elem5;
                  _elem5 = iprot.readI32();
                  struct.cutoffDaySet.add(_elem5);
                }
                iprot.readSetEnd();
              }
              struct.setCutoffDaySetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 44: // CUTOFF_TIME_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cutoffTimeStart = iprot.readI32();
              struct.setCutoffTimeStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 45: // CUTOFF_TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cutoffTimeEnd = iprot.readI32();
              struct.setCutoffTimeEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 46: // CUTOFF_TIME_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set6 = iprot.readSetBegin();
                struct.cutoffTimeSet = new HashSet<Integer>(2*_set6.size);
                for (int _i7 = 0; _i7 < _set6.size; ++_i7)
                {
                  int _elem8;
                  _elem8 = iprot.readI32();
                  struct.cutoffTimeSet.add(_elem8);
                }
                iprot.readSetEnd();
              }
              struct.setCutoffTimeSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 47: // PARTNER_QUALIFICATION_START
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.partnerQualificationStart = iprot.readI32();
              struct.setPartnerQualificationStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 48: // PARTNER_QUALIFICATION_END
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.partnerQualificationEnd = iprot.readI32();
              struct.setPartnerQualificationEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 49: // RATING_START
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.ratingStart = iprot.readDouble();
              struct.setRatingStartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 50: // RATING_END
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.ratingEnd = iprot.readDouble();
              struct.setRatingEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 51: // TEACHER_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list9 = iprot.readListBegin();
                struct.teacherList = new ArrayList<com.ishangke.edunav.commoncontract.model.TeacherBo>(_list9.size);
                for (int _i10 = 0; _i10 < _list9.size; ++_i10)
                {
                  com.ishangke.edunav.commoncontract.model.TeacherBo _elem11;
                  _elem11 = new com.ishangke.edunav.commoncontract.model.TeacherBo();
                  _elem11.read(iprot);
                  struct.teacherList.add(_elem11);
                }
                iprot.readListEnd();
              }
              struct.setTeacherListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 52: // CLASS_PHOTO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list12 = iprot.readListBegin();
                struct.classPhotoList = new ArrayList<com.ishangke.edunav.commoncontract.model.ClassPhotoBo>(_list12.size);
                for (int _i13 = 0; _i13 < _list12.size; ++_i13)
                {
                  com.ishangke.edunav.commoncontract.model.ClassPhotoBo _elem14;
                  _elem14 = new com.ishangke.edunav.commoncontract.model.ClassPhotoBo();
                  _elem14.read(iprot);
                  struct.classPhotoList.add(_elem14);
                }
                iprot.readListEnd();
              }
              struct.setClassPhotoListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 53: // ADDRESS_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list15 = iprot.readListBegin();
                struct.addressList = new ArrayList<com.ishangke.edunav.commoncontract.model.AddressBo>(_list15.size);
                for (int _i16 = 0; _i16 < _list15.size; ++_i16)
                {
                  com.ishangke.edunav.commoncontract.model.AddressBo _elem17;
                  _elem17 = new com.ishangke.edunav.commoncontract.model.AddressBo();
                  _elem17.read(iprot);
                  struct.addressList.add(_elem17);
                }
                iprot.readListEnd();
              }
              struct.setAddressListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PartnerBo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      if (struct.instName != null) {
        oprot.writeFieldBegin(INST_NAME_FIELD_DESC);
        oprot.writeString(struct.instName);
        oprot.writeFieldEnd();
      }
      if (struct.logoUrl != null) {
        oprot.writeFieldBegin(LOGO_URL_FIELD_DESC);
        oprot.writeString(struct.logoUrl);
        oprot.writeFieldEnd();
      }
      if (struct.contract != null) {
        oprot.writeFieldBegin(CONTRACT_FIELD_DESC);
        oprot.writeString(struct.contract);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RATING_FIELD_DESC);
      oprot.writeDouble(struct.rating);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_LOGIN_TIME_FIELD_DESC);
      oprot.writeI64(struct.lastLoginTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ENABLED_FIELD_DESC);
      oprot.writeI32(struct.enabled);
      oprot.writeFieldEnd();
      if (struct.wholeName != null) {
        oprot.writeFieldBegin(WHOLE_NAME_FIELD_DESC);
        oprot.writeString(struct.wholeName);
        oprot.writeFieldEnd();
      }
      if (struct.licence != null) {
        oprot.writeFieldBegin(LICENCE_FIELD_DESC);
        oprot.writeString(struct.licence);
        oprot.writeFieldEnd();
      }
      if (struct.organizationNum != null) {
        oprot.writeFieldBegin(ORGANIZATION_NUM_FIELD_DESC);
        oprot.writeString(struct.organizationNum);
        oprot.writeFieldEnd();
      }
      if (struct.reference != null) {
        oprot.writeFieldBegin(REFERENCE_FIELD_DESC);
        oprot.writeString(struct.reference);
        oprot.writeFieldEnd();
      }
      if (struct.password != null) {
        oprot.writeFieldBegin(PASSWORD_FIELD_DESC);
        oprot.writeString(struct.password);
        oprot.writeFieldEnd();
      }
      if (struct.partnerIntro != null) {
        oprot.writeFieldBegin(PARTNER_INTRO_FIELD_DESC);
        oprot.writeString(struct.partnerIntro);
        oprot.writeFieldEnd();
      }
      if (struct.partnerDistinction != null) {
        oprot.writeFieldBegin(PARTNER_DISTINCTION_FIELD_DESC);
        oprot.writeString(struct.partnerDistinction);
        oprot.writeFieldEnd();
      }
      if (struct.licenceImgUrl != null) {
        oprot.writeFieldBegin(LICENCE_IMG_URL_FIELD_DESC);
        oprot.writeString(struct.licenceImgUrl);
        oprot.writeFieldEnd();
      }
      if (struct.taxRegImgUrl != null) {
        oprot.writeFieldBegin(TAX_REG_IMG_URL_FIELD_DESC);
        oprot.writeString(struct.taxRegImgUrl);
        oprot.writeFieldEnd();
      }
      if (struct.eduQualificationImgUrl != null) {
        oprot.writeFieldBegin(EDU_QUALIFICATION_IMG_URL_FIELD_DESC);
        oprot.writeString(struct.eduQualificationImgUrl);
        oprot.writeFieldEnd();
      }
      if (struct.hqLocation != null) {
        oprot.writeFieldBegin(HQ_LOCATION_FIELD_DESC);
        oprot.writeString(struct.hqLocation);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(UNI_REG_LOCATION_FIELD_DESC);
      oprot.writeI32(struct.uniRegLocation);
      oprot.writeFieldEnd();
      if (struct.hqContact != null) {
        oprot.writeFieldBegin(HQ_CONTACT_FIELD_DESC);
        oprot.writeString(struct.hqContact);
        oprot.writeFieldEnd();
      }
      if (struct.hqContactPhone != null) {
        oprot.writeFieldBegin(HQ_CONTACT_PHONE_FIELD_DESC);
        oprot.writeString(struct.hqContactPhone);
        oprot.writeFieldEnd();
      }
      if (struct.hqContactSecopt != null) {
        oprot.writeFieldBegin(HQ_CONTACT_SECOPT_FIELD_DESC);
        oprot.writeString(struct.hqContactSecopt);
        oprot.writeFieldEnd();
      }
      if (struct.courseContact != null) {
        oprot.writeFieldBegin(COURSE_CONTACT_FIELD_DESC);
        oprot.writeString(struct.courseContact);
        oprot.writeFieldEnd();
      }
      if (struct.courseContactPhone != null) {
        oprot.writeFieldBegin(COURSE_CONTACT_PHONE_FIELD_DESC);
        oprot.writeString(struct.courseContactPhone);
        oprot.writeFieldEnd();
      }
      if (struct.studentInqueryPhone != null) {
        oprot.writeFieldBegin(STUDENT_INQUERY_PHONE_FIELD_DESC);
        oprot.writeString(struct.studentInqueryPhone);
        oprot.writeFieldEnd();
      }
      if (struct.regContact != null) {
        oprot.writeFieldBegin(REG_CONTACT_FIELD_DESC);
        oprot.writeString(struct.regContact);
        oprot.writeFieldEnd();
      }
      if (struct.regContactPhone != null) {
        oprot.writeFieldBegin(REG_CONTACT_PHONE_FIELD_DESC);
        oprot.writeString(struct.regContactPhone);
        oprot.writeFieldEnd();
      }
      if (struct.regContactFax != null) {
        oprot.writeFieldBegin(REG_CONTACT_FAX_FIELD_DESC);
        oprot.writeString(struct.regContactFax);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CUTOFF_DAY_FIELD_DESC);
      oprot.writeI32(struct.cutoffDay);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CUTOFF_TIME_FIELD_DESC);
      oprot.writeI32(struct.cutoffTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PARTNER_QUALIFICATION_FIELD_DESC);
      oprot.writeI32(struct.partnerQualification);
      oprot.writeFieldEnd();
      if (struct.idSet != null) {
        oprot.writeFieldBegin(ID_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.idSet.size()));
          for (int _iter18 : struct.idSet)
          {
            oprot.writeI32(_iter18);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LAST_MODIFY_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_MODIFY_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.lastModifyTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.createTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.createTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_LOGIN_TIME_START_FIELD_DESC);
      oprot.writeI64(struct.lastLoginTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_LOGIN_TIME_END_FIELD_DESC);
      oprot.writeI64(struct.lastLoginTimeEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CUTOFF_DAY_START_FIELD_DESC);
      oprot.writeI32(struct.cutoffDayStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CUTOFF_DAY_END_FIELD_DESC);
      oprot.writeI32(struct.cutoffDayEnd);
      oprot.writeFieldEnd();
      if (struct.cutoffDaySet != null) {
        oprot.writeFieldBegin(CUTOFF_DAY_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.cutoffDaySet.size()));
          for (int _iter19 : struct.cutoffDaySet)
          {
            oprot.writeI32(_iter19);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CUTOFF_TIME_START_FIELD_DESC);
      oprot.writeI32(struct.cutoffTimeStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CUTOFF_TIME_END_FIELD_DESC);
      oprot.writeI32(struct.cutoffTimeEnd);
      oprot.writeFieldEnd();
      if (struct.cutoffTimeSet != null) {
        oprot.writeFieldBegin(CUTOFF_TIME_SET_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.cutoffTimeSet.size()));
          for (int _iter20 : struct.cutoffTimeSet)
          {
            oprot.writeI32(_iter20);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PARTNER_QUALIFICATION_START_FIELD_DESC);
      oprot.writeI32(struct.partnerQualificationStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PARTNER_QUALIFICATION_END_FIELD_DESC);
      oprot.writeI32(struct.partnerQualificationEnd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RATING_START_FIELD_DESC);
      oprot.writeDouble(struct.ratingStart);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RATING_END_FIELD_DESC);
      oprot.writeDouble(struct.ratingEnd);
      oprot.writeFieldEnd();
      if (struct.teacherList != null) {
        oprot.writeFieldBegin(TEACHER_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.teacherList.size()));
          for (com.ishangke.edunav.commoncontract.model.TeacherBo _iter21 : struct.teacherList)
          {
            _iter21.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.classPhotoList != null) {
        oprot.writeFieldBegin(CLASS_PHOTO_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.classPhotoList.size()));
          for (com.ishangke.edunav.commoncontract.model.ClassPhotoBo _iter22 : struct.classPhotoList)
          {
            _iter22.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.addressList != null) {
        oprot.writeFieldBegin(ADDRESS_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.addressList.size()));
          for (com.ishangke.edunav.commoncontract.model.AddressBo _iter23 : struct.addressList)
          {
            _iter23.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PartnerBoTupleSchemeFactory implements SchemeFactory {
    public PartnerBoTupleScheme getScheme() {
      return new PartnerBoTupleScheme();
    }
  }

  private static class PartnerBoTupleScheme extends TupleScheme<PartnerBo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PartnerBo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetInstName()) {
        optionals.set(1);
      }
      if (struct.isSetLogoUrl()) {
        optionals.set(2);
      }
      if (struct.isSetContract()) {
        optionals.set(3);
      }
      if (struct.isSetRating()) {
        optionals.set(4);
      }
      if (struct.isSetLastLoginTime()) {
        optionals.set(5);
      }
      if (struct.isSetLastModifyTime()) {
        optionals.set(6);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(7);
      }
      if (struct.isSetEnabled()) {
        optionals.set(8);
      }
      if (struct.isSetWholeName()) {
        optionals.set(9);
      }
      if (struct.isSetLicence()) {
        optionals.set(10);
      }
      if (struct.isSetOrganizationNum()) {
        optionals.set(11);
      }
      if (struct.isSetReference()) {
        optionals.set(12);
      }
      if (struct.isSetPassword()) {
        optionals.set(13);
      }
      if (struct.isSetPartnerIntro()) {
        optionals.set(14);
      }
      if (struct.isSetPartnerDistinction()) {
        optionals.set(15);
      }
      if (struct.isSetLicenceImgUrl()) {
        optionals.set(16);
      }
      if (struct.isSetTaxRegImgUrl()) {
        optionals.set(17);
      }
      if (struct.isSetEduQualificationImgUrl()) {
        optionals.set(18);
      }
      if (struct.isSetHqLocation()) {
        optionals.set(19);
      }
      if (struct.isSetUniRegLocation()) {
        optionals.set(20);
      }
      if (struct.isSetHqContact()) {
        optionals.set(21);
      }
      if (struct.isSetHqContactPhone()) {
        optionals.set(22);
      }
      if (struct.isSetHqContactSecopt()) {
        optionals.set(23);
      }
      if (struct.isSetCourseContact()) {
        optionals.set(24);
      }
      if (struct.isSetCourseContactPhone()) {
        optionals.set(25);
      }
      if (struct.isSetStudentInqueryPhone()) {
        optionals.set(26);
      }
      if (struct.isSetRegContact()) {
        optionals.set(27);
      }
      if (struct.isSetRegContactPhone()) {
        optionals.set(28);
      }
      if (struct.isSetRegContactFax()) {
        optionals.set(29);
      }
      if (struct.isSetCutoffDay()) {
        optionals.set(30);
      }
      if (struct.isSetCutoffTime()) {
        optionals.set(31);
      }
      if (struct.isSetPartnerQualification()) {
        optionals.set(32);
      }
      if (struct.isSetIdSet()) {
        optionals.set(33);
      }
      if (struct.isSetLastModifyTimeStart()) {
        optionals.set(34);
      }
      if (struct.isSetLastModifyTimeEnd()) {
        optionals.set(35);
      }
      if (struct.isSetCreateTimeStart()) {
        optionals.set(36);
      }
      if (struct.isSetCreateTimeEnd()) {
        optionals.set(37);
      }
      if (struct.isSetLastLoginTimeStart()) {
        optionals.set(38);
      }
      if (struct.isSetLastLoginTimeEnd()) {
        optionals.set(39);
      }
      if (struct.isSetCutoffDayStart()) {
        optionals.set(40);
      }
      if (struct.isSetCutoffDayEnd()) {
        optionals.set(41);
      }
      if (struct.isSetCutoffDaySet()) {
        optionals.set(42);
      }
      if (struct.isSetCutoffTimeStart()) {
        optionals.set(43);
      }
      if (struct.isSetCutoffTimeEnd()) {
        optionals.set(44);
      }
      if (struct.isSetCutoffTimeSet()) {
        optionals.set(45);
      }
      if (struct.isSetPartnerQualificationStart()) {
        optionals.set(46);
      }
      if (struct.isSetPartnerQualificationEnd()) {
        optionals.set(47);
      }
      if (struct.isSetRatingStart()) {
        optionals.set(48);
      }
      if (struct.isSetRatingEnd()) {
        optionals.set(49);
      }
      if (struct.isSetTeacherList()) {
        optionals.set(50);
      }
      if (struct.isSetClassPhotoList()) {
        optionals.set(51);
      }
      if (struct.isSetAddressList()) {
        optionals.set(52);
      }
      oprot.writeBitSet(optionals, 53);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetInstName()) {
        oprot.writeString(struct.instName);
      }
      if (struct.isSetLogoUrl()) {
        oprot.writeString(struct.logoUrl);
      }
      if (struct.isSetContract()) {
        oprot.writeString(struct.contract);
      }
      if (struct.isSetRating()) {
        oprot.writeDouble(struct.rating);
      }
      if (struct.isSetLastLoginTime()) {
        oprot.writeI64(struct.lastLoginTime);
      }
      if (struct.isSetLastModifyTime()) {
        oprot.writeI64(struct.lastModifyTime);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetEnabled()) {
        oprot.writeI32(struct.enabled);
      }
      if (struct.isSetWholeName()) {
        oprot.writeString(struct.wholeName);
      }
      if (struct.isSetLicence()) {
        oprot.writeString(struct.licence);
      }
      if (struct.isSetOrganizationNum()) {
        oprot.writeString(struct.organizationNum);
      }
      if (struct.isSetReference()) {
        oprot.writeString(struct.reference);
      }
      if (struct.isSetPassword()) {
        oprot.writeString(struct.password);
      }
      if (struct.isSetPartnerIntro()) {
        oprot.writeString(struct.partnerIntro);
      }
      if (struct.isSetPartnerDistinction()) {
        oprot.writeString(struct.partnerDistinction);
      }
      if (struct.isSetLicenceImgUrl()) {
        oprot.writeString(struct.licenceImgUrl);
      }
      if (struct.isSetTaxRegImgUrl()) {
        oprot.writeString(struct.taxRegImgUrl);
      }
      if (struct.isSetEduQualificationImgUrl()) {
        oprot.writeString(struct.eduQualificationImgUrl);
      }
      if (struct.isSetHqLocation()) {
        oprot.writeString(struct.hqLocation);
      }
      if (struct.isSetUniRegLocation()) {
        oprot.writeI32(struct.uniRegLocation);
      }
      if (struct.isSetHqContact()) {
        oprot.writeString(struct.hqContact);
      }
      if (struct.isSetHqContactPhone()) {
        oprot.writeString(struct.hqContactPhone);
      }
      if (struct.isSetHqContactSecopt()) {
        oprot.writeString(struct.hqContactSecopt);
      }
      if (struct.isSetCourseContact()) {
        oprot.writeString(struct.courseContact);
      }
      if (struct.isSetCourseContactPhone()) {
        oprot.writeString(struct.courseContactPhone);
      }
      if (struct.isSetStudentInqueryPhone()) {
        oprot.writeString(struct.studentInqueryPhone);
      }
      if (struct.isSetRegContact()) {
        oprot.writeString(struct.regContact);
      }
      if (struct.isSetRegContactPhone()) {
        oprot.writeString(struct.regContactPhone);
      }
      if (struct.isSetRegContactFax()) {
        oprot.writeString(struct.regContactFax);
      }
      if (struct.isSetCutoffDay()) {
        oprot.writeI32(struct.cutoffDay);
      }
      if (struct.isSetCutoffTime()) {
        oprot.writeI32(struct.cutoffTime);
      }
      if (struct.isSetPartnerQualification()) {
        oprot.writeI32(struct.partnerQualification);
      }
      if (struct.isSetIdSet()) {
        {
          oprot.writeI32(struct.idSet.size());
          for (int _iter24 : struct.idSet)
          {
            oprot.writeI32(_iter24);
          }
        }
      }
      if (struct.isSetLastModifyTimeStart()) {
        oprot.writeI64(struct.lastModifyTimeStart);
      }
      if (struct.isSetLastModifyTimeEnd()) {
        oprot.writeI64(struct.lastModifyTimeEnd);
      }
      if (struct.isSetCreateTimeStart()) {
        oprot.writeI64(struct.createTimeStart);
      }
      if (struct.isSetCreateTimeEnd()) {
        oprot.writeI64(struct.createTimeEnd);
      }
      if (struct.isSetLastLoginTimeStart()) {
        oprot.writeI64(struct.lastLoginTimeStart);
      }
      if (struct.isSetLastLoginTimeEnd()) {
        oprot.writeI64(struct.lastLoginTimeEnd);
      }
      if (struct.isSetCutoffDayStart()) {
        oprot.writeI32(struct.cutoffDayStart);
      }
      if (struct.isSetCutoffDayEnd()) {
        oprot.writeI32(struct.cutoffDayEnd);
      }
      if (struct.isSetCutoffDaySet()) {
        {
          oprot.writeI32(struct.cutoffDaySet.size());
          for (int _iter25 : struct.cutoffDaySet)
          {
            oprot.writeI32(_iter25);
          }
        }
      }
      if (struct.isSetCutoffTimeStart()) {
        oprot.writeI32(struct.cutoffTimeStart);
      }
      if (struct.isSetCutoffTimeEnd()) {
        oprot.writeI32(struct.cutoffTimeEnd);
      }
      if (struct.isSetCutoffTimeSet()) {
        {
          oprot.writeI32(struct.cutoffTimeSet.size());
          for (int _iter26 : struct.cutoffTimeSet)
          {
            oprot.writeI32(_iter26);
          }
        }
      }
      if (struct.isSetPartnerQualificationStart()) {
        oprot.writeI32(struct.partnerQualificationStart);
      }
      if (struct.isSetPartnerQualificationEnd()) {
        oprot.writeI32(struct.partnerQualificationEnd);
      }
      if (struct.isSetRatingStart()) {
        oprot.writeDouble(struct.ratingStart);
      }
      if (struct.isSetRatingEnd()) {
        oprot.writeDouble(struct.ratingEnd);
      }
      if (struct.isSetTeacherList()) {
        {
          oprot.writeI32(struct.teacherList.size());
          for (com.ishangke.edunav.commoncontract.model.TeacherBo _iter27 : struct.teacherList)
          {
            _iter27.write(oprot);
          }
        }
      }
      if (struct.isSetClassPhotoList()) {
        {
          oprot.writeI32(struct.classPhotoList.size());
          for (com.ishangke.edunav.commoncontract.model.ClassPhotoBo _iter28 : struct.classPhotoList)
          {
            _iter28.write(oprot);
          }
        }
      }
      if (struct.isSetAddressList()) {
        {
          oprot.writeI32(struct.addressList.size());
          for (com.ishangke.edunav.commoncontract.model.AddressBo _iter29 : struct.addressList)
          {
            _iter29.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PartnerBo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(53);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.instName = iprot.readString();
        struct.setInstNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.logoUrl = iprot.readString();
        struct.setLogoUrlIsSet(true);
      }
      if (incoming.get(3)) {
        struct.contract = iprot.readString();
        struct.setContractIsSet(true);
      }
      if (incoming.get(4)) {
        struct.rating = iprot.readDouble();
        struct.setRatingIsSet(true);
      }
      if (incoming.get(5)) {
        struct.lastLoginTime = iprot.readI64();
        struct.setLastLoginTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.lastModifyTime = iprot.readI64();
        struct.setLastModifyTimeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.enabled = iprot.readI32();
        struct.setEnabledIsSet(true);
      }
      if (incoming.get(9)) {
        struct.wholeName = iprot.readString();
        struct.setWholeNameIsSet(true);
      }
      if (incoming.get(10)) {
        struct.licence = iprot.readString();
        struct.setLicenceIsSet(true);
      }
      if (incoming.get(11)) {
        struct.organizationNum = iprot.readString();
        struct.setOrganizationNumIsSet(true);
      }
      if (incoming.get(12)) {
        struct.reference = iprot.readString();
        struct.setReferenceIsSet(true);
      }
      if (incoming.get(13)) {
        struct.password = iprot.readString();
        struct.setPasswordIsSet(true);
      }
      if (incoming.get(14)) {
        struct.partnerIntro = iprot.readString();
        struct.setPartnerIntroIsSet(true);
      }
      if (incoming.get(15)) {
        struct.partnerDistinction = iprot.readString();
        struct.setPartnerDistinctionIsSet(true);
      }
      if (incoming.get(16)) {
        struct.licenceImgUrl = iprot.readString();
        struct.setLicenceImgUrlIsSet(true);
      }
      if (incoming.get(17)) {
        struct.taxRegImgUrl = iprot.readString();
        struct.setTaxRegImgUrlIsSet(true);
      }
      if (incoming.get(18)) {
        struct.eduQualificationImgUrl = iprot.readString();
        struct.setEduQualificationImgUrlIsSet(true);
      }
      if (incoming.get(19)) {
        struct.hqLocation = iprot.readString();
        struct.setHqLocationIsSet(true);
      }
      if (incoming.get(20)) {
        struct.uniRegLocation = iprot.readI32();
        struct.setUniRegLocationIsSet(true);
      }
      if (incoming.get(21)) {
        struct.hqContact = iprot.readString();
        struct.setHqContactIsSet(true);
      }
      if (incoming.get(22)) {
        struct.hqContactPhone = iprot.readString();
        struct.setHqContactPhoneIsSet(true);
      }
      if (incoming.get(23)) {
        struct.hqContactSecopt = iprot.readString();
        struct.setHqContactSecoptIsSet(true);
      }
      if (incoming.get(24)) {
        struct.courseContact = iprot.readString();
        struct.setCourseContactIsSet(true);
      }
      if (incoming.get(25)) {
        struct.courseContactPhone = iprot.readString();
        struct.setCourseContactPhoneIsSet(true);
      }
      if (incoming.get(26)) {
        struct.studentInqueryPhone = iprot.readString();
        struct.setStudentInqueryPhoneIsSet(true);
      }
      if (incoming.get(27)) {
        struct.regContact = iprot.readString();
        struct.setRegContactIsSet(true);
      }
      if (incoming.get(28)) {
        struct.regContactPhone = iprot.readString();
        struct.setRegContactPhoneIsSet(true);
      }
      if (incoming.get(29)) {
        struct.regContactFax = iprot.readString();
        struct.setRegContactFaxIsSet(true);
      }
      if (incoming.get(30)) {
        struct.cutoffDay = iprot.readI32();
        struct.setCutoffDayIsSet(true);
      }
      if (incoming.get(31)) {
        struct.cutoffTime = iprot.readI32();
        struct.setCutoffTimeIsSet(true);
      }
      if (incoming.get(32)) {
        struct.partnerQualification = iprot.readI32();
        struct.setPartnerQualificationIsSet(true);
      }
      if (incoming.get(33)) {
        {
          org.apache.thrift.protocol.TSet _set30 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.idSet = new HashSet<Integer>(2*_set30.size);
          for (int _i31 = 0; _i31 < _set30.size; ++_i31)
          {
            int _elem32;
            _elem32 = iprot.readI32();
            struct.idSet.add(_elem32);
          }
        }
        struct.setIdSetIsSet(true);
      }
      if (incoming.get(34)) {
        struct.lastModifyTimeStart = iprot.readI64();
        struct.setLastModifyTimeStartIsSet(true);
      }
      if (incoming.get(35)) {
        struct.lastModifyTimeEnd = iprot.readI64();
        struct.setLastModifyTimeEndIsSet(true);
      }
      if (incoming.get(36)) {
        struct.createTimeStart = iprot.readI64();
        struct.setCreateTimeStartIsSet(true);
      }
      if (incoming.get(37)) {
        struct.createTimeEnd = iprot.readI64();
        struct.setCreateTimeEndIsSet(true);
      }
      if (incoming.get(38)) {
        struct.lastLoginTimeStart = iprot.readI64();
        struct.setLastLoginTimeStartIsSet(true);
      }
      if (incoming.get(39)) {
        struct.lastLoginTimeEnd = iprot.readI64();
        struct.setLastLoginTimeEndIsSet(true);
      }
      if (incoming.get(40)) {
        struct.cutoffDayStart = iprot.readI32();
        struct.setCutoffDayStartIsSet(true);
      }
      if (incoming.get(41)) {
        struct.cutoffDayEnd = iprot.readI32();
        struct.setCutoffDayEndIsSet(true);
      }
      if (incoming.get(42)) {
        {
          org.apache.thrift.protocol.TSet _set33 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.cutoffDaySet = new HashSet<Integer>(2*_set33.size);
          for (int _i34 = 0; _i34 < _set33.size; ++_i34)
          {
            int _elem35;
            _elem35 = iprot.readI32();
            struct.cutoffDaySet.add(_elem35);
          }
        }
        struct.setCutoffDaySetIsSet(true);
      }
      if (incoming.get(43)) {
        struct.cutoffTimeStart = iprot.readI32();
        struct.setCutoffTimeStartIsSet(true);
      }
      if (incoming.get(44)) {
        struct.cutoffTimeEnd = iprot.readI32();
        struct.setCutoffTimeEndIsSet(true);
      }
      if (incoming.get(45)) {
        {
          org.apache.thrift.protocol.TSet _set36 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.cutoffTimeSet = new HashSet<Integer>(2*_set36.size);
          for (int _i37 = 0; _i37 < _set36.size; ++_i37)
          {
            int _elem38;
            _elem38 = iprot.readI32();
            struct.cutoffTimeSet.add(_elem38);
          }
        }
        struct.setCutoffTimeSetIsSet(true);
      }
      if (incoming.get(46)) {
        struct.partnerQualificationStart = iprot.readI32();
        struct.setPartnerQualificationStartIsSet(true);
      }
      if (incoming.get(47)) {
        struct.partnerQualificationEnd = iprot.readI32();
        struct.setPartnerQualificationEndIsSet(true);
      }
      if (incoming.get(48)) {
        struct.ratingStart = iprot.readDouble();
        struct.setRatingStartIsSet(true);
      }
      if (incoming.get(49)) {
        struct.ratingEnd = iprot.readDouble();
        struct.setRatingEndIsSet(true);
      }
      if (incoming.get(50)) {
        {
          org.apache.thrift.protocol.TList _list39 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.teacherList = new ArrayList<com.ishangke.edunav.commoncontract.model.TeacherBo>(_list39.size);
          for (int _i40 = 0; _i40 < _list39.size; ++_i40)
          {
            com.ishangke.edunav.commoncontract.model.TeacherBo _elem41;
            _elem41 = new com.ishangke.edunav.commoncontract.model.TeacherBo();
            _elem41.read(iprot);
            struct.teacherList.add(_elem41);
          }
        }
        struct.setTeacherListIsSet(true);
      }
      if (incoming.get(51)) {
        {
          org.apache.thrift.protocol.TList _list42 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.classPhotoList = new ArrayList<com.ishangke.edunav.commoncontract.model.ClassPhotoBo>(_list42.size);
          for (int _i43 = 0; _i43 < _list42.size; ++_i43)
          {
            com.ishangke.edunav.commoncontract.model.ClassPhotoBo _elem44;
            _elem44 = new com.ishangke.edunav.commoncontract.model.ClassPhotoBo();
            _elem44.read(iprot);
            struct.classPhotoList.add(_elem44);
          }
        }
        struct.setClassPhotoListIsSet(true);
      }
      if (incoming.get(52)) {
        {
          org.apache.thrift.protocol.TList _list45 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.addressList = new ArrayList<com.ishangke.edunav.commoncontract.model.AddressBo>(_list45.size);
          for (int _i46 = 0; _i46 < _list45.size; ++_i46)
          {
            com.ishangke.edunav.commoncontract.model.AddressBo _elem47;
            _elem47 = new com.ishangke.edunav.commoncontract.model.AddressBo();
            _elem47.read(iprot);
            struct.addressList.add(_elem47);
          }
        }
        struct.setAddressListIsSet(true);
      }
    }
  }

}

